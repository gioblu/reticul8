
syntax = "proto2";
import "nanopb.proto";


//Commands


//DigitalWrite
//Toggle
//Delay
//I2C Read/Write
//Firmware update
//Analog output
//Analog input
//Touch sensor
//Pulse counter
//PWM
//Beeper
//Fade

//}
/*
CMD_BEEP =
CMD_BEEP_ON =
CMD_BEEP_OFF =

CMD_HELLO '!'
CMD_START '$'

CMD_KEY_PRESSED 'k'

CMD_LCD_OFF 'o'
CMD_LCD_DIM 'd'
CMD_LCD_ON 'l'
CMD_LCD_TEXT 't'
CMD_LCD_CLEAR 'c'
CMD_LCD_CHAR_SET 'C'
CMD_LCD_CHAR_USE 'U'

CMD_SUCCESS ':'
CMD_ERROR '-'
*/



enum PinMode {
    INPUT_PULLUP = 1;
    INPUT_PULLDOWN = 2;
    OUTPUT = 3;
}

message GPIO_CONFIG {
    required uint32 pin = 1;
    required PinMode mode = 2;
};

message GPIO_MONITOR {
    required uint32 pin = 1;
    required uint32 debounce_ms = 2;
}

enum PinValue {
    HIGH =1;
    LOW = 2;
}

message GPIO_WRITE {
    required uint32 pin = 1;
    required PinValue value  = 2;
};

message GPIO_READ {
    required uint32 pin = 1;
}


message OTA_UPDATE {
    required string uri =1 [(nanopb).max_size = 200];
}

message PWM_CONFIG {
    required uint32 pin =1;
}

message PWM_DUTY {
    required uint32 pin =1;
    required uint32 duty = 2;
}

message PWM_FADE {
    required uint32 pin = 1;
    required uint32 duty = 2;
    required uint32 fade_ms = 3;

}

message PING {
}


message RPC {
    oneof call {
        GPIO_CONFIG gpio_config = 1;
        GPIO_WRITE gpio_write = 2;
        GPIO_READ gpio_read = 3;
        GPIO_MONITOR gpio_monitor = 4;

        PWM_CONFIG pwm_config = 5;
        PWM_DUTY pwm_duty = 6;
        PWM_FADE pwm_fade = 7;

        PING ping = 8;

        OTA_UPDATE ota_update = 100;
    }
    required uint32 msg_id = 200;
}

enum ResultType {
    RT_UNKNOWN = 1;
    RT_SUCCESS = 2;
    RT_ERROR = 3;
}

enum ResultValue {
    PIN_HIGH = 1;
    PIN_LOW = 2;
}

message Call_Reply
{
    required ResultType result = 1;
    optional ResultValue value = 2;
    required uint32 msg_id = 200;

}

message PinChanged {
    required uint32 pin =1;
    required PinValue value =2;
}

message Event
{
    oneof event {
        PinChanged pin_change = 1;
    }
}