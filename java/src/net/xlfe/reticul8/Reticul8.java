// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: reticul8.proto

package net.xlfe.reticul8;

public final class Reticul8 {
  private Reticul8() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code PIN_MODE}
   */
  public enum PIN_MODE
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>PM_INPUT_PULLUP = 1;</code>
     */
    PM_INPUT_PULLUP(1),
    /**
     * <code>PM_INPUT_PULLDOWN = 2;</code>
     */
    PM_INPUT_PULLDOWN(2),
    /**
     * <code>PM_OUTPUT = 3;</code>
     */
    PM_OUTPUT(3),
    ;

    /**
     * <code>PM_INPUT_PULLUP = 1;</code>
     */
    public static final int PM_INPUT_PULLUP_VALUE = 1;
    /**
     * <code>PM_INPUT_PULLDOWN = 2;</code>
     */
    public static final int PM_INPUT_PULLDOWN_VALUE = 2;
    /**
     * <code>PM_OUTPUT = 3;</code>
     */
    public static final int PM_OUTPUT_VALUE = 3;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static PIN_MODE valueOf(int value) {
      return forNumber(value);
    }

    public static PIN_MODE forNumber(int value) {
      switch (value) {
        case 1: return PM_INPUT_PULLUP;
        case 2: return PM_INPUT_PULLDOWN;
        case 3: return PM_OUTPUT;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<PIN_MODE>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        PIN_MODE> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<PIN_MODE>() {
            public PIN_MODE findValueByNumber(int number) {
              return PIN_MODE.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return net.xlfe.reticul8.Reticul8.getDescriptor().getEnumTypes().get(0);
    }

    private static final PIN_MODE[] VALUES = values();

    public static PIN_MODE valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private PIN_MODE(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:PIN_MODE)
  }

  /**
   * Protobuf enum {@code PIN_VALUE}
   */
  public enum PIN_VALUE
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>PV_LOW = 0;</code>
     */
    PV_LOW(0),
    /**
     * <code>PV_HIGH = 1;</code>
     */
    PV_HIGH(1),
    ;

    /**
     * <code>PV_LOW = 0;</code>
     */
    public static final int PV_LOW_VALUE = 0;
    /**
     * <code>PV_HIGH = 1;</code>
     */
    public static final int PV_HIGH_VALUE = 1;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static PIN_VALUE valueOf(int value) {
      return forNumber(value);
    }

    public static PIN_VALUE forNumber(int value) {
      switch (value) {
        case 0: return PV_LOW;
        case 1: return PV_HIGH;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<PIN_VALUE>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        PIN_VALUE> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<PIN_VALUE>() {
            public PIN_VALUE findValueByNumber(int number) {
              return PIN_VALUE.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return net.xlfe.reticul8.Reticul8.getDescriptor().getEnumTypes().get(1);
    }

    private static final PIN_VALUE[] VALUES = values();

    public static PIN_VALUE valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private PIN_VALUE(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:PIN_VALUE)
  }

  /**
   * Protobuf enum {@code RESULT_TYPE}
   */
  public enum RESULT_TYPE
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>RT_UNKNOWN = 1;</code>
     */
    RT_UNKNOWN(1),
    /**
     * <code>RT_SUCCESS = 2;</code>
     */
    RT_SUCCESS(2),
    /**
     * <code>RT_ERROR = 3;</code>
     */
    RT_ERROR(3),
    ;

    /**
     * <code>RT_UNKNOWN = 1;</code>
     */
    public static final int RT_UNKNOWN_VALUE = 1;
    /**
     * <code>RT_SUCCESS = 2;</code>
     */
    public static final int RT_SUCCESS_VALUE = 2;
    /**
     * <code>RT_ERROR = 3;</code>
     */
    public static final int RT_ERROR_VALUE = 3;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static RESULT_TYPE valueOf(int value) {
      return forNumber(value);
    }

    public static RESULT_TYPE forNumber(int value) {
      switch (value) {
        case 1: return RT_UNKNOWN;
        case 2: return RT_SUCCESS;
        case 3: return RT_ERROR;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<RESULT_TYPE>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        RESULT_TYPE> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<RESULT_TYPE>() {
            public RESULT_TYPE findValueByNumber(int number) {
              return RESULT_TYPE.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return net.xlfe.reticul8.Reticul8.getDescriptor().getEnumTypes().get(2);
    }

    private static final RESULT_TYPE[] VALUES = values();

    public static RESULT_TYPE valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private RESULT_TYPE(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:RESULT_TYPE)
  }

  /**
   * Protobuf enum {@code STARTUP_REASON}
   */
  public enum STARTUP_REASON
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>SR_UNKNOWN = 1;</code>
     */
    SR_UNKNOWN(1),
    /**
     * <code>ESP32_POWERON_RESET = 2;</code>
     */
    ESP32_POWERON_RESET(2),
    /**
     * <code>ESP32_SW_RESET = 3;</code>
     */
    ESP32_SW_RESET(3),
    /**
     * <code>ESP32_OWDT_RESET = 4;</code>
     */
    ESP32_OWDT_RESET(4),
    /**
     * <code>ESP32_DEEPSLEEP_RESET = 5;</code>
     */
    ESP32_DEEPSLEEP_RESET(5),
    /**
     * <code>ESP32_SDIO_RESET = 6;</code>
     */
    ESP32_SDIO_RESET(6),
    /**
     * <code>ESP32_TG0WDT_SYS_RESET = 7;</code>
     */
    ESP32_TG0WDT_SYS_RESET(7),
    /**
     * <code>ESP32_TG1WDT_SYS_RESET = 8;</code>
     */
    ESP32_TG1WDT_SYS_RESET(8),
    /**
     * <code>ESP32_RTCWDT_SYS_RESET = 9;</code>
     */
    ESP32_RTCWDT_SYS_RESET(9),
    /**
     * <code>ESP32_INTRUSION_RESET = 10;</code>
     */
    ESP32_INTRUSION_RESET(10),
    /**
     * <code>ESP32_TGWDT_CPU_RESET = 11;</code>
     */
    ESP32_TGWDT_CPU_RESET(11),
    /**
     * <code>ESP32_SW_CPU_RESET = 12;</code>
     */
    ESP32_SW_CPU_RESET(12),
    /**
     * <code>ESP32_RTCWDT_CPU_RESET = 13;</code>
     */
    ESP32_RTCWDT_CPU_RESET(13),
    /**
     * <code>ESP32_EXT_CPU_RESET = 14;</code>
     */
    ESP32_EXT_CPU_RESET(14),
    /**
     * <code>ESP32_RTCWDT_BROWN_OUT_RESET = 15;</code>
     */
    ESP32_RTCWDT_BROWN_OUT_RESET(15),
    /**
     * <code>ESP32_RTCWDT_RTC_RESET = 16;</code>
     */
    ESP32_RTCWDT_RTC_RESET(16),
    ;

    /**
     * <code>SR_UNKNOWN = 1;</code>
     */
    public static final int SR_UNKNOWN_VALUE = 1;
    /**
     * <code>ESP32_POWERON_RESET = 2;</code>
     */
    public static final int ESP32_POWERON_RESET_VALUE = 2;
    /**
     * <code>ESP32_SW_RESET = 3;</code>
     */
    public static final int ESP32_SW_RESET_VALUE = 3;
    /**
     * <code>ESP32_OWDT_RESET = 4;</code>
     */
    public static final int ESP32_OWDT_RESET_VALUE = 4;
    /**
     * <code>ESP32_DEEPSLEEP_RESET = 5;</code>
     */
    public static final int ESP32_DEEPSLEEP_RESET_VALUE = 5;
    /**
     * <code>ESP32_SDIO_RESET = 6;</code>
     */
    public static final int ESP32_SDIO_RESET_VALUE = 6;
    /**
     * <code>ESP32_TG0WDT_SYS_RESET = 7;</code>
     */
    public static final int ESP32_TG0WDT_SYS_RESET_VALUE = 7;
    /**
     * <code>ESP32_TG1WDT_SYS_RESET = 8;</code>
     */
    public static final int ESP32_TG1WDT_SYS_RESET_VALUE = 8;
    /**
     * <code>ESP32_RTCWDT_SYS_RESET = 9;</code>
     */
    public static final int ESP32_RTCWDT_SYS_RESET_VALUE = 9;
    /**
     * <code>ESP32_INTRUSION_RESET = 10;</code>
     */
    public static final int ESP32_INTRUSION_RESET_VALUE = 10;
    /**
     * <code>ESP32_TGWDT_CPU_RESET = 11;</code>
     */
    public static final int ESP32_TGWDT_CPU_RESET_VALUE = 11;
    /**
     * <code>ESP32_SW_CPU_RESET = 12;</code>
     */
    public static final int ESP32_SW_CPU_RESET_VALUE = 12;
    /**
     * <code>ESP32_RTCWDT_CPU_RESET = 13;</code>
     */
    public static final int ESP32_RTCWDT_CPU_RESET_VALUE = 13;
    /**
     * <code>ESP32_EXT_CPU_RESET = 14;</code>
     */
    public static final int ESP32_EXT_CPU_RESET_VALUE = 14;
    /**
     * <code>ESP32_RTCWDT_BROWN_OUT_RESET = 15;</code>
     */
    public static final int ESP32_RTCWDT_BROWN_OUT_RESET_VALUE = 15;
    /**
     * <code>ESP32_RTCWDT_RTC_RESET = 16;</code>
     */
    public static final int ESP32_RTCWDT_RTC_RESET_VALUE = 16;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static STARTUP_REASON valueOf(int value) {
      return forNumber(value);
    }

    public static STARTUP_REASON forNumber(int value) {
      switch (value) {
        case 1: return SR_UNKNOWN;
        case 2: return ESP32_POWERON_RESET;
        case 3: return ESP32_SW_RESET;
        case 4: return ESP32_OWDT_RESET;
        case 5: return ESP32_DEEPSLEEP_RESET;
        case 6: return ESP32_SDIO_RESET;
        case 7: return ESP32_TG0WDT_SYS_RESET;
        case 8: return ESP32_TG1WDT_SYS_RESET;
        case 9: return ESP32_RTCWDT_SYS_RESET;
        case 10: return ESP32_INTRUSION_RESET;
        case 11: return ESP32_TGWDT_CPU_RESET;
        case 12: return ESP32_SW_CPU_RESET;
        case 13: return ESP32_RTCWDT_CPU_RESET;
        case 14: return ESP32_EXT_CPU_RESET;
        case 15: return ESP32_RTCWDT_BROWN_OUT_RESET;
        case 16: return ESP32_RTCWDT_RTC_RESET;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<STARTUP_REASON>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        STARTUP_REASON> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<STARTUP_REASON>() {
            public STARTUP_REASON findValueByNumber(int number) {
              return STARTUP_REASON.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return net.xlfe.reticul8.Reticul8.getDescriptor().getEnumTypes().get(3);
    }

    private static final STARTUP_REASON[] VALUES = values();

    public static STARTUP_REASON valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private STARTUP_REASON(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:STARTUP_REASON)
  }

  public interface GPIO_CONFIGOrBuilder extends
      // @@protoc_insertion_point(interface_extends:GPIO_CONFIG)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required fixed32 pin = 1;</code>
     */
    boolean hasPin();
    /**
     * <code>required fixed32 pin = 1;</code>
     */
    int getPin();

    /**
     * <code>required .PIN_MODE mode = 2;</code>
     */
    boolean hasMode();
    /**
     * <code>required .PIN_MODE mode = 2;</code>
     */
    net.xlfe.reticul8.Reticul8.PIN_MODE getMode();
  }
  /**
   * Protobuf type {@code GPIO_CONFIG}
   */
  public  static final class GPIO_CONFIG extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:GPIO_CONFIG)
      GPIO_CONFIGOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use GPIO_CONFIG.newBuilder() to construct.
    private GPIO_CONFIG(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private GPIO_CONFIG() {
      pin_ = 0;
      mode_ = 1;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private GPIO_CONFIG(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 13: {
              bitField0_ |= 0x00000001;
              pin_ = input.readFixed32();
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
                @SuppressWarnings("deprecation")
              net.xlfe.reticul8.Reticul8.PIN_MODE value = net.xlfe.reticul8.Reticul8.PIN_MODE.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                mode_ = rawValue;
              }
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.xlfe.reticul8.Reticul8.internal_static_GPIO_CONFIG_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.xlfe.reticul8.Reticul8.internal_static_GPIO_CONFIG_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              net.xlfe.reticul8.Reticul8.GPIO_CONFIG.class, net.xlfe.reticul8.Reticul8.GPIO_CONFIG.Builder.class);
    }

    private int bitField0_;
    public static final int PIN_FIELD_NUMBER = 1;
    private int pin_;
    /**
     * <code>required fixed32 pin = 1;</code>
     */
    public boolean hasPin() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required fixed32 pin = 1;</code>
     */
    public int getPin() {
      return pin_;
    }

    public static final int MODE_FIELD_NUMBER = 2;
    private int mode_;
    /**
     * <code>required .PIN_MODE mode = 2;</code>
     */
    public boolean hasMode() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .PIN_MODE mode = 2;</code>
     */
    public net.xlfe.reticul8.Reticul8.PIN_MODE getMode() {
      @SuppressWarnings("deprecation")
      net.xlfe.reticul8.Reticul8.PIN_MODE result = net.xlfe.reticul8.Reticul8.PIN_MODE.valueOf(mode_);
      return result == null ? net.xlfe.reticul8.Reticul8.PIN_MODE.PM_INPUT_PULLUP : result;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasPin()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMode()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeFixed32(1, pin_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, mode_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(1, pin_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, mode_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof net.xlfe.reticul8.Reticul8.GPIO_CONFIG)) {
        return super.equals(obj);
      }
      net.xlfe.reticul8.Reticul8.GPIO_CONFIG other = (net.xlfe.reticul8.Reticul8.GPIO_CONFIG) obj;

      boolean result = true;
      result = result && (hasPin() == other.hasPin());
      if (hasPin()) {
        result = result && (getPin()
            == other.getPin());
      }
      result = result && (hasMode() == other.hasMode());
      if (hasMode()) {
        result = result && mode_ == other.mode_;
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasPin()) {
        hash = (37 * hash) + PIN_FIELD_NUMBER;
        hash = (53 * hash) + getPin();
      }
      if (hasMode()) {
        hash = (37 * hash) + MODE_FIELD_NUMBER;
        hash = (53 * hash) + mode_;
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static net.xlfe.reticul8.Reticul8.GPIO_CONFIG parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.xlfe.reticul8.Reticul8.GPIO_CONFIG parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.xlfe.reticul8.Reticul8.GPIO_CONFIG parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.xlfe.reticul8.Reticul8.GPIO_CONFIG parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.xlfe.reticul8.Reticul8.GPIO_CONFIG parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.xlfe.reticul8.Reticul8.GPIO_CONFIG parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.xlfe.reticul8.Reticul8.GPIO_CONFIG parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.xlfe.reticul8.Reticul8.GPIO_CONFIG parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.xlfe.reticul8.Reticul8.GPIO_CONFIG parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static net.xlfe.reticul8.Reticul8.GPIO_CONFIG parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.xlfe.reticul8.Reticul8.GPIO_CONFIG parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.xlfe.reticul8.Reticul8.GPIO_CONFIG parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(net.xlfe.reticul8.Reticul8.GPIO_CONFIG prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code GPIO_CONFIG}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:GPIO_CONFIG)
        net.xlfe.reticul8.Reticul8.GPIO_CONFIGOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.xlfe.reticul8.Reticul8.internal_static_GPIO_CONFIG_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.xlfe.reticul8.Reticul8.internal_static_GPIO_CONFIG_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                net.xlfe.reticul8.Reticul8.GPIO_CONFIG.class, net.xlfe.reticul8.Reticul8.GPIO_CONFIG.Builder.class);
      }

      // Construct using net.xlfe.reticul8.Reticul8.GPIO_CONFIG.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        pin_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        mode_ = 1;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.xlfe.reticul8.Reticul8.internal_static_GPIO_CONFIG_descriptor;
      }

      @java.lang.Override
      public net.xlfe.reticul8.Reticul8.GPIO_CONFIG getDefaultInstanceForType() {
        return net.xlfe.reticul8.Reticul8.GPIO_CONFIG.getDefaultInstance();
      }

      @java.lang.Override
      public net.xlfe.reticul8.Reticul8.GPIO_CONFIG build() {
        net.xlfe.reticul8.Reticul8.GPIO_CONFIG result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public net.xlfe.reticul8.Reticul8.GPIO_CONFIG buildPartial() {
        net.xlfe.reticul8.Reticul8.GPIO_CONFIG result = new net.xlfe.reticul8.Reticul8.GPIO_CONFIG(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.pin_ = pin_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.mode_ = mode_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.xlfe.reticul8.Reticul8.GPIO_CONFIG) {
          return mergeFrom((net.xlfe.reticul8.Reticul8.GPIO_CONFIG)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(net.xlfe.reticul8.Reticul8.GPIO_CONFIG other) {
        if (other == net.xlfe.reticul8.Reticul8.GPIO_CONFIG.getDefaultInstance()) return this;
        if (other.hasPin()) {
          setPin(other.getPin());
        }
        if (other.hasMode()) {
          setMode(other.getMode());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasPin()) {
          return false;
        }
        if (!hasMode()) {
          return false;
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        net.xlfe.reticul8.Reticul8.GPIO_CONFIG parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (net.xlfe.reticul8.Reticul8.GPIO_CONFIG) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int pin_ ;
      /**
       * <code>required fixed32 pin = 1;</code>
       */
      public boolean hasPin() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required fixed32 pin = 1;</code>
       */
      public int getPin() {
        return pin_;
      }
      /**
       * <code>required fixed32 pin = 1;</code>
       */
      public Builder setPin(int value) {
        bitField0_ |= 0x00000001;
        pin_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required fixed32 pin = 1;</code>
       */
      public Builder clearPin() {
        bitField0_ = (bitField0_ & ~0x00000001);
        pin_ = 0;
        onChanged();
        return this;
      }

      private int mode_ = 1;
      /**
       * <code>required .PIN_MODE mode = 2;</code>
       */
      public boolean hasMode() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .PIN_MODE mode = 2;</code>
       */
      public net.xlfe.reticul8.Reticul8.PIN_MODE getMode() {
        @SuppressWarnings("deprecation")
        net.xlfe.reticul8.Reticul8.PIN_MODE result = net.xlfe.reticul8.Reticul8.PIN_MODE.valueOf(mode_);
        return result == null ? net.xlfe.reticul8.Reticul8.PIN_MODE.PM_INPUT_PULLUP : result;
      }
      /**
       * <code>required .PIN_MODE mode = 2;</code>
       */
      public Builder setMode(net.xlfe.reticul8.Reticul8.PIN_MODE value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        mode_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>required .PIN_MODE mode = 2;</code>
       */
      public Builder clearMode() {
        bitField0_ = (bitField0_ & ~0x00000002);
        mode_ = 1;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:GPIO_CONFIG)
    }

    // @@protoc_insertion_point(class_scope:GPIO_CONFIG)
    private static final net.xlfe.reticul8.Reticul8.GPIO_CONFIG DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new net.xlfe.reticul8.Reticul8.GPIO_CONFIG();
    }

    public static net.xlfe.reticul8.Reticul8.GPIO_CONFIG getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<GPIO_CONFIG>
        PARSER = new com.google.protobuf.AbstractParser<GPIO_CONFIG>() {
      @java.lang.Override
      public GPIO_CONFIG parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GPIO_CONFIG(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<GPIO_CONFIG> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GPIO_CONFIG> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public net.xlfe.reticul8.Reticul8.GPIO_CONFIG getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface GPIO_MONITOROrBuilder extends
      // @@protoc_insertion_point(interface_extends:GPIO_MONITOR)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required fixed32 pin = 1;</code>
     */
    boolean hasPin();
    /**
     * <code>required fixed32 pin = 1;</code>
     */
    int getPin();

    /**
     * <code>required fixed32 debounce_ms = 2;</code>
     */
    boolean hasDebounceMs();
    /**
     * <code>required fixed32 debounce_ms = 2;</code>
     */
    int getDebounceMs();
  }
  /**
   * Protobuf type {@code GPIO_MONITOR}
   */
  public  static final class GPIO_MONITOR extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:GPIO_MONITOR)
      GPIO_MONITOROrBuilder {
  private static final long serialVersionUID = 0L;
    // Use GPIO_MONITOR.newBuilder() to construct.
    private GPIO_MONITOR(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private GPIO_MONITOR() {
      pin_ = 0;
      debounceMs_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private GPIO_MONITOR(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 13: {
              bitField0_ |= 0x00000001;
              pin_ = input.readFixed32();
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              debounceMs_ = input.readFixed32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.xlfe.reticul8.Reticul8.internal_static_GPIO_MONITOR_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.xlfe.reticul8.Reticul8.internal_static_GPIO_MONITOR_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              net.xlfe.reticul8.Reticul8.GPIO_MONITOR.class, net.xlfe.reticul8.Reticul8.GPIO_MONITOR.Builder.class);
    }

    private int bitField0_;
    public static final int PIN_FIELD_NUMBER = 1;
    private int pin_;
    /**
     * <code>required fixed32 pin = 1;</code>
     */
    public boolean hasPin() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required fixed32 pin = 1;</code>
     */
    public int getPin() {
      return pin_;
    }

    public static final int DEBOUNCE_MS_FIELD_NUMBER = 2;
    private int debounceMs_;
    /**
     * <code>required fixed32 debounce_ms = 2;</code>
     */
    public boolean hasDebounceMs() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required fixed32 debounce_ms = 2;</code>
     */
    public int getDebounceMs() {
      return debounceMs_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasPin()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDebounceMs()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeFixed32(1, pin_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFixed32(2, debounceMs_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(1, pin_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(2, debounceMs_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof net.xlfe.reticul8.Reticul8.GPIO_MONITOR)) {
        return super.equals(obj);
      }
      net.xlfe.reticul8.Reticul8.GPIO_MONITOR other = (net.xlfe.reticul8.Reticul8.GPIO_MONITOR) obj;

      boolean result = true;
      result = result && (hasPin() == other.hasPin());
      if (hasPin()) {
        result = result && (getPin()
            == other.getPin());
      }
      result = result && (hasDebounceMs() == other.hasDebounceMs());
      if (hasDebounceMs()) {
        result = result && (getDebounceMs()
            == other.getDebounceMs());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasPin()) {
        hash = (37 * hash) + PIN_FIELD_NUMBER;
        hash = (53 * hash) + getPin();
      }
      if (hasDebounceMs()) {
        hash = (37 * hash) + DEBOUNCE_MS_FIELD_NUMBER;
        hash = (53 * hash) + getDebounceMs();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static net.xlfe.reticul8.Reticul8.GPIO_MONITOR parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.xlfe.reticul8.Reticul8.GPIO_MONITOR parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.xlfe.reticul8.Reticul8.GPIO_MONITOR parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.xlfe.reticul8.Reticul8.GPIO_MONITOR parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.xlfe.reticul8.Reticul8.GPIO_MONITOR parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.xlfe.reticul8.Reticul8.GPIO_MONITOR parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.xlfe.reticul8.Reticul8.GPIO_MONITOR parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.xlfe.reticul8.Reticul8.GPIO_MONITOR parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.xlfe.reticul8.Reticul8.GPIO_MONITOR parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static net.xlfe.reticul8.Reticul8.GPIO_MONITOR parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.xlfe.reticul8.Reticul8.GPIO_MONITOR parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.xlfe.reticul8.Reticul8.GPIO_MONITOR parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(net.xlfe.reticul8.Reticul8.GPIO_MONITOR prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code GPIO_MONITOR}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:GPIO_MONITOR)
        net.xlfe.reticul8.Reticul8.GPIO_MONITOROrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.xlfe.reticul8.Reticul8.internal_static_GPIO_MONITOR_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.xlfe.reticul8.Reticul8.internal_static_GPIO_MONITOR_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                net.xlfe.reticul8.Reticul8.GPIO_MONITOR.class, net.xlfe.reticul8.Reticul8.GPIO_MONITOR.Builder.class);
      }

      // Construct using net.xlfe.reticul8.Reticul8.GPIO_MONITOR.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        pin_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        debounceMs_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.xlfe.reticul8.Reticul8.internal_static_GPIO_MONITOR_descriptor;
      }

      @java.lang.Override
      public net.xlfe.reticul8.Reticul8.GPIO_MONITOR getDefaultInstanceForType() {
        return net.xlfe.reticul8.Reticul8.GPIO_MONITOR.getDefaultInstance();
      }

      @java.lang.Override
      public net.xlfe.reticul8.Reticul8.GPIO_MONITOR build() {
        net.xlfe.reticul8.Reticul8.GPIO_MONITOR result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public net.xlfe.reticul8.Reticul8.GPIO_MONITOR buildPartial() {
        net.xlfe.reticul8.Reticul8.GPIO_MONITOR result = new net.xlfe.reticul8.Reticul8.GPIO_MONITOR(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.pin_ = pin_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.debounceMs_ = debounceMs_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.xlfe.reticul8.Reticul8.GPIO_MONITOR) {
          return mergeFrom((net.xlfe.reticul8.Reticul8.GPIO_MONITOR)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(net.xlfe.reticul8.Reticul8.GPIO_MONITOR other) {
        if (other == net.xlfe.reticul8.Reticul8.GPIO_MONITOR.getDefaultInstance()) return this;
        if (other.hasPin()) {
          setPin(other.getPin());
        }
        if (other.hasDebounceMs()) {
          setDebounceMs(other.getDebounceMs());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasPin()) {
          return false;
        }
        if (!hasDebounceMs()) {
          return false;
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        net.xlfe.reticul8.Reticul8.GPIO_MONITOR parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (net.xlfe.reticul8.Reticul8.GPIO_MONITOR) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int pin_ ;
      /**
       * <code>required fixed32 pin = 1;</code>
       */
      public boolean hasPin() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required fixed32 pin = 1;</code>
       */
      public int getPin() {
        return pin_;
      }
      /**
       * <code>required fixed32 pin = 1;</code>
       */
      public Builder setPin(int value) {
        bitField0_ |= 0x00000001;
        pin_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required fixed32 pin = 1;</code>
       */
      public Builder clearPin() {
        bitField0_ = (bitField0_ & ~0x00000001);
        pin_ = 0;
        onChanged();
        return this;
      }

      private int debounceMs_ ;
      /**
       * <code>required fixed32 debounce_ms = 2;</code>
       */
      public boolean hasDebounceMs() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required fixed32 debounce_ms = 2;</code>
       */
      public int getDebounceMs() {
        return debounceMs_;
      }
      /**
       * <code>required fixed32 debounce_ms = 2;</code>
       */
      public Builder setDebounceMs(int value) {
        bitField0_ |= 0x00000002;
        debounceMs_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required fixed32 debounce_ms = 2;</code>
       */
      public Builder clearDebounceMs() {
        bitField0_ = (bitField0_ & ~0x00000002);
        debounceMs_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:GPIO_MONITOR)
    }

    // @@protoc_insertion_point(class_scope:GPIO_MONITOR)
    private static final net.xlfe.reticul8.Reticul8.GPIO_MONITOR DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new net.xlfe.reticul8.Reticul8.GPIO_MONITOR();
    }

    public static net.xlfe.reticul8.Reticul8.GPIO_MONITOR getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<GPIO_MONITOR>
        PARSER = new com.google.protobuf.AbstractParser<GPIO_MONITOR>() {
      @java.lang.Override
      public GPIO_MONITOR parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GPIO_MONITOR(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<GPIO_MONITOR> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GPIO_MONITOR> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public net.xlfe.reticul8.Reticul8.GPIO_MONITOR getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface GPIO_WRITEOrBuilder extends
      // @@protoc_insertion_point(interface_extends:GPIO_WRITE)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required fixed32 pin = 1;</code>
     */
    boolean hasPin();
    /**
     * <code>required fixed32 pin = 1;</code>
     */
    int getPin();

    /**
     * <code>required .PIN_VALUE value = 2;</code>
     */
    boolean hasValue();
    /**
     * <code>required .PIN_VALUE value = 2;</code>
     */
    net.xlfe.reticul8.Reticul8.PIN_VALUE getValue();
  }
  /**
   * Protobuf type {@code GPIO_WRITE}
   */
  public  static final class GPIO_WRITE extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:GPIO_WRITE)
      GPIO_WRITEOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use GPIO_WRITE.newBuilder() to construct.
    private GPIO_WRITE(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private GPIO_WRITE() {
      pin_ = 0;
      value_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private GPIO_WRITE(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 13: {
              bitField0_ |= 0x00000001;
              pin_ = input.readFixed32();
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
                @SuppressWarnings("deprecation")
              net.xlfe.reticul8.Reticul8.PIN_VALUE value = net.xlfe.reticul8.Reticul8.PIN_VALUE.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                value_ = rawValue;
              }
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.xlfe.reticul8.Reticul8.internal_static_GPIO_WRITE_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.xlfe.reticul8.Reticul8.internal_static_GPIO_WRITE_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              net.xlfe.reticul8.Reticul8.GPIO_WRITE.class, net.xlfe.reticul8.Reticul8.GPIO_WRITE.Builder.class);
    }

    private int bitField0_;
    public static final int PIN_FIELD_NUMBER = 1;
    private int pin_;
    /**
     * <code>required fixed32 pin = 1;</code>
     */
    public boolean hasPin() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required fixed32 pin = 1;</code>
     */
    public int getPin() {
      return pin_;
    }

    public static final int VALUE_FIELD_NUMBER = 2;
    private int value_;
    /**
     * <code>required .PIN_VALUE value = 2;</code>
     */
    public boolean hasValue() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .PIN_VALUE value = 2;</code>
     */
    public net.xlfe.reticul8.Reticul8.PIN_VALUE getValue() {
      @SuppressWarnings("deprecation")
      net.xlfe.reticul8.Reticul8.PIN_VALUE result = net.xlfe.reticul8.Reticul8.PIN_VALUE.valueOf(value_);
      return result == null ? net.xlfe.reticul8.Reticul8.PIN_VALUE.PV_LOW : result;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasPin()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasValue()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeFixed32(1, pin_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, value_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(1, pin_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, value_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof net.xlfe.reticul8.Reticul8.GPIO_WRITE)) {
        return super.equals(obj);
      }
      net.xlfe.reticul8.Reticul8.GPIO_WRITE other = (net.xlfe.reticul8.Reticul8.GPIO_WRITE) obj;

      boolean result = true;
      result = result && (hasPin() == other.hasPin());
      if (hasPin()) {
        result = result && (getPin()
            == other.getPin());
      }
      result = result && (hasValue() == other.hasValue());
      if (hasValue()) {
        result = result && value_ == other.value_;
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasPin()) {
        hash = (37 * hash) + PIN_FIELD_NUMBER;
        hash = (53 * hash) + getPin();
      }
      if (hasValue()) {
        hash = (37 * hash) + VALUE_FIELD_NUMBER;
        hash = (53 * hash) + value_;
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static net.xlfe.reticul8.Reticul8.GPIO_WRITE parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.xlfe.reticul8.Reticul8.GPIO_WRITE parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.xlfe.reticul8.Reticul8.GPIO_WRITE parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.xlfe.reticul8.Reticul8.GPIO_WRITE parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.xlfe.reticul8.Reticul8.GPIO_WRITE parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.xlfe.reticul8.Reticul8.GPIO_WRITE parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.xlfe.reticul8.Reticul8.GPIO_WRITE parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.xlfe.reticul8.Reticul8.GPIO_WRITE parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.xlfe.reticul8.Reticul8.GPIO_WRITE parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static net.xlfe.reticul8.Reticul8.GPIO_WRITE parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.xlfe.reticul8.Reticul8.GPIO_WRITE parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.xlfe.reticul8.Reticul8.GPIO_WRITE parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(net.xlfe.reticul8.Reticul8.GPIO_WRITE prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code GPIO_WRITE}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:GPIO_WRITE)
        net.xlfe.reticul8.Reticul8.GPIO_WRITEOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.xlfe.reticul8.Reticul8.internal_static_GPIO_WRITE_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.xlfe.reticul8.Reticul8.internal_static_GPIO_WRITE_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                net.xlfe.reticul8.Reticul8.GPIO_WRITE.class, net.xlfe.reticul8.Reticul8.GPIO_WRITE.Builder.class);
      }

      // Construct using net.xlfe.reticul8.Reticul8.GPIO_WRITE.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        pin_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        value_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.xlfe.reticul8.Reticul8.internal_static_GPIO_WRITE_descriptor;
      }

      @java.lang.Override
      public net.xlfe.reticul8.Reticul8.GPIO_WRITE getDefaultInstanceForType() {
        return net.xlfe.reticul8.Reticul8.GPIO_WRITE.getDefaultInstance();
      }

      @java.lang.Override
      public net.xlfe.reticul8.Reticul8.GPIO_WRITE build() {
        net.xlfe.reticul8.Reticul8.GPIO_WRITE result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public net.xlfe.reticul8.Reticul8.GPIO_WRITE buildPartial() {
        net.xlfe.reticul8.Reticul8.GPIO_WRITE result = new net.xlfe.reticul8.Reticul8.GPIO_WRITE(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.pin_ = pin_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.value_ = value_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.xlfe.reticul8.Reticul8.GPIO_WRITE) {
          return mergeFrom((net.xlfe.reticul8.Reticul8.GPIO_WRITE)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(net.xlfe.reticul8.Reticul8.GPIO_WRITE other) {
        if (other == net.xlfe.reticul8.Reticul8.GPIO_WRITE.getDefaultInstance()) return this;
        if (other.hasPin()) {
          setPin(other.getPin());
        }
        if (other.hasValue()) {
          setValue(other.getValue());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasPin()) {
          return false;
        }
        if (!hasValue()) {
          return false;
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        net.xlfe.reticul8.Reticul8.GPIO_WRITE parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (net.xlfe.reticul8.Reticul8.GPIO_WRITE) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int pin_ ;
      /**
       * <code>required fixed32 pin = 1;</code>
       */
      public boolean hasPin() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required fixed32 pin = 1;</code>
       */
      public int getPin() {
        return pin_;
      }
      /**
       * <code>required fixed32 pin = 1;</code>
       */
      public Builder setPin(int value) {
        bitField0_ |= 0x00000001;
        pin_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required fixed32 pin = 1;</code>
       */
      public Builder clearPin() {
        bitField0_ = (bitField0_ & ~0x00000001);
        pin_ = 0;
        onChanged();
        return this;
      }

      private int value_ = 0;
      /**
       * <code>required .PIN_VALUE value = 2;</code>
       */
      public boolean hasValue() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .PIN_VALUE value = 2;</code>
       */
      public net.xlfe.reticul8.Reticul8.PIN_VALUE getValue() {
        @SuppressWarnings("deprecation")
        net.xlfe.reticul8.Reticul8.PIN_VALUE result = net.xlfe.reticul8.Reticul8.PIN_VALUE.valueOf(value_);
        return result == null ? net.xlfe.reticul8.Reticul8.PIN_VALUE.PV_LOW : result;
      }
      /**
       * <code>required .PIN_VALUE value = 2;</code>
       */
      public Builder setValue(net.xlfe.reticul8.Reticul8.PIN_VALUE value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        value_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>required .PIN_VALUE value = 2;</code>
       */
      public Builder clearValue() {
        bitField0_ = (bitField0_ & ~0x00000002);
        value_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:GPIO_WRITE)
    }

    // @@protoc_insertion_point(class_scope:GPIO_WRITE)
    private static final net.xlfe.reticul8.Reticul8.GPIO_WRITE DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new net.xlfe.reticul8.Reticul8.GPIO_WRITE();
    }

    public static net.xlfe.reticul8.Reticul8.GPIO_WRITE getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<GPIO_WRITE>
        PARSER = new com.google.protobuf.AbstractParser<GPIO_WRITE>() {
      @java.lang.Override
      public GPIO_WRITE parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GPIO_WRITE(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<GPIO_WRITE> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GPIO_WRITE> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public net.xlfe.reticul8.Reticul8.GPIO_WRITE getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface GPIO_READOrBuilder extends
      // @@protoc_insertion_point(interface_extends:GPIO_READ)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required fixed32 pin = 1;</code>
     */
    boolean hasPin();
    /**
     * <code>required fixed32 pin = 1;</code>
     */
    int getPin();
  }
  /**
   * Protobuf type {@code GPIO_READ}
   */
  public  static final class GPIO_READ extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:GPIO_READ)
      GPIO_READOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use GPIO_READ.newBuilder() to construct.
    private GPIO_READ(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private GPIO_READ() {
      pin_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private GPIO_READ(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 13: {
              bitField0_ |= 0x00000001;
              pin_ = input.readFixed32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.xlfe.reticul8.Reticul8.internal_static_GPIO_READ_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.xlfe.reticul8.Reticul8.internal_static_GPIO_READ_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              net.xlfe.reticul8.Reticul8.GPIO_READ.class, net.xlfe.reticul8.Reticul8.GPIO_READ.Builder.class);
    }

    private int bitField0_;
    public static final int PIN_FIELD_NUMBER = 1;
    private int pin_;
    /**
     * <code>required fixed32 pin = 1;</code>
     */
    public boolean hasPin() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required fixed32 pin = 1;</code>
     */
    public int getPin() {
      return pin_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasPin()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeFixed32(1, pin_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(1, pin_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof net.xlfe.reticul8.Reticul8.GPIO_READ)) {
        return super.equals(obj);
      }
      net.xlfe.reticul8.Reticul8.GPIO_READ other = (net.xlfe.reticul8.Reticul8.GPIO_READ) obj;

      boolean result = true;
      result = result && (hasPin() == other.hasPin());
      if (hasPin()) {
        result = result && (getPin()
            == other.getPin());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasPin()) {
        hash = (37 * hash) + PIN_FIELD_NUMBER;
        hash = (53 * hash) + getPin();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static net.xlfe.reticul8.Reticul8.GPIO_READ parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.xlfe.reticul8.Reticul8.GPIO_READ parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.xlfe.reticul8.Reticul8.GPIO_READ parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.xlfe.reticul8.Reticul8.GPIO_READ parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.xlfe.reticul8.Reticul8.GPIO_READ parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.xlfe.reticul8.Reticul8.GPIO_READ parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.xlfe.reticul8.Reticul8.GPIO_READ parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.xlfe.reticul8.Reticul8.GPIO_READ parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.xlfe.reticul8.Reticul8.GPIO_READ parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static net.xlfe.reticul8.Reticul8.GPIO_READ parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.xlfe.reticul8.Reticul8.GPIO_READ parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.xlfe.reticul8.Reticul8.GPIO_READ parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(net.xlfe.reticul8.Reticul8.GPIO_READ prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code GPIO_READ}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:GPIO_READ)
        net.xlfe.reticul8.Reticul8.GPIO_READOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.xlfe.reticul8.Reticul8.internal_static_GPIO_READ_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.xlfe.reticul8.Reticul8.internal_static_GPIO_READ_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                net.xlfe.reticul8.Reticul8.GPIO_READ.class, net.xlfe.reticul8.Reticul8.GPIO_READ.Builder.class);
      }

      // Construct using net.xlfe.reticul8.Reticul8.GPIO_READ.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        pin_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.xlfe.reticul8.Reticul8.internal_static_GPIO_READ_descriptor;
      }

      @java.lang.Override
      public net.xlfe.reticul8.Reticul8.GPIO_READ getDefaultInstanceForType() {
        return net.xlfe.reticul8.Reticul8.GPIO_READ.getDefaultInstance();
      }

      @java.lang.Override
      public net.xlfe.reticul8.Reticul8.GPIO_READ build() {
        net.xlfe.reticul8.Reticul8.GPIO_READ result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public net.xlfe.reticul8.Reticul8.GPIO_READ buildPartial() {
        net.xlfe.reticul8.Reticul8.GPIO_READ result = new net.xlfe.reticul8.Reticul8.GPIO_READ(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.pin_ = pin_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.xlfe.reticul8.Reticul8.GPIO_READ) {
          return mergeFrom((net.xlfe.reticul8.Reticul8.GPIO_READ)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(net.xlfe.reticul8.Reticul8.GPIO_READ other) {
        if (other == net.xlfe.reticul8.Reticul8.GPIO_READ.getDefaultInstance()) return this;
        if (other.hasPin()) {
          setPin(other.getPin());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasPin()) {
          return false;
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        net.xlfe.reticul8.Reticul8.GPIO_READ parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (net.xlfe.reticul8.Reticul8.GPIO_READ) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int pin_ ;
      /**
       * <code>required fixed32 pin = 1;</code>
       */
      public boolean hasPin() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required fixed32 pin = 1;</code>
       */
      public int getPin() {
        return pin_;
      }
      /**
       * <code>required fixed32 pin = 1;</code>
       */
      public Builder setPin(int value) {
        bitField0_ |= 0x00000001;
        pin_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required fixed32 pin = 1;</code>
       */
      public Builder clearPin() {
        bitField0_ = (bitField0_ & ~0x00000001);
        pin_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:GPIO_READ)
    }

    // @@protoc_insertion_point(class_scope:GPIO_READ)
    private static final net.xlfe.reticul8.Reticul8.GPIO_READ DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new net.xlfe.reticul8.Reticul8.GPIO_READ();
    }

    public static net.xlfe.reticul8.Reticul8.GPIO_READ getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<GPIO_READ>
        PARSER = new com.google.protobuf.AbstractParser<GPIO_READ>() {
      @java.lang.Override
      public GPIO_READ parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GPIO_READ(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<GPIO_READ> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GPIO_READ> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public net.xlfe.reticul8.Reticul8.GPIO_READ getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface OTA_UPDATEOrBuilder extends
      // @@protoc_insertion_point(interface_extends:OTA_UPDATE)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required fixed32 chunk = 1;</code>
     */
    boolean hasChunk();
    /**
     * <code>required fixed32 chunk = 1;</code>
     */
    int getChunk();

    /**
     * <code>required bytes data = 2 [(.nanopb) = { ... }</code>
     */
    boolean hasData();
    /**
     * <code>required bytes data = 2 [(.nanopb) = { ... }</code>
     */
    com.google.protobuf.ByteString getData();
  }
  /**
   * Protobuf type {@code OTA_UPDATE}
   */
  public  static final class OTA_UPDATE extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:OTA_UPDATE)
      OTA_UPDATEOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use OTA_UPDATE.newBuilder() to construct.
    private OTA_UPDATE(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private OTA_UPDATE() {
      chunk_ = 0;
      data_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private OTA_UPDATE(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 13: {
              bitField0_ |= 0x00000001;
              chunk_ = input.readFixed32();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              data_ = input.readBytes();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.xlfe.reticul8.Reticul8.internal_static_OTA_UPDATE_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.xlfe.reticul8.Reticul8.internal_static_OTA_UPDATE_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              net.xlfe.reticul8.Reticul8.OTA_UPDATE.class, net.xlfe.reticul8.Reticul8.OTA_UPDATE.Builder.class);
    }

    private int bitField0_;
    public static final int CHUNK_FIELD_NUMBER = 1;
    private int chunk_;
    /**
     * <code>required fixed32 chunk = 1;</code>
     */
    public boolean hasChunk() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required fixed32 chunk = 1;</code>
     */
    public int getChunk() {
      return chunk_;
    }

    public static final int DATA_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString data_;
    /**
     * <code>required bytes data = 2 [(.nanopb) = { ... }</code>
     */
    public boolean hasData() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required bytes data = 2 [(.nanopb) = { ... }</code>
     */
    public com.google.protobuf.ByteString getData() {
      return data_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasChunk()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasData()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeFixed32(1, chunk_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, data_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(1, chunk_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, data_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof net.xlfe.reticul8.Reticul8.OTA_UPDATE)) {
        return super.equals(obj);
      }
      net.xlfe.reticul8.Reticul8.OTA_UPDATE other = (net.xlfe.reticul8.Reticul8.OTA_UPDATE) obj;

      boolean result = true;
      result = result && (hasChunk() == other.hasChunk());
      if (hasChunk()) {
        result = result && (getChunk()
            == other.getChunk());
      }
      result = result && (hasData() == other.hasData());
      if (hasData()) {
        result = result && getData()
            .equals(other.getData());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasChunk()) {
        hash = (37 * hash) + CHUNK_FIELD_NUMBER;
        hash = (53 * hash) + getChunk();
      }
      if (hasData()) {
        hash = (37 * hash) + DATA_FIELD_NUMBER;
        hash = (53 * hash) + getData().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static net.xlfe.reticul8.Reticul8.OTA_UPDATE parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.xlfe.reticul8.Reticul8.OTA_UPDATE parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.xlfe.reticul8.Reticul8.OTA_UPDATE parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.xlfe.reticul8.Reticul8.OTA_UPDATE parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.xlfe.reticul8.Reticul8.OTA_UPDATE parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.xlfe.reticul8.Reticul8.OTA_UPDATE parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.xlfe.reticul8.Reticul8.OTA_UPDATE parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.xlfe.reticul8.Reticul8.OTA_UPDATE parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.xlfe.reticul8.Reticul8.OTA_UPDATE parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static net.xlfe.reticul8.Reticul8.OTA_UPDATE parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.xlfe.reticul8.Reticul8.OTA_UPDATE parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.xlfe.reticul8.Reticul8.OTA_UPDATE parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(net.xlfe.reticul8.Reticul8.OTA_UPDATE prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code OTA_UPDATE}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:OTA_UPDATE)
        net.xlfe.reticul8.Reticul8.OTA_UPDATEOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.xlfe.reticul8.Reticul8.internal_static_OTA_UPDATE_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.xlfe.reticul8.Reticul8.internal_static_OTA_UPDATE_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                net.xlfe.reticul8.Reticul8.OTA_UPDATE.class, net.xlfe.reticul8.Reticul8.OTA_UPDATE.Builder.class);
      }

      // Construct using net.xlfe.reticul8.Reticul8.OTA_UPDATE.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        chunk_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        data_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.xlfe.reticul8.Reticul8.internal_static_OTA_UPDATE_descriptor;
      }

      @java.lang.Override
      public net.xlfe.reticul8.Reticul8.OTA_UPDATE getDefaultInstanceForType() {
        return net.xlfe.reticul8.Reticul8.OTA_UPDATE.getDefaultInstance();
      }

      @java.lang.Override
      public net.xlfe.reticul8.Reticul8.OTA_UPDATE build() {
        net.xlfe.reticul8.Reticul8.OTA_UPDATE result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public net.xlfe.reticul8.Reticul8.OTA_UPDATE buildPartial() {
        net.xlfe.reticul8.Reticul8.OTA_UPDATE result = new net.xlfe.reticul8.Reticul8.OTA_UPDATE(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.chunk_ = chunk_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.data_ = data_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.xlfe.reticul8.Reticul8.OTA_UPDATE) {
          return mergeFrom((net.xlfe.reticul8.Reticul8.OTA_UPDATE)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(net.xlfe.reticul8.Reticul8.OTA_UPDATE other) {
        if (other == net.xlfe.reticul8.Reticul8.OTA_UPDATE.getDefaultInstance()) return this;
        if (other.hasChunk()) {
          setChunk(other.getChunk());
        }
        if (other.hasData()) {
          setData(other.getData());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasChunk()) {
          return false;
        }
        if (!hasData()) {
          return false;
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        net.xlfe.reticul8.Reticul8.OTA_UPDATE parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (net.xlfe.reticul8.Reticul8.OTA_UPDATE) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int chunk_ ;
      /**
       * <code>required fixed32 chunk = 1;</code>
       */
      public boolean hasChunk() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required fixed32 chunk = 1;</code>
       */
      public int getChunk() {
        return chunk_;
      }
      /**
       * <code>required fixed32 chunk = 1;</code>
       */
      public Builder setChunk(int value) {
        bitField0_ |= 0x00000001;
        chunk_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required fixed32 chunk = 1;</code>
       */
      public Builder clearChunk() {
        bitField0_ = (bitField0_ & ~0x00000001);
        chunk_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString data_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes data = 2 [(.nanopb) = { ... }</code>
       */
      public boolean hasData() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required bytes data = 2 [(.nanopb) = { ... }</code>
       */
      public com.google.protobuf.ByteString getData() {
        return data_;
      }
      /**
       * <code>required bytes data = 2 [(.nanopb) = { ... }</code>
       */
      public Builder setData(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        data_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes data = 2 [(.nanopb) = { ... }</code>
       */
      public Builder clearData() {
        bitField0_ = (bitField0_ & ~0x00000002);
        data_ = getDefaultInstance().getData();
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:OTA_UPDATE)
    }

    // @@protoc_insertion_point(class_scope:OTA_UPDATE)
    private static final net.xlfe.reticul8.Reticul8.OTA_UPDATE DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new net.xlfe.reticul8.Reticul8.OTA_UPDATE();
    }

    public static net.xlfe.reticul8.Reticul8.OTA_UPDATE getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<OTA_UPDATE>
        PARSER = new com.google.protobuf.AbstractParser<OTA_UPDATE>() {
      @java.lang.Override
      public OTA_UPDATE parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new OTA_UPDATE(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<OTA_UPDATE> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<OTA_UPDATE> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public net.xlfe.reticul8.Reticul8.OTA_UPDATE getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PWM_CONFIGOrBuilder extends
      // @@protoc_insertion_point(interface_extends:PWM_CONFIG)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required fixed32 pin = 1;</code>
     */
    boolean hasPin();
    /**
     * <code>required fixed32 pin = 1;</code>
     */
    int getPin();
  }
  /**
   * Protobuf type {@code PWM_CONFIG}
   */
  public  static final class PWM_CONFIG extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:PWM_CONFIG)
      PWM_CONFIGOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use PWM_CONFIG.newBuilder() to construct.
    private PWM_CONFIG(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PWM_CONFIG() {
      pin_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private PWM_CONFIG(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 13: {
              bitField0_ |= 0x00000001;
              pin_ = input.readFixed32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.xlfe.reticul8.Reticul8.internal_static_PWM_CONFIG_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.xlfe.reticul8.Reticul8.internal_static_PWM_CONFIG_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              net.xlfe.reticul8.Reticul8.PWM_CONFIG.class, net.xlfe.reticul8.Reticul8.PWM_CONFIG.Builder.class);
    }

    private int bitField0_;
    public static final int PIN_FIELD_NUMBER = 1;
    private int pin_;
    /**
     * <code>required fixed32 pin = 1;</code>
     */
    public boolean hasPin() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required fixed32 pin = 1;</code>
     */
    public int getPin() {
      return pin_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasPin()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeFixed32(1, pin_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(1, pin_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof net.xlfe.reticul8.Reticul8.PWM_CONFIG)) {
        return super.equals(obj);
      }
      net.xlfe.reticul8.Reticul8.PWM_CONFIG other = (net.xlfe.reticul8.Reticul8.PWM_CONFIG) obj;

      boolean result = true;
      result = result && (hasPin() == other.hasPin());
      if (hasPin()) {
        result = result && (getPin()
            == other.getPin());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasPin()) {
        hash = (37 * hash) + PIN_FIELD_NUMBER;
        hash = (53 * hash) + getPin();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static net.xlfe.reticul8.Reticul8.PWM_CONFIG parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.xlfe.reticul8.Reticul8.PWM_CONFIG parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.xlfe.reticul8.Reticul8.PWM_CONFIG parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.xlfe.reticul8.Reticul8.PWM_CONFIG parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.xlfe.reticul8.Reticul8.PWM_CONFIG parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.xlfe.reticul8.Reticul8.PWM_CONFIG parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.xlfe.reticul8.Reticul8.PWM_CONFIG parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.xlfe.reticul8.Reticul8.PWM_CONFIG parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.xlfe.reticul8.Reticul8.PWM_CONFIG parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static net.xlfe.reticul8.Reticul8.PWM_CONFIG parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.xlfe.reticul8.Reticul8.PWM_CONFIG parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.xlfe.reticul8.Reticul8.PWM_CONFIG parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(net.xlfe.reticul8.Reticul8.PWM_CONFIG prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code PWM_CONFIG}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:PWM_CONFIG)
        net.xlfe.reticul8.Reticul8.PWM_CONFIGOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.xlfe.reticul8.Reticul8.internal_static_PWM_CONFIG_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.xlfe.reticul8.Reticul8.internal_static_PWM_CONFIG_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                net.xlfe.reticul8.Reticul8.PWM_CONFIG.class, net.xlfe.reticul8.Reticul8.PWM_CONFIG.Builder.class);
      }

      // Construct using net.xlfe.reticul8.Reticul8.PWM_CONFIG.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        pin_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.xlfe.reticul8.Reticul8.internal_static_PWM_CONFIG_descriptor;
      }

      @java.lang.Override
      public net.xlfe.reticul8.Reticul8.PWM_CONFIG getDefaultInstanceForType() {
        return net.xlfe.reticul8.Reticul8.PWM_CONFIG.getDefaultInstance();
      }

      @java.lang.Override
      public net.xlfe.reticul8.Reticul8.PWM_CONFIG build() {
        net.xlfe.reticul8.Reticul8.PWM_CONFIG result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public net.xlfe.reticul8.Reticul8.PWM_CONFIG buildPartial() {
        net.xlfe.reticul8.Reticul8.PWM_CONFIG result = new net.xlfe.reticul8.Reticul8.PWM_CONFIG(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.pin_ = pin_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.xlfe.reticul8.Reticul8.PWM_CONFIG) {
          return mergeFrom((net.xlfe.reticul8.Reticul8.PWM_CONFIG)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(net.xlfe.reticul8.Reticul8.PWM_CONFIG other) {
        if (other == net.xlfe.reticul8.Reticul8.PWM_CONFIG.getDefaultInstance()) return this;
        if (other.hasPin()) {
          setPin(other.getPin());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasPin()) {
          return false;
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        net.xlfe.reticul8.Reticul8.PWM_CONFIG parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (net.xlfe.reticul8.Reticul8.PWM_CONFIG) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int pin_ ;
      /**
       * <code>required fixed32 pin = 1;</code>
       */
      public boolean hasPin() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required fixed32 pin = 1;</code>
       */
      public int getPin() {
        return pin_;
      }
      /**
       * <code>required fixed32 pin = 1;</code>
       */
      public Builder setPin(int value) {
        bitField0_ |= 0x00000001;
        pin_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required fixed32 pin = 1;</code>
       */
      public Builder clearPin() {
        bitField0_ = (bitField0_ & ~0x00000001);
        pin_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:PWM_CONFIG)
    }

    // @@protoc_insertion_point(class_scope:PWM_CONFIG)
    private static final net.xlfe.reticul8.Reticul8.PWM_CONFIG DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new net.xlfe.reticul8.Reticul8.PWM_CONFIG();
    }

    public static net.xlfe.reticul8.Reticul8.PWM_CONFIG getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<PWM_CONFIG>
        PARSER = new com.google.protobuf.AbstractParser<PWM_CONFIG>() {
      @java.lang.Override
      public PWM_CONFIG parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PWM_CONFIG(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<PWM_CONFIG> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PWM_CONFIG> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public net.xlfe.reticul8.Reticul8.PWM_CONFIG getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PWM_STOPOrBuilder extends
      // @@protoc_insertion_point(interface_extends:PWM_STOP)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required fixed32 pin = 1;</code>
     */
    boolean hasPin();
    /**
     * <code>required fixed32 pin = 1;</code>
     */
    int getPin();
  }
  /**
   * Protobuf type {@code PWM_STOP}
   */
  public  static final class PWM_STOP extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:PWM_STOP)
      PWM_STOPOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use PWM_STOP.newBuilder() to construct.
    private PWM_STOP(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PWM_STOP() {
      pin_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private PWM_STOP(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 13: {
              bitField0_ |= 0x00000001;
              pin_ = input.readFixed32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.xlfe.reticul8.Reticul8.internal_static_PWM_STOP_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.xlfe.reticul8.Reticul8.internal_static_PWM_STOP_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              net.xlfe.reticul8.Reticul8.PWM_STOP.class, net.xlfe.reticul8.Reticul8.PWM_STOP.Builder.class);
    }

    private int bitField0_;
    public static final int PIN_FIELD_NUMBER = 1;
    private int pin_;
    /**
     * <code>required fixed32 pin = 1;</code>
     */
    public boolean hasPin() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required fixed32 pin = 1;</code>
     */
    public int getPin() {
      return pin_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasPin()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeFixed32(1, pin_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(1, pin_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof net.xlfe.reticul8.Reticul8.PWM_STOP)) {
        return super.equals(obj);
      }
      net.xlfe.reticul8.Reticul8.PWM_STOP other = (net.xlfe.reticul8.Reticul8.PWM_STOP) obj;

      boolean result = true;
      result = result && (hasPin() == other.hasPin());
      if (hasPin()) {
        result = result && (getPin()
            == other.getPin());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasPin()) {
        hash = (37 * hash) + PIN_FIELD_NUMBER;
        hash = (53 * hash) + getPin();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static net.xlfe.reticul8.Reticul8.PWM_STOP parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.xlfe.reticul8.Reticul8.PWM_STOP parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.xlfe.reticul8.Reticul8.PWM_STOP parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.xlfe.reticul8.Reticul8.PWM_STOP parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.xlfe.reticul8.Reticul8.PWM_STOP parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.xlfe.reticul8.Reticul8.PWM_STOP parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.xlfe.reticul8.Reticul8.PWM_STOP parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.xlfe.reticul8.Reticul8.PWM_STOP parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.xlfe.reticul8.Reticul8.PWM_STOP parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static net.xlfe.reticul8.Reticul8.PWM_STOP parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.xlfe.reticul8.Reticul8.PWM_STOP parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.xlfe.reticul8.Reticul8.PWM_STOP parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(net.xlfe.reticul8.Reticul8.PWM_STOP prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code PWM_STOP}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:PWM_STOP)
        net.xlfe.reticul8.Reticul8.PWM_STOPOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.xlfe.reticul8.Reticul8.internal_static_PWM_STOP_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.xlfe.reticul8.Reticul8.internal_static_PWM_STOP_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                net.xlfe.reticul8.Reticul8.PWM_STOP.class, net.xlfe.reticul8.Reticul8.PWM_STOP.Builder.class);
      }

      // Construct using net.xlfe.reticul8.Reticul8.PWM_STOP.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        pin_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.xlfe.reticul8.Reticul8.internal_static_PWM_STOP_descriptor;
      }

      @java.lang.Override
      public net.xlfe.reticul8.Reticul8.PWM_STOP getDefaultInstanceForType() {
        return net.xlfe.reticul8.Reticul8.PWM_STOP.getDefaultInstance();
      }

      @java.lang.Override
      public net.xlfe.reticul8.Reticul8.PWM_STOP build() {
        net.xlfe.reticul8.Reticul8.PWM_STOP result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public net.xlfe.reticul8.Reticul8.PWM_STOP buildPartial() {
        net.xlfe.reticul8.Reticul8.PWM_STOP result = new net.xlfe.reticul8.Reticul8.PWM_STOP(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.pin_ = pin_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.xlfe.reticul8.Reticul8.PWM_STOP) {
          return mergeFrom((net.xlfe.reticul8.Reticul8.PWM_STOP)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(net.xlfe.reticul8.Reticul8.PWM_STOP other) {
        if (other == net.xlfe.reticul8.Reticul8.PWM_STOP.getDefaultInstance()) return this;
        if (other.hasPin()) {
          setPin(other.getPin());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasPin()) {
          return false;
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        net.xlfe.reticul8.Reticul8.PWM_STOP parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (net.xlfe.reticul8.Reticul8.PWM_STOP) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int pin_ ;
      /**
       * <code>required fixed32 pin = 1;</code>
       */
      public boolean hasPin() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required fixed32 pin = 1;</code>
       */
      public int getPin() {
        return pin_;
      }
      /**
       * <code>required fixed32 pin = 1;</code>
       */
      public Builder setPin(int value) {
        bitField0_ |= 0x00000001;
        pin_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required fixed32 pin = 1;</code>
       */
      public Builder clearPin() {
        bitField0_ = (bitField0_ & ~0x00000001);
        pin_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:PWM_STOP)
    }

    // @@protoc_insertion_point(class_scope:PWM_STOP)
    private static final net.xlfe.reticul8.Reticul8.PWM_STOP DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new net.xlfe.reticul8.Reticul8.PWM_STOP();
    }

    public static net.xlfe.reticul8.Reticul8.PWM_STOP getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<PWM_STOP>
        PARSER = new com.google.protobuf.AbstractParser<PWM_STOP>() {
      @java.lang.Override
      public PWM_STOP parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PWM_STOP(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<PWM_STOP> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PWM_STOP> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public net.xlfe.reticul8.Reticul8.PWM_STOP getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PWM_DUTYOrBuilder extends
      // @@protoc_insertion_point(interface_extends:PWM_DUTY)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required fixed32 pin = 1;</code>
     */
    boolean hasPin();
    /**
     * <code>required fixed32 pin = 1;</code>
     */
    int getPin();

    /**
     * <code>required fixed32 duty = 2;</code>
     */
    boolean hasDuty();
    /**
     * <code>required fixed32 duty = 2;</code>
     */
    int getDuty();
  }
  /**
   * Protobuf type {@code PWM_DUTY}
   */
  public  static final class PWM_DUTY extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:PWM_DUTY)
      PWM_DUTYOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use PWM_DUTY.newBuilder() to construct.
    private PWM_DUTY(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PWM_DUTY() {
      pin_ = 0;
      duty_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private PWM_DUTY(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 13: {
              bitField0_ |= 0x00000001;
              pin_ = input.readFixed32();
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              duty_ = input.readFixed32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.xlfe.reticul8.Reticul8.internal_static_PWM_DUTY_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.xlfe.reticul8.Reticul8.internal_static_PWM_DUTY_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              net.xlfe.reticul8.Reticul8.PWM_DUTY.class, net.xlfe.reticul8.Reticul8.PWM_DUTY.Builder.class);
    }

    private int bitField0_;
    public static final int PIN_FIELD_NUMBER = 1;
    private int pin_;
    /**
     * <code>required fixed32 pin = 1;</code>
     */
    public boolean hasPin() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required fixed32 pin = 1;</code>
     */
    public int getPin() {
      return pin_;
    }

    public static final int DUTY_FIELD_NUMBER = 2;
    private int duty_;
    /**
     * <code>required fixed32 duty = 2;</code>
     */
    public boolean hasDuty() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required fixed32 duty = 2;</code>
     */
    public int getDuty() {
      return duty_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasPin()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDuty()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeFixed32(1, pin_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFixed32(2, duty_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(1, pin_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(2, duty_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof net.xlfe.reticul8.Reticul8.PWM_DUTY)) {
        return super.equals(obj);
      }
      net.xlfe.reticul8.Reticul8.PWM_DUTY other = (net.xlfe.reticul8.Reticul8.PWM_DUTY) obj;

      boolean result = true;
      result = result && (hasPin() == other.hasPin());
      if (hasPin()) {
        result = result && (getPin()
            == other.getPin());
      }
      result = result && (hasDuty() == other.hasDuty());
      if (hasDuty()) {
        result = result && (getDuty()
            == other.getDuty());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasPin()) {
        hash = (37 * hash) + PIN_FIELD_NUMBER;
        hash = (53 * hash) + getPin();
      }
      if (hasDuty()) {
        hash = (37 * hash) + DUTY_FIELD_NUMBER;
        hash = (53 * hash) + getDuty();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static net.xlfe.reticul8.Reticul8.PWM_DUTY parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.xlfe.reticul8.Reticul8.PWM_DUTY parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.xlfe.reticul8.Reticul8.PWM_DUTY parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.xlfe.reticul8.Reticul8.PWM_DUTY parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.xlfe.reticul8.Reticul8.PWM_DUTY parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.xlfe.reticul8.Reticul8.PWM_DUTY parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.xlfe.reticul8.Reticul8.PWM_DUTY parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.xlfe.reticul8.Reticul8.PWM_DUTY parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.xlfe.reticul8.Reticul8.PWM_DUTY parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static net.xlfe.reticul8.Reticul8.PWM_DUTY parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.xlfe.reticul8.Reticul8.PWM_DUTY parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.xlfe.reticul8.Reticul8.PWM_DUTY parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(net.xlfe.reticul8.Reticul8.PWM_DUTY prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code PWM_DUTY}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:PWM_DUTY)
        net.xlfe.reticul8.Reticul8.PWM_DUTYOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.xlfe.reticul8.Reticul8.internal_static_PWM_DUTY_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.xlfe.reticul8.Reticul8.internal_static_PWM_DUTY_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                net.xlfe.reticul8.Reticul8.PWM_DUTY.class, net.xlfe.reticul8.Reticul8.PWM_DUTY.Builder.class);
      }

      // Construct using net.xlfe.reticul8.Reticul8.PWM_DUTY.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        pin_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        duty_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.xlfe.reticul8.Reticul8.internal_static_PWM_DUTY_descriptor;
      }

      @java.lang.Override
      public net.xlfe.reticul8.Reticul8.PWM_DUTY getDefaultInstanceForType() {
        return net.xlfe.reticul8.Reticul8.PWM_DUTY.getDefaultInstance();
      }

      @java.lang.Override
      public net.xlfe.reticul8.Reticul8.PWM_DUTY build() {
        net.xlfe.reticul8.Reticul8.PWM_DUTY result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public net.xlfe.reticul8.Reticul8.PWM_DUTY buildPartial() {
        net.xlfe.reticul8.Reticul8.PWM_DUTY result = new net.xlfe.reticul8.Reticul8.PWM_DUTY(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.pin_ = pin_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.duty_ = duty_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.xlfe.reticul8.Reticul8.PWM_DUTY) {
          return mergeFrom((net.xlfe.reticul8.Reticul8.PWM_DUTY)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(net.xlfe.reticul8.Reticul8.PWM_DUTY other) {
        if (other == net.xlfe.reticul8.Reticul8.PWM_DUTY.getDefaultInstance()) return this;
        if (other.hasPin()) {
          setPin(other.getPin());
        }
        if (other.hasDuty()) {
          setDuty(other.getDuty());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasPin()) {
          return false;
        }
        if (!hasDuty()) {
          return false;
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        net.xlfe.reticul8.Reticul8.PWM_DUTY parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (net.xlfe.reticul8.Reticul8.PWM_DUTY) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int pin_ ;
      /**
       * <code>required fixed32 pin = 1;</code>
       */
      public boolean hasPin() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required fixed32 pin = 1;</code>
       */
      public int getPin() {
        return pin_;
      }
      /**
       * <code>required fixed32 pin = 1;</code>
       */
      public Builder setPin(int value) {
        bitField0_ |= 0x00000001;
        pin_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required fixed32 pin = 1;</code>
       */
      public Builder clearPin() {
        bitField0_ = (bitField0_ & ~0x00000001);
        pin_ = 0;
        onChanged();
        return this;
      }

      private int duty_ ;
      /**
       * <code>required fixed32 duty = 2;</code>
       */
      public boolean hasDuty() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required fixed32 duty = 2;</code>
       */
      public int getDuty() {
        return duty_;
      }
      /**
       * <code>required fixed32 duty = 2;</code>
       */
      public Builder setDuty(int value) {
        bitField0_ |= 0x00000002;
        duty_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required fixed32 duty = 2;</code>
       */
      public Builder clearDuty() {
        bitField0_ = (bitField0_ & ~0x00000002);
        duty_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:PWM_DUTY)
    }

    // @@protoc_insertion_point(class_scope:PWM_DUTY)
    private static final net.xlfe.reticul8.Reticul8.PWM_DUTY DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new net.xlfe.reticul8.Reticul8.PWM_DUTY();
    }

    public static net.xlfe.reticul8.Reticul8.PWM_DUTY getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<PWM_DUTY>
        PARSER = new com.google.protobuf.AbstractParser<PWM_DUTY>() {
      @java.lang.Override
      public PWM_DUTY parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PWM_DUTY(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<PWM_DUTY> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PWM_DUTY> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public net.xlfe.reticul8.Reticul8.PWM_DUTY getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PWM_FADEOrBuilder extends
      // @@protoc_insertion_point(interface_extends:PWM_FADE)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required fixed32 pin = 1;</code>
     */
    boolean hasPin();
    /**
     * <code>required fixed32 pin = 1;</code>
     */
    int getPin();

    /**
     * <code>required fixed32 duty = 2;</code>
     */
    boolean hasDuty();
    /**
     * <code>required fixed32 duty = 2;</code>
     */
    int getDuty();

    /**
     * <code>required fixed32 fade_ms = 3;</code>
     */
    boolean hasFadeMs();
    /**
     * <code>required fixed32 fade_ms = 3;</code>
     */
    int getFadeMs();
  }
  /**
   * Protobuf type {@code PWM_FADE}
   */
  public  static final class PWM_FADE extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:PWM_FADE)
      PWM_FADEOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use PWM_FADE.newBuilder() to construct.
    private PWM_FADE(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PWM_FADE() {
      pin_ = 0;
      duty_ = 0;
      fadeMs_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private PWM_FADE(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 13: {
              bitField0_ |= 0x00000001;
              pin_ = input.readFixed32();
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              duty_ = input.readFixed32();
              break;
            }
            case 29: {
              bitField0_ |= 0x00000004;
              fadeMs_ = input.readFixed32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.xlfe.reticul8.Reticul8.internal_static_PWM_FADE_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.xlfe.reticul8.Reticul8.internal_static_PWM_FADE_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              net.xlfe.reticul8.Reticul8.PWM_FADE.class, net.xlfe.reticul8.Reticul8.PWM_FADE.Builder.class);
    }

    private int bitField0_;
    public static final int PIN_FIELD_NUMBER = 1;
    private int pin_;
    /**
     * <code>required fixed32 pin = 1;</code>
     */
    public boolean hasPin() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required fixed32 pin = 1;</code>
     */
    public int getPin() {
      return pin_;
    }

    public static final int DUTY_FIELD_NUMBER = 2;
    private int duty_;
    /**
     * <code>required fixed32 duty = 2;</code>
     */
    public boolean hasDuty() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required fixed32 duty = 2;</code>
     */
    public int getDuty() {
      return duty_;
    }

    public static final int FADE_MS_FIELD_NUMBER = 3;
    private int fadeMs_;
    /**
     * <code>required fixed32 fade_ms = 3;</code>
     */
    public boolean hasFadeMs() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required fixed32 fade_ms = 3;</code>
     */
    public int getFadeMs() {
      return fadeMs_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasPin()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDuty()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasFadeMs()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeFixed32(1, pin_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFixed32(2, duty_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeFixed32(3, fadeMs_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(1, pin_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(2, duty_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(3, fadeMs_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof net.xlfe.reticul8.Reticul8.PWM_FADE)) {
        return super.equals(obj);
      }
      net.xlfe.reticul8.Reticul8.PWM_FADE other = (net.xlfe.reticul8.Reticul8.PWM_FADE) obj;

      boolean result = true;
      result = result && (hasPin() == other.hasPin());
      if (hasPin()) {
        result = result && (getPin()
            == other.getPin());
      }
      result = result && (hasDuty() == other.hasDuty());
      if (hasDuty()) {
        result = result && (getDuty()
            == other.getDuty());
      }
      result = result && (hasFadeMs() == other.hasFadeMs());
      if (hasFadeMs()) {
        result = result && (getFadeMs()
            == other.getFadeMs());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasPin()) {
        hash = (37 * hash) + PIN_FIELD_NUMBER;
        hash = (53 * hash) + getPin();
      }
      if (hasDuty()) {
        hash = (37 * hash) + DUTY_FIELD_NUMBER;
        hash = (53 * hash) + getDuty();
      }
      if (hasFadeMs()) {
        hash = (37 * hash) + FADE_MS_FIELD_NUMBER;
        hash = (53 * hash) + getFadeMs();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static net.xlfe.reticul8.Reticul8.PWM_FADE parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.xlfe.reticul8.Reticul8.PWM_FADE parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.xlfe.reticul8.Reticul8.PWM_FADE parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.xlfe.reticul8.Reticul8.PWM_FADE parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.xlfe.reticul8.Reticul8.PWM_FADE parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.xlfe.reticul8.Reticul8.PWM_FADE parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.xlfe.reticul8.Reticul8.PWM_FADE parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.xlfe.reticul8.Reticul8.PWM_FADE parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.xlfe.reticul8.Reticul8.PWM_FADE parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static net.xlfe.reticul8.Reticul8.PWM_FADE parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.xlfe.reticul8.Reticul8.PWM_FADE parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.xlfe.reticul8.Reticul8.PWM_FADE parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(net.xlfe.reticul8.Reticul8.PWM_FADE prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code PWM_FADE}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:PWM_FADE)
        net.xlfe.reticul8.Reticul8.PWM_FADEOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.xlfe.reticul8.Reticul8.internal_static_PWM_FADE_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.xlfe.reticul8.Reticul8.internal_static_PWM_FADE_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                net.xlfe.reticul8.Reticul8.PWM_FADE.class, net.xlfe.reticul8.Reticul8.PWM_FADE.Builder.class);
      }

      // Construct using net.xlfe.reticul8.Reticul8.PWM_FADE.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        pin_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        duty_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        fadeMs_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.xlfe.reticul8.Reticul8.internal_static_PWM_FADE_descriptor;
      }

      @java.lang.Override
      public net.xlfe.reticul8.Reticul8.PWM_FADE getDefaultInstanceForType() {
        return net.xlfe.reticul8.Reticul8.PWM_FADE.getDefaultInstance();
      }

      @java.lang.Override
      public net.xlfe.reticul8.Reticul8.PWM_FADE build() {
        net.xlfe.reticul8.Reticul8.PWM_FADE result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public net.xlfe.reticul8.Reticul8.PWM_FADE buildPartial() {
        net.xlfe.reticul8.Reticul8.PWM_FADE result = new net.xlfe.reticul8.Reticul8.PWM_FADE(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.pin_ = pin_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.duty_ = duty_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.fadeMs_ = fadeMs_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.xlfe.reticul8.Reticul8.PWM_FADE) {
          return mergeFrom((net.xlfe.reticul8.Reticul8.PWM_FADE)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(net.xlfe.reticul8.Reticul8.PWM_FADE other) {
        if (other == net.xlfe.reticul8.Reticul8.PWM_FADE.getDefaultInstance()) return this;
        if (other.hasPin()) {
          setPin(other.getPin());
        }
        if (other.hasDuty()) {
          setDuty(other.getDuty());
        }
        if (other.hasFadeMs()) {
          setFadeMs(other.getFadeMs());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasPin()) {
          return false;
        }
        if (!hasDuty()) {
          return false;
        }
        if (!hasFadeMs()) {
          return false;
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        net.xlfe.reticul8.Reticul8.PWM_FADE parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (net.xlfe.reticul8.Reticul8.PWM_FADE) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int pin_ ;
      /**
       * <code>required fixed32 pin = 1;</code>
       */
      public boolean hasPin() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required fixed32 pin = 1;</code>
       */
      public int getPin() {
        return pin_;
      }
      /**
       * <code>required fixed32 pin = 1;</code>
       */
      public Builder setPin(int value) {
        bitField0_ |= 0x00000001;
        pin_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required fixed32 pin = 1;</code>
       */
      public Builder clearPin() {
        bitField0_ = (bitField0_ & ~0x00000001);
        pin_ = 0;
        onChanged();
        return this;
      }

      private int duty_ ;
      /**
       * <code>required fixed32 duty = 2;</code>
       */
      public boolean hasDuty() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required fixed32 duty = 2;</code>
       */
      public int getDuty() {
        return duty_;
      }
      /**
       * <code>required fixed32 duty = 2;</code>
       */
      public Builder setDuty(int value) {
        bitField0_ |= 0x00000002;
        duty_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required fixed32 duty = 2;</code>
       */
      public Builder clearDuty() {
        bitField0_ = (bitField0_ & ~0x00000002);
        duty_ = 0;
        onChanged();
        return this;
      }

      private int fadeMs_ ;
      /**
       * <code>required fixed32 fade_ms = 3;</code>
       */
      public boolean hasFadeMs() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required fixed32 fade_ms = 3;</code>
       */
      public int getFadeMs() {
        return fadeMs_;
      }
      /**
       * <code>required fixed32 fade_ms = 3;</code>
       */
      public Builder setFadeMs(int value) {
        bitField0_ |= 0x00000004;
        fadeMs_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required fixed32 fade_ms = 3;</code>
       */
      public Builder clearFadeMs() {
        bitField0_ = (bitField0_ & ~0x00000004);
        fadeMs_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:PWM_FADE)
    }

    // @@protoc_insertion_point(class_scope:PWM_FADE)
    private static final net.xlfe.reticul8.Reticul8.PWM_FADE DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new net.xlfe.reticul8.Reticul8.PWM_FADE();
    }

    public static net.xlfe.reticul8.Reticul8.PWM_FADE getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<PWM_FADE>
        PARSER = new com.google.protobuf.AbstractParser<PWM_FADE>() {
      @java.lang.Override
      public PWM_FADE parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PWM_FADE(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<PWM_FADE> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PWM_FADE> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public net.xlfe.reticul8.Reticul8.PWM_FADE getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface I2C_CONFIGOrBuilder extends
      // @@protoc_insertion_point(interface_extends:I2C_CONFIG)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional fixed32 pin_sda = 1;</code>
     */
    boolean hasPinSda();
    /**
     * <code>optional fixed32 pin_sda = 1;</code>
     */
    int getPinSda();

    /**
     * <code>optional fixed32 pin_scl = 2;</code>
     */
    boolean hasPinScl();
    /**
     * <code>optional fixed32 pin_scl = 2;</code>
     */
    int getPinScl();
  }
  /**
   * Protobuf type {@code I2C_CONFIG}
   */
  public  static final class I2C_CONFIG extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:I2C_CONFIG)
      I2C_CONFIGOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use I2C_CONFIG.newBuilder() to construct.
    private I2C_CONFIG(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private I2C_CONFIG() {
      pinSda_ = 0;
      pinScl_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private I2C_CONFIG(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 13: {
              bitField0_ |= 0x00000001;
              pinSda_ = input.readFixed32();
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              pinScl_ = input.readFixed32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.xlfe.reticul8.Reticul8.internal_static_I2C_CONFIG_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.xlfe.reticul8.Reticul8.internal_static_I2C_CONFIG_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              net.xlfe.reticul8.Reticul8.I2C_CONFIG.class, net.xlfe.reticul8.Reticul8.I2C_CONFIG.Builder.class);
    }

    private int bitField0_;
    public static final int PIN_SDA_FIELD_NUMBER = 1;
    private int pinSda_;
    /**
     * <code>optional fixed32 pin_sda = 1;</code>
     */
    public boolean hasPinSda() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional fixed32 pin_sda = 1;</code>
     */
    public int getPinSda() {
      return pinSda_;
    }

    public static final int PIN_SCL_FIELD_NUMBER = 2;
    private int pinScl_;
    /**
     * <code>optional fixed32 pin_scl = 2;</code>
     */
    public boolean hasPinScl() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional fixed32 pin_scl = 2;</code>
     */
    public int getPinScl() {
      return pinScl_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeFixed32(1, pinSda_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFixed32(2, pinScl_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(1, pinSda_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(2, pinScl_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof net.xlfe.reticul8.Reticul8.I2C_CONFIG)) {
        return super.equals(obj);
      }
      net.xlfe.reticul8.Reticul8.I2C_CONFIG other = (net.xlfe.reticul8.Reticul8.I2C_CONFIG) obj;

      boolean result = true;
      result = result && (hasPinSda() == other.hasPinSda());
      if (hasPinSda()) {
        result = result && (getPinSda()
            == other.getPinSda());
      }
      result = result && (hasPinScl() == other.hasPinScl());
      if (hasPinScl()) {
        result = result && (getPinScl()
            == other.getPinScl());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasPinSda()) {
        hash = (37 * hash) + PIN_SDA_FIELD_NUMBER;
        hash = (53 * hash) + getPinSda();
      }
      if (hasPinScl()) {
        hash = (37 * hash) + PIN_SCL_FIELD_NUMBER;
        hash = (53 * hash) + getPinScl();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static net.xlfe.reticul8.Reticul8.I2C_CONFIG parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.xlfe.reticul8.Reticul8.I2C_CONFIG parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.xlfe.reticul8.Reticul8.I2C_CONFIG parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.xlfe.reticul8.Reticul8.I2C_CONFIG parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.xlfe.reticul8.Reticul8.I2C_CONFIG parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.xlfe.reticul8.Reticul8.I2C_CONFIG parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.xlfe.reticul8.Reticul8.I2C_CONFIG parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.xlfe.reticul8.Reticul8.I2C_CONFIG parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.xlfe.reticul8.Reticul8.I2C_CONFIG parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static net.xlfe.reticul8.Reticul8.I2C_CONFIG parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.xlfe.reticul8.Reticul8.I2C_CONFIG parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.xlfe.reticul8.Reticul8.I2C_CONFIG parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(net.xlfe.reticul8.Reticul8.I2C_CONFIG prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code I2C_CONFIG}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:I2C_CONFIG)
        net.xlfe.reticul8.Reticul8.I2C_CONFIGOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.xlfe.reticul8.Reticul8.internal_static_I2C_CONFIG_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.xlfe.reticul8.Reticul8.internal_static_I2C_CONFIG_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                net.xlfe.reticul8.Reticul8.I2C_CONFIG.class, net.xlfe.reticul8.Reticul8.I2C_CONFIG.Builder.class);
      }

      // Construct using net.xlfe.reticul8.Reticul8.I2C_CONFIG.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        pinSda_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        pinScl_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.xlfe.reticul8.Reticul8.internal_static_I2C_CONFIG_descriptor;
      }

      @java.lang.Override
      public net.xlfe.reticul8.Reticul8.I2C_CONFIG getDefaultInstanceForType() {
        return net.xlfe.reticul8.Reticul8.I2C_CONFIG.getDefaultInstance();
      }

      @java.lang.Override
      public net.xlfe.reticul8.Reticul8.I2C_CONFIG build() {
        net.xlfe.reticul8.Reticul8.I2C_CONFIG result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public net.xlfe.reticul8.Reticul8.I2C_CONFIG buildPartial() {
        net.xlfe.reticul8.Reticul8.I2C_CONFIG result = new net.xlfe.reticul8.Reticul8.I2C_CONFIG(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.pinSda_ = pinSda_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.pinScl_ = pinScl_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.xlfe.reticul8.Reticul8.I2C_CONFIG) {
          return mergeFrom((net.xlfe.reticul8.Reticul8.I2C_CONFIG)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(net.xlfe.reticul8.Reticul8.I2C_CONFIG other) {
        if (other == net.xlfe.reticul8.Reticul8.I2C_CONFIG.getDefaultInstance()) return this;
        if (other.hasPinSda()) {
          setPinSda(other.getPinSda());
        }
        if (other.hasPinScl()) {
          setPinScl(other.getPinScl());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        net.xlfe.reticul8.Reticul8.I2C_CONFIG parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (net.xlfe.reticul8.Reticul8.I2C_CONFIG) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int pinSda_ ;
      /**
       * <code>optional fixed32 pin_sda = 1;</code>
       */
      public boolean hasPinSda() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional fixed32 pin_sda = 1;</code>
       */
      public int getPinSda() {
        return pinSda_;
      }
      /**
       * <code>optional fixed32 pin_sda = 1;</code>
       */
      public Builder setPinSda(int value) {
        bitField0_ |= 0x00000001;
        pinSda_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional fixed32 pin_sda = 1;</code>
       */
      public Builder clearPinSda() {
        bitField0_ = (bitField0_ & ~0x00000001);
        pinSda_ = 0;
        onChanged();
        return this;
      }

      private int pinScl_ ;
      /**
       * <code>optional fixed32 pin_scl = 2;</code>
       */
      public boolean hasPinScl() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional fixed32 pin_scl = 2;</code>
       */
      public int getPinScl() {
        return pinScl_;
      }
      /**
       * <code>optional fixed32 pin_scl = 2;</code>
       */
      public Builder setPinScl(int value) {
        bitField0_ |= 0x00000002;
        pinScl_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional fixed32 pin_scl = 2;</code>
       */
      public Builder clearPinScl() {
        bitField0_ = (bitField0_ & ~0x00000002);
        pinScl_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:I2C_CONFIG)
    }

    // @@protoc_insertion_point(class_scope:I2C_CONFIG)
    private static final net.xlfe.reticul8.Reticul8.I2C_CONFIG DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new net.xlfe.reticul8.Reticul8.I2C_CONFIG();
    }

    public static net.xlfe.reticul8.Reticul8.I2C_CONFIG getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<I2C_CONFIG>
        PARSER = new com.google.protobuf.AbstractParser<I2C_CONFIG>() {
      @java.lang.Override
      public I2C_CONFIG parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new I2C_CONFIG(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<I2C_CONFIG> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<I2C_CONFIG> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public net.xlfe.reticul8.Reticul8.I2C_CONFIG getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface I2C_WRITEOrBuilder extends
      // @@protoc_insertion_point(interface_extends:I2C_WRITE)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required fixed32 device = 1;</code>
     */
    boolean hasDevice();
    /**
     * <code>required fixed32 device = 1;</code>
     */
    int getDevice();

    /**
     * <code>required fixed32 len = 3;</code>
     */
    boolean hasLen();
    /**
     * <code>required fixed32 len = 3;</code>
     */
    int getLen();

    /**
     * <code>required bytes data = 4 [(.nanopb) = { ... }</code>
     */
    boolean hasData();
    /**
     * <code>required bytes data = 4 [(.nanopb) = { ... }</code>
     */
    com.google.protobuf.ByteString getData();
  }
  /**
   * Protobuf type {@code I2C_WRITE}
   */
  public  static final class I2C_WRITE extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:I2C_WRITE)
      I2C_WRITEOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use I2C_WRITE.newBuilder() to construct.
    private I2C_WRITE(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private I2C_WRITE() {
      device_ = 0;
      len_ = 0;
      data_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private I2C_WRITE(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 13: {
              bitField0_ |= 0x00000001;
              device_ = input.readFixed32();
              break;
            }
            case 29: {
              bitField0_ |= 0x00000002;
              len_ = input.readFixed32();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000004;
              data_ = input.readBytes();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.xlfe.reticul8.Reticul8.internal_static_I2C_WRITE_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.xlfe.reticul8.Reticul8.internal_static_I2C_WRITE_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              net.xlfe.reticul8.Reticul8.I2C_WRITE.class, net.xlfe.reticul8.Reticul8.I2C_WRITE.Builder.class);
    }

    private int bitField0_;
    public static final int DEVICE_FIELD_NUMBER = 1;
    private int device_;
    /**
     * <code>required fixed32 device = 1;</code>
     */
    public boolean hasDevice() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required fixed32 device = 1;</code>
     */
    public int getDevice() {
      return device_;
    }

    public static final int LEN_FIELD_NUMBER = 3;
    private int len_;
    /**
     * <code>required fixed32 len = 3;</code>
     */
    public boolean hasLen() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required fixed32 len = 3;</code>
     */
    public int getLen() {
      return len_;
    }

    public static final int DATA_FIELD_NUMBER = 4;
    private com.google.protobuf.ByteString data_;
    /**
     * <code>required bytes data = 4 [(.nanopb) = { ... }</code>
     */
    public boolean hasData() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required bytes data = 4 [(.nanopb) = { ... }</code>
     */
    public com.google.protobuf.ByteString getData() {
      return data_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasDevice()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLen()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasData()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeFixed32(1, device_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFixed32(3, len_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(4, data_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(1, device_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(3, len_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, data_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof net.xlfe.reticul8.Reticul8.I2C_WRITE)) {
        return super.equals(obj);
      }
      net.xlfe.reticul8.Reticul8.I2C_WRITE other = (net.xlfe.reticul8.Reticul8.I2C_WRITE) obj;

      boolean result = true;
      result = result && (hasDevice() == other.hasDevice());
      if (hasDevice()) {
        result = result && (getDevice()
            == other.getDevice());
      }
      result = result && (hasLen() == other.hasLen());
      if (hasLen()) {
        result = result && (getLen()
            == other.getLen());
      }
      result = result && (hasData() == other.hasData());
      if (hasData()) {
        result = result && getData()
            .equals(other.getData());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasDevice()) {
        hash = (37 * hash) + DEVICE_FIELD_NUMBER;
        hash = (53 * hash) + getDevice();
      }
      if (hasLen()) {
        hash = (37 * hash) + LEN_FIELD_NUMBER;
        hash = (53 * hash) + getLen();
      }
      if (hasData()) {
        hash = (37 * hash) + DATA_FIELD_NUMBER;
        hash = (53 * hash) + getData().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static net.xlfe.reticul8.Reticul8.I2C_WRITE parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.xlfe.reticul8.Reticul8.I2C_WRITE parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.xlfe.reticul8.Reticul8.I2C_WRITE parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.xlfe.reticul8.Reticul8.I2C_WRITE parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.xlfe.reticul8.Reticul8.I2C_WRITE parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.xlfe.reticul8.Reticul8.I2C_WRITE parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.xlfe.reticul8.Reticul8.I2C_WRITE parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.xlfe.reticul8.Reticul8.I2C_WRITE parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.xlfe.reticul8.Reticul8.I2C_WRITE parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static net.xlfe.reticul8.Reticul8.I2C_WRITE parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.xlfe.reticul8.Reticul8.I2C_WRITE parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.xlfe.reticul8.Reticul8.I2C_WRITE parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(net.xlfe.reticul8.Reticul8.I2C_WRITE prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code I2C_WRITE}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:I2C_WRITE)
        net.xlfe.reticul8.Reticul8.I2C_WRITEOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.xlfe.reticul8.Reticul8.internal_static_I2C_WRITE_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.xlfe.reticul8.Reticul8.internal_static_I2C_WRITE_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                net.xlfe.reticul8.Reticul8.I2C_WRITE.class, net.xlfe.reticul8.Reticul8.I2C_WRITE.Builder.class);
      }

      // Construct using net.xlfe.reticul8.Reticul8.I2C_WRITE.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        device_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        len_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        data_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.xlfe.reticul8.Reticul8.internal_static_I2C_WRITE_descriptor;
      }

      @java.lang.Override
      public net.xlfe.reticul8.Reticul8.I2C_WRITE getDefaultInstanceForType() {
        return net.xlfe.reticul8.Reticul8.I2C_WRITE.getDefaultInstance();
      }

      @java.lang.Override
      public net.xlfe.reticul8.Reticul8.I2C_WRITE build() {
        net.xlfe.reticul8.Reticul8.I2C_WRITE result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public net.xlfe.reticul8.Reticul8.I2C_WRITE buildPartial() {
        net.xlfe.reticul8.Reticul8.I2C_WRITE result = new net.xlfe.reticul8.Reticul8.I2C_WRITE(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.device_ = device_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.len_ = len_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.data_ = data_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.xlfe.reticul8.Reticul8.I2C_WRITE) {
          return mergeFrom((net.xlfe.reticul8.Reticul8.I2C_WRITE)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(net.xlfe.reticul8.Reticul8.I2C_WRITE other) {
        if (other == net.xlfe.reticul8.Reticul8.I2C_WRITE.getDefaultInstance()) return this;
        if (other.hasDevice()) {
          setDevice(other.getDevice());
        }
        if (other.hasLen()) {
          setLen(other.getLen());
        }
        if (other.hasData()) {
          setData(other.getData());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasDevice()) {
          return false;
        }
        if (!hasLen()) {
          return false;
        }
        if (!hasData()) {
          return false;
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        net.xlfe.reticul8.Reticul8.I2C_WRITE parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (net.xlfe.reticul8.Reticul8.I2C_WRITE) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int device_ ;
      /**
       * <code>required fixed32 device = 1;</code>
       */
      public boolean hasDevice() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required fixed32 device = 1;</code>
       */
      public int getDevice() {
        return device_;
      }
      /**
       * <code>required fixed32 device = 1;</code>
       */
      public Builder setDevice(int value) {
        bitField0_ |= 0x00000001;
        device_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required fixed32 device = 1;</code>
       */
      public Builder clearDevice() {
        bitField0_ = (bitField0_ & ~0x00000001);
        device_ = 0;
        onChanged();
        return this;
      }

      private int len_ ;
      /**
       * <code>required fixed32 len = 3;</code>
       */
      public boolean hasLen() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required fixed32 len = 3;</code>
       */
      public int getLen() {
        return len_;
      }
      /**
       * <code>required fixed32 len = 3;</code>
       */
      public Builder setLen(int value) {
        bitField0_ |= 0x00000002;
        len_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required fixed32 len = 3;</code>
       */
      public Builder clearLen() {
        bitField0_ = (bitField0_ & ~0x00000002);
        len_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString data_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes data = 4 [(.nanopb) = { ... }</code>
       */
      public boolean hasData() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required bytes data = 4 [(.nanopb) = { ... }</code>
       */
      public com.google.protobuf.ByteString getData() {
        return data_;
      }
      /**
       * <code>required bytes data = 4 [(.nanopb) = { ... }</code>
       */
      public Builder setData(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        data_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes data = 4 [(.nanopb) = { ... }</code>
       */
      public Builder clearData() {
        bitField0_ = (bitField0_ & ~0x00000004);
        data_ = getDefaultInstance().getData();
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:I2C_WRITE)
    }

    // @@protoc_insertion_point(class_scope:I2C_WRITE)
    private static final net.xlfe.reticul8.Reticul8.I2C_WRITE DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new net.xlfe.reticul8.Reticul8.I2C_WRITE();
    }

    public static net.xlfe.reticul8.Reticul8.I2C_WRITE getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<I2C_WRITE>
        PARSER = new com.google.protobuf.AbstractParser<I2C_WRITE>() {
      @java.lang.Override
      public I2C_WRITE parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new I2C_WRITE(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<I2C_WRITE> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<I2C_WRITE> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public net.xlfe.reticul8.Reticul8.I2C_WRITE getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface I2C_READOrBuilder extends
      // @@protoc_insertion_point(interface_extends:I2C_READ)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required fixed32 device = 1;</code>
     */
    boolean hasDevice();
    /**
     * <code>required fixed32 device = 1;</code>
     */
    int getDevice();

    /**
     * <code>required fixed32 address = 2;</code>
     */
    boolean hasAddress();
    /**
     * <code>required fixed32 address = 2;</code>
     */
    int getAddress();

    /**
     * <code>required fixed32 len = 3;</code>
     */
    boolean hasLen();
    /**
     * <code>required fixed32 len = 3;</code>
     */
    int getLen();
  }
  /**
   * Protobuf type {@code I2C_READ}
   */
  public  static final class I2C_READ extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:I2C_READ)
      I2C_READOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use I2C_READ.newBuilder() to construct.
    private I2C_READ(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private I2C_READ() {
      device_ = 0;
      address_ = 0;
      len_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private I2C_READ(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 13: {
              bitField0_ |= 0x00000001;
              device_ = input.readFixed32();
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              address_ = input.readFixed32();
              break;
            }
            case 29: {
              bitField0_ |= 0x00000004;
              len_ = input.readFixed32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.xlfe.reticul8.Reticul8.internal_static_I2C_READ_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.xlfe.reticul8.Reticul8.internal_static_I2C_READ_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              net.xlfe.reticul8.Reticul8.I2C_READ.class, net.xlfe.reticul8.Reticul8.I2C_READ.Builder.class);
    }

    private int bitField0_;
    public static final int DEVICE_FIELD_NUMBER = 1;
    private int device_;
    /**
     * <code>required fixed32 device = 1;</code>
     */
    public boolean hasDevice() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required fixed32 device = 1;</code>
     */
    public int getDevice() {
      return device_;
    }

    public static final int ADDRESS_FIELD_NUMBER = 2;
    private int address_;
    /**
     * <code>required fixed32 address = 2;</code>
     */
    public boolean hasAddress() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required fixed32 address = 2;</code>
     */
    public int getAddress() {
      return address_;
    }

    public static final int LEN_FIELD_NUMBER = 3;
    private int len_;
    /**
     * <code>required fixed32 len = 3;</code>
     */
    public boolean hasLen() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required fixed32 len = 3;</code>
     */
    public int getLen() {
      return len_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasDevice()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAddress()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLen()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeFixed32(1, device_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFixed32(2, address_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeFixed32(3, len_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(1, device_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(2, address_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(3, len_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof net.xlfe.reticul8.Reticul8.I2C_READ)) {
        return super.equals(obj);
      }
      net.xlfe.reticul8.Reticul8.I2C_READ other = (net.xlfe.reticul8.Reticul8.I2C_READ) obj;

      boolean result = true;
      result = result && (hasDevice() == other.hasDevice());
      if (hasDevice()) {
        result = result && (getDevice()
            == other.getDevice());
      }
      result = result && (hasAddress() == other.hasAddress());
      if (hasAddress()) {
        result = result && (getAddress()
            == other.getAddress());
      }
      result = result && (hasLen() == other.hasLen());
      if (hasLen()) {
        result = result && (getLen()
            == other.getLen());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasDevice()) {
        hash = (37 * hash) + DEVICE_FIELD_NUMBER;
        hash = (53 * hash) + getDevice();
      }
      if (hasAddress()) {
        hash = (37 * hash) + ADDRESS_FIELD_NUMBER;
        hash = (53 * hash) + getAddress();
      }
      if (hasLen()) {
        hash = (37 * hash) + LEN_FIELD_NUMBER;
        hash = (53 * hash) + getLen();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static net.xlfe.reticul8.Reticul8.I2C_READ parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.xlfe.reticul8.Reticul8.I2C_READ parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.xlfe.reticul8.Reticul8.I2C_READ parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.xlfe.reticul8.Reticul8.I2C_READ parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.xlfe.reticul8.Reticul8.I2C_READ parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.xlfe.reticul8.Reticul8.I2C_READ parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.xlfe.reticul8.Reticul8.I2C_READ parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.xlfe.reticul8.Reticul8.I2C_READ parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.xlfe.reticul8.Reticul8.I2C_READ parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static net.xlfe.reticul8.Reticul8.I2C_READ parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.xlfe.reticul8.Reticul8.I2C_READ parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.xlfe.reticul8.Reticul8.I2C_READ parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(net.xlfe.reticul8.Reticul8.I2C_READ prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code I2C_READ}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:I2C_READ)
        net.xlfe.reticul8.Reticul8.I2C_READOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.xlfe.reticul8.Reticul8.internal_static_I2C_READ_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.xlfe.reticul8.Reticul8.internal_static_I2C_READ_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                net.xlfe.reticul8.Reticul8.I2C_READ.class, net.xlfe.reticul8.Reticul8.I2C_READ.Builder.class);
      }

      // Construct using net.xlfe.reticul8.Reticul8.I2C_READ.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        device_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        address_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        len_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.xlfe.reticul8.Reticul8.internal_static_I2C_READ_descriptor;
      }

      @java.lang.Override
      public net.xlfe.reticul8.Reticul8.I2C_READ getDefaultInstanceForType() {
        return net.xlfe.reticul8.Reticul8.I2C_READ.getDefaultInstance();
      }

      @java.lang.Override
      public net.xlfe.reticul8.Reticul8.I2C_READ build() {
        net.xlfe.reticul8.Reticul8.I2C_READ result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public net.xlfe.reticul8.Reticul8.I2C_READ buildPartial() {
        net.xlfe.reticul8.Reticul8.I2C_READ result = new net.xlfe.reticul8.Reticul8.I2C_READ(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.device_ = device_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.address_ = address_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.len_ = len_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.xlfe.reticul8.Reticul8.I2C_READ) {
          return mergeFrom((net.xlfe.reticul8.Reticul8.I2C_READ)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(net.xlfe.reticul8.Reticul8.I2C_READ other) {
        if (other == net.xlfe.reticul8.Reticul8.I2C_READ.getDefaultInstance()) return this;
        if (other.hasDevice()) {
          setDevice(other.getDevice());
        }
        if (other.hasAddress()) {
          setAddress(other.getAddress());
        }
        if (other.hasLen()) {
          setLen(other.getLen());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasDevice()) {
          return false;
        }
        if (!hasAddress()) {
          return false;
        }
        if (!hasLen()) {
          return false;
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        net.xlfe.reticul8.Reticul8.I2C_READ parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (net.xlfe.reticul8.Reticul8.I2C_READ) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int device_ ;
      /**
       * <code>required fixed32 device = 1;</code>
       */
      public boolean hasDevice() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required fixed32 device = 1;</code>
       */
      public int getDevice() {
        return device_;
      }
      /**
       * <code>required fixed32 device = 1;</code>
       */
      public Builder setDevice(int value) {
        bitField0_ |= 0x00000001;
        device_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required fixed32 device = 1;</code>
       */
      public Builder clearDevice() {
        bitField0_ = (bitField0_ & ~0x00000001);
        device_ = 0;
        onChanged();
        return this;
      }

      private int address_ ;
      /**
       * <code>required fixed32 address = 2;</code>
       */
      public boolean hasAddress() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required fixed32 address = 2;</code>
       */
      public int getAddress() {
        return address_;
      }
      /**
       * <code>required fixed32 address = 2;</code>
       */
      public Builder setAddress(int value) {
        bitField0_ |= 0x00000002;
        address_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required fixed32 address = 2;</code>
       */
      public Builder clearAddress() {
        bitField0_ = (bitField0_ & ~0x00000002);
        address_ = 0;
        onChanged();
        return this;
      }

      private int len_ ;
      /**
       * <code>required fixed32 len = 3;</code>
       */
      public boolean hasLen() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required fixed32 len = 3;</code>
       */
      public int getLen() {
        return len_;
      }
      /**
       * <code>required fixed32 len = 3;</code>
       */
      public Builder setLen(int value) {
        bitField0_ |= 0x00000004;
        len_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required fixed32 len = 3;</code>
       */
      public Builder clearLen() {
        bitField0_ = (bitField0_ & ~0x00000004);
        len_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:I2C_READ)
    }

    // @@protoc_insertion_point(class_scope:I2C_READ)
    private static final net.xlfe.reticul8.Reticul8.I2C_READ DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new net.xlfe.reticul8.Reticul8.I2C_READ();
    }

    public static net.xlfe.reticul8.Reticul8.I2C_READ getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<I2C_READ>
        PARSER = new com.google.protobuf.AbstractParser<I2C_READ>() {
      @java.lang.Override
      public I2C_READ parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new I2C_READ(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<I2C_READ> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<I2C_READ> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public net.xlfe.reticul8.Reticul8.I2C_READ getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PINGOrBuilder extends
      // @@protoc_insertion_point(interface_extends:PING)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required bool ping = 1;</code>
     */
    boolean hasPing();
    /**
     * <code>required bool ping = 1;</code>
     */
    boolean getPing();
  }
  /**
   * Protobuf type {@code PING}
   */
  public  static final class PING extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:PING)
      PINGOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use PING.newBuilder() to construct.
    private PING(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PING() {
      ping_ = false;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private PING(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              bitField0_ |= 0x00000001;
              ping_ = input.readBool();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.xlfe.reticul8.Reticul8.internal_static_PING_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.xlfe.reticul8.Reticul8.internal_static_PING_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              net.xlfe.reticul8.Reticul8.PING.class, net.xlfe.reticul8.Reticul8.PING.Builder.class);
    }

    private int bitField0_;
    public static final int PING_FIELD_NUMBER = 1;
    private boolean ping_;
    /**
     * <code>required bool ping = 1;</code>
     */
    public boolean hasPing() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required bool ping = 1;</code>
     */
    public boolean getPing() {
      return ping_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasPing()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(1, ping_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, ping_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof net.xlfe.reticul8.Reticul8.PING)) {
        return super.equals(obj);
      }
      net.xlfe.reticul8.Reticul8.PING other = (net.xlfe.reticul8.Reticul8.PING) obj;

      boolean result = true;
      result = result && (hasPing() == other.hasPing());
      if (hasPing()) {
        result = result && (getPing()
            == other.getPing());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasPing()) {
        hash = (37 * hash) + PING_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getPing());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static net.xlfe.reticul8.Reticul8.PING parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.xlfe.reticul8.Reticul8.PING parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.xlfe.reticul8.Reticul8.PING parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.xlfe.reticul8.Reticul8.PING parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.xlfe.reticul8.Reticul8.PING parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.xlfe.reticul8.Reticul8.PING parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.xlfe.reticul8.Reticul8.PING parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.xlfe.reticul8.Reticul8.PING parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.xlfe.reticul8.Reticul8.PING parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static net.xlfe.reticul8.Reticul8.PING parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.xlfe.reticul8.Reticul8.PING parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.xlfe.reticul8.Reticul8.PING parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(net.xlfe.reticul8.Reticul8.PING prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code PING}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:PING)
        net.xlfe.reticul8.Reticul8.PINGOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.xlfe.reticul8.Reticul8.internal_static_PING_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.xlfe.reticul8.Reticul8.internal_static_PING_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                net.xlfe.reticul8.Reticul8.PING.class, net.xlfe.reticul8.Reticul8.PING.Builder.class);
      }

      // Construct using net.xlfe.reticul8.Reticul8.PING.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        ping_ = false;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.xlfe.reticul8.Reticul8.internal_static_PING_descriptor;
      }

      @java.lang.Override
      public net.xlfe.reticul8.Reticul8.PING getDefaultInstanceForType() {
        return net.xlfe.reticul8.Reticul8.PING.getDefaultInstance();
      }

      @java.lang.Override
      public net.xlfe.reticul8.Reticul8.PING build() {
        net.xlfe.reticul8.Reticul8.PING result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public net.xlfe.reticul8.Reticul8.PING buildPartial() {
        net.xlfe.reticul8.Reticul8.PING result = new net.xlfe.reticul8.Reticul8.PING(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.ping_ = ping_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.xlfe.reticul8.Reticul8.PING) {
          return mergeFrom((net.xlfe.reticul8.Reticul8.PING)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(net.xlfe.reticul8.Reticul8.PING other) {
        if (other == net.xlfe.reticul8.Reticul8.PING.getDefaultInstance()) return this;
        if (other.hasPing()) {
          setPing(other.getPing());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasPing()) {
          return false;
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        net.xlfe.reticul8.Reticul8.PING parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (net.xlfe.reticul8.Reticul8.PING) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private boolean ping_ ;
      /**
       * <code>required bool ping = 1;</code>
       */
      public boolean hasPing() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required bool ping = 1;</code>
       */
      public boolean getPing() {
        return ping_;
      }
      /**
       * <code>required bool ping = 1;</code>
       */
      public Builder setPing(boolean value) {
        bitField0_ |= 0x00000001;
        ping_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bool ping = 1;</code>
       */
      public Builder clearPing() {
        bitField0_ = (bitField0_ & ~0x00000001);
        ping_ = false;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:PING)
    }

    // @@protoc_insertion_point(class_scope:PING)
    private static final net.xlfe.reticul8.Reticul8.PING DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new net.xlfe.reticul8.Reticul8.PING();
    }

    public static net.xlfe.reticul8.Reticul8.PING getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<PING>
        PARSER = new com.google.protobuf.AbstractParser<PING>() {
      @java.lang.Override
      public PING parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PING(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<PING> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PING> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public net.xlfe.reticul8.Reticul8.PING getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface REBOOTOrBuilder extends
      // @@protoc_insertion_point(interface_extends:REBOOT)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required bool reboot = 1;</code>
     */
    boolean hasReboot();
    /**
     * <code>required bool reboot = 1;</code>
     */
    boolean getReboot();
  }
  /**
   * Protobuf type {@code REBOOT}
   */
  public  static final class REBOOT extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:REBOOT)
      REBOOTOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use REBOOT.newBuilder() to construct.
    private REBOOT(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private REBOOT() {
      reboot_ = false;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private REBOOT(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              bitField0_ |= 0x00000001;
              reboot_ = input.readBool();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.xlfe.reticul8.Reticul8.internal_static_REBOOT_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.xlfe.reticul8.Reticul8.internal_static_REBOOT_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              net.xlfe.reticul8.Reticul8.REBOOT.class, net.xlfe.reticul8.Reticul8.REBOOT.Builder.class);
    }

    private int bitField0_;
    public static final int REBOOT_FIELD_NUMBER = 1;
    private boolean reboot_;
    /**
     * <code>required bool reboot = 1;</code>
     */
    public boolean hasReboot() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required bool reboot = 1;</code>
     */
    public boolean getReboot() {
      return reboot_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasReboot()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(1, reboot_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, reboot_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof net.xlfe.reticul8.Reticul8.REBOOT)) {
        return super.equals(obj);
      }
      net.xlfe.reticul8.Reticul8.REBOOT other = (net.xlfe.reticul8.Reticul8.REBOOT) obj;

      boolean result = true;
      result = result && (hasReboot() == other.hasReboot());
      if (hasReboot()) {
        result = result && (getReboot()
            == other.getReboot());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasReboot()) {
        hash = (37 * hash) + REBOOT_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getReboot());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static net.xlfe.reticul8.Reticul8.REBOOT parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.xlfe.reticul8.Reticul8.REBOOT parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.xlfe.reticul8.Reticul8.REBOOT parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.xlfe.reticul8.Reticul8.REBOOT parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.xlfe.reticul8.Reticul8.REBOOT parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.xlfe.reticul8.Reticul8.REBOOT parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.xlfe.reticul8.Reticul8.REBOOT parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.xlfe.reticul8.Reticul8.REBOOT parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.xlfe.reticul8.Reticul8.REBOOT parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static net.xlfe.reticul8.Reticul8.REBOOT parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.xlfe.reticul8.Reticul8.REBOOT parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.xlfe.reticul8.Reticul8.REBOOT parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(net.xlfe.reticul8.Reticul8.REBOOT prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code REBOOT}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:REBOOT)
        net.xlfe.reticul8.Reticul8.REBOOTOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.xlfe.reticul8.Reticul8.internal_static_REBOOT_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.xlfe.reticul8.Reticul8.internal_static_REBOOT_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                net.xlfe.reticul8.Reticul8.REBOOT.class, net.xlfe.reticul8.Reticul8.REBOOT.Builder.class);
      }

      // Construct using net.xlfe.reticul8.Reticul8.REBOOT.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        reboot_ = false;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.xlfe.reticul8.Reticul8.internal_static_REBOOT_descriptor;
      }

      @java.lang.Override
      public net.xlfe.reticul8.Reticul8.REBOOT getDefaultInstanceForType() {
        return net.xlfe.reticul8.Reticul8.REBOOT.getDefaultInstance();
      }

      @java.lang.Override
      public net.xlfe.reticul8.Reticul8.REBOOT build() {
        net.xlfe.reticul8.Reticul8.REBOOT result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public net.xlfe.reticul8.Reticul8.REBOOT buildPartial() {
        net.xlfe.reticul8.Reticul8.REBOOT result = new net.xlfe.reticul8.Reticul8.REBOOT(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.reboot_ = reboot_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.xlfe.reticul8.Reticul8.REBOOT) {
          return mergeFrom((net.xlfe.reticul8.Reticul8.REBOOT)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(net.xlfe.reticul8.Reticul8.REBOOT other) {
        if (other == net.xlfe.reticul8.Reticul8.REBOOT.getDefaultInstance()) return this;
        if (other.hasReboot()) {
          setReboot(other.getReboot());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasReboot()) {
          return false;
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        net.xlfe.reticul8.Reticul8.REBOOT parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (net.xlfe.reticul8.Reticul8.REBOOT) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private boolean reboot_ ;
      /**
       * <code>required bool reboot = 1;</code>
       */
      public boolean hasReboot() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required bool reboot = 1;</code>
       */
      public boolean getReboot() {
        return reboot_;
      }
      /**
       * <code>required bool reboot = 1;</code>
       */
      public Builder setReboot(boolean value) {
        bitField0_ |= 0x00000001;
        reboot_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bool reboot = 1;</code>
       */
      public Builder clearReboot() {
        bitField0_ = (bitField0_ & ~0x00000001);
        reboot_ = false;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:REBOOT)
    }

    // @@protoc_insertion_point(class_scope:REBOOT)
    private static final net.xlfe.reticul8.Reticul8.REBOOT DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new net.xlfe.reticul8.Reticul8.REBOOT();
    }

    public static net.xlfe.reticul8.Reticul8.REBOOT getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<REBOOT>
        PARSER = new com.google.protobuf.AbstractParser<REBOOT>() {
      @java.lang.Override
      public REBOOT parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new REBOOT(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<REBOOT> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<REBOOT> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public net.xlfe.reticul8.Reticul8.REBOOT getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SYSINFOOrBuilder extends
      // @@protoc_insertion_point(interface_extends:SYSINFO)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required bool sysinfo = 1;</code>
     */
    boolean hasSysinfo();
    /**
     * <code>required bool sysinfo = 1;</code>
     */
    boolean getSysinfo();
  }
  /**
   * Protobuf type {@code SYSINFO}
   */
  public  static final class SYSINFO extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:SYSINFO)
      SYSINFOOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SYSINFO.newBuilder() to construct.
    private SYSINFO(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SYSINFO() {
      sysinfo_ = false;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SYSINFO(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              bitField0_ |= 0x00000001;
              sysinfo_ = input.readBool();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.xlfe.reticul8.Reticul8.internal_static_SYSINFO_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.xlfe.reticul8.Reticul8.internal_static_SYSINFO_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              net.xlfe.reticul8.Reticul8.SYSINFO.class, net.xlfe.reticul8.Reticul8.SYSINFO.Builder.class);
    }

    private int bitField0_;
    public static final int SYSINFO_FIELD_NUMBER = 1;
    private boolean sysinfo_;
    /**
     * <code>required bool sysinfo = 1;</code>
     */
    public boolean hasSysinfo() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required bool sysinfo = 1;</code>
     */
    public boolean getSysinfo() {
      return sysinfo_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasSysinfo()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(1, sysinfo_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, sysinfo_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof net.xlfe.reticul8.Reticul8.SYSINFO)) {
        return super.equals(obj);
      }
      net.xlfe.reticul8.Reticul8.SYSINFO other = (net.xlfe.reticul8.Reticul8.SYSINFO) obj;

      boolean result = true;
      result = result && (hasSysinfo() == other.hasSysinfo());
      if (hasSysinfo()) {
        result = result && (getSysinfo()
            == other.getSysinfo());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasSysinfo()) {
        hash = (37 * hash) + SYSINFO_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getSysinfo());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static net.xlfe.reticul8.Reticul8.SYSINFO parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.xlfe.reticul8.Reticul8.SYSINFO parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.xlfe.reticul8.Reticul8.SYSINFO parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.xlfe.reticul8.Reticul8.SYSINFO parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.xlfe.reticul8.Reticul8.SYSINFO parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.xlfe.reticul8.Reticul8.SYSINFO parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.xlfe.reticul8.Reticul8.SYSINFO parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.xlfe.reticul8.Reticul8.SYSINFO parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.xlfe.reticul8.Reticul8.SYSINFO parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static net.xlfe.reticul8.Reticul8.SYSINFO parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.xlfe.reticul8.Reticul8.SYSINFO parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.xlfe.reticul8.Reticul8.SYSINFO parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(net.xlfe.reticul8.Reticul8.SYSINFO prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code SYSINFO}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:SYSINFO)
        net.xlfe.reticul8.Reticul8.SYSINFOOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.xlfe.reticul8.Reticul8.internal_static_SYSINFO_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.xlfe.reticul8.Reticul8.internal_static_SYSINFO_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                net.xlfe.reticul8.Reticul8.SYSINFO.class, net.xlfe.reticul8.Reticul8.SYSINFO.Builder.class);
      }

      // Construct using net.xlfe.reticul8.Reticul8.SYSINFO.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        sysinfo_ = false;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.xlfe.reticul8.Reticul8.internal_static_SYSINFO_descriptor;
      }

      @java.lang.Override
      public net.xlfe.reticul8.Reticul8.SYSINFO getDefaultInstanceForType() {
        return net.xlfe.reticul8.Reticul8.SYSINFO.getDefaultInstance();
      }

      @java.lang.Override
      public net.xlfe.reticul8.Reticul8.SYSINFO build() {
        net.xlfe.reticul8.Reticul8.SYSINFO result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public net.xlfe.reticul8.Reticul8.SYSINFO buildPartial() {
        net.xlfe.reticul8.Reticul8.SYSINFO result = new net.xlfe.reticul8.Reticul8.SYSINFO(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.sysinfo_ = sysinfo_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.xlfe.reticul8.Reticul8.SYSINFO) {
          return mergeFrom((net.xlfe.reticul8.Reticul8.SYSINFO)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(net.xlfe.reticul8.Reticul8.SYSINFO other) {
        if (other == net.xlfe.reticul8.Reticul8.SYSINFO.getDefaultInstance()) return this;
        if (other.hasSysinfo()) {
          setSysinfo(other.getSysinfo());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasSysinfo()) {
          return false;
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        net.xlfe.reticul8.Reticul8.SYSINFO parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (net.xlfe.reticul8.Reticul8.SYSINFO) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private boolean sysinfo_ ;
      /**
       * <code>required bool sysinfo = 1;</code>
       */
      public boolean hasSysinfo() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required bool sysinfo = 1;</code>
       */
      public boolean getSysinfo() {
        return sysinfo_;
      }
      /**
       * <code>required bool sysinfo = 1;</code>
       */
      public Builder setSysinfo(boolean value) {
        bitField0_ |= 0x00000001;
        sysinfo_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bool sysinfo = 1;</code>
       */
      public Builder clearSysinfo() {
        bitField0_ = (bitField0_ & ~0x00000001);
        sysinfo_ = false;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:SYSINFO)
    }

    // @@protoc_insertion_point(class_scope:SYSINFO)
    private static final net.xlfe.reticul8.Reticul8.SYSINFO DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new net.xlfe.reticul8.Reticul8.SYSINFO();
    }

    public static net.xlfe.reticul8.Reticul8.SYSINFO getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<SYSINFO>
        PARSER = new com.google.protobuf.AbstractParser<SYSINFO>() {
      @java.lang.Override
      public SYSINFO parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SYSINFO(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SYSINFO> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SYSINFO> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public net.xlfe.reticul8.Reticul8.SYSINFO getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SCHEDULEOrBuilder extends
      // @@protoc_insertion_point(interface_extends:SCHEDULE)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required sfixed32 count = 1;</code>
     */
    boolean hasCount();
    /**
     * <code>required sfixed32 count = 1;</code>
     */
    int getCount();

    /**
     * <code>required fixed32 every_ms = 2;</code>
     */
    boolean hasEveryMs();
    /**
     * <code>required fixed32 every_ms = 2;</code>
     */
    int getEveryMs();

    /**
     * <code>required fixed32 after_ms = 3;</code>
     */
    boolean hasAfterMs();
    /**
     * <code>required fixed32 after_ms = 3;</code>
     */
    int getAfterMs();
  }
  /**
   * Protobuf type {@code SCHEDULE}
   */
  public  static final class SCHEDULE extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:SCHEDULE)
      SCHEDULEOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SCHEDULE.newBuilder() to construct.
    private SCHEDULE(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SCHEDULE() {
      count_ = 0;
      everyMs_ = 0;
      afterMs_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SCHEDULE(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 13: {
              bitField0_ |= 0x00000001;
              count_ = input.readSFixed32();
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              everyMs_ = input.readFixed32();
              break;
            }
            case 29: {
              bitField0_ |= 0x00000004;
              afterMs_ = input.readFixed32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.xlfe.reticul8.Reticul8.internal_static_SCHEDULE_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.xlfe.reticul8.Reticul8.internal_static_SCHEDULE_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              net.xlfe.reticul8.Reticul8.SCHEDULE.class, net.xlfe.reticul8.Reticul8.SCHEDULE.Builder.class);
    }

    private int bitField0_;
    public static final int COUNT_FIELD_NUMBER = 1;
    private int count_;
    /**
     * <code>required sfixed32 count = 1;</code>
     */
    public boolean hasCount() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required sfixed32 count = 1;</code>
     */
    public int getCount() {
      return count_;
    }

    public static final int EVERY_MS_FIELD_NUMBER = 2;
    private int everyMs_;
    /**
     * <code>required fixed32 every_ms = 2;</code>
     */
    public boolean hasEveryMs() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required fixed32 every_ms = 2;</code>
     */
    public int getEveryMs() {
      return everyMs_;
    }

    public static final int AFTER_MS_FIELD_NUMBER = 3;
    private int afterMs_;
    /**
     * <code>required fixed32 after_ms = 3;</code>
     */
    public boolean hasAfterMs() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required fixed32 after_ms = 3;</code>
     */
    public int getAfterMs() {
      return afterMs_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasCount()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasEveryMs()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAfterMs()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeSFixed32(1, count_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFixed32(2, everyMs_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeFixed32(3, afterMs_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSFixed32Size(1, count_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(2, everyMs_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(3, afterMs_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof net.xlfe.reticul8.Reticul8.SCHEDULE)) {
        return super.equals(obj);
      }
      net.xlfe.reticul8.Reticul8.SCHEDULE other = (net.xlfe.reticul8.Reticul8.SCHEDULE) obj;

      boolean result = true;
      result = result && (hasCount() == other.hasCount());
      if (hasCount()) {
        result = result && (getCount()
            == other.getCount());
      }
      result = result && (hasEveryMs() == other.hasEveryMs());
      if (hasEveryMs()) {
        result = result && (getEveryMs()
            == other.getEveryMs());
      }
      result = result && (hasAfterMs() == other.hasAfterMs());
      if (hasAfterMs()) {
        result = result && (getAfterMs()
            == other.getAfterMs());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasCount()) {
        hash = (37 * hash) + COUNT_FIELD_NUMBER;
        hash = (53 * hash) + getCount();
      }
      if (hasEveryMs()) {
        hash = (37 * hash) + EVERY_MS_FIELD_NUMBER;
        hash = (53 * hash) + getEveryMs();
      }
      if (hasAfterMs()) {
        hash = (37 * hash) + AFTER_MS_FIELD_NUMBER;
        hash = (53 * hash) + getAfterMs();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static net.xlfe.reticul8.Reticul8.SCHEDULE parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.xlfe.reticul8.Reticul8.SCHEDULE parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.xlfe.reticul8.Reticul8.SCHEDULE parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.xlfe.reticul8.Reticul8.SCHEDULE parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.xlfe.reticul8.Reticul8.SCHEDULE parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.xlfe.reticul8.Reticul8.SCHEDULE parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.xlfe.reticul8.Reticul8.SCHEDULE parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.xlfe.reticul8.Reticul8.SCHEDULE parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.xlfe.reticul8.Reticul8.SCHEDULE parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static net.xlfe.reticul8.Reticul8.SCHEDULE parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.xlfe.reticul8.Reticul8.SCHEDULE parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.xlfe.reticul8.Reticul8.SCHEDULE parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(net.xlfe.reticul8.Reticul8.SCHEDULE prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code SCHEDULE}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:SCHEDULE)
        net.xlfe.reticul8.Reticul8.SCHEDULEOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.xlfe.reticul8.Reticul8.internal_static_SCHEDULE_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.xlfe.reticul8.Reticul8.internal_static_SCHEDULE_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                net.xlfe.reticul8.Reticul8.SCHEDULE.class, net.xlfe.reticul8.Reticul8.SCHEDULE.Builder.class);
      }

      // Construct using net.xlfe.reticul8.Reticul8.SCHEDULE.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        count_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        everyMs_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        afterMs_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.xlfe.reticul8.Reticul8.internal_static_SCHEDULE_descriptor;
      }

      @java.lang.Override
      public net.xlfe.reticul8.Reticul8.SCHEDULE getDefaultInstanceForType() {
        return net.xlfe.reticul8.Reticul8.SCHEDULE.getDefaultInstance();
      }

      @java.lang.Override
      public net.xlfe.reticul8.Reticul8.SCHEDULE build() {
        net.xlfe.reticul8.Reticul8.SCHEDULE result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public net.xlfe.reticul8.Reticul8.SCHEDULE buildPartial() {
        net.xlfe.reticul8.Reticul8.SCHEDULE result = new net.xlfe.reticul8.Reticul8.SCHEDULE(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.count_ = count_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.everyMs_ = everyMs_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.afterMs_ = afterMs_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.xlfe.reticul8.Reticul8.SCHEDULE) {
          return mergeFrom((net.xlfe.reticul8.Reticul8.SCHEDULE)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(net.xlfe.reticul8.Reticul8.SCHEDULE other) {
        if (other == net.xlfe.reticul8.Reticul8.SCHEDULE.getDefaultInstance()) return this;
        if (other.hasCount()) {
          setCount(other.getCount());
        }
        if (other.hasEveryMs()) {
          setEveryMs(other.getEveryMs());
        }
        if (other.hasAfterMs()) {
          setAfterMs(other.getAfterMs());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasCount()) {
          return false;
        }
        if (!hasEveryMs()) {
          return false;
        }
        if (!hasAfterMs()) {
          return false;
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        net.xlfe.reticul8.Reticul8.SCHEDULE parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (net.xlfe.reticul8.Reticul8.SCHEDULE) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int count_ ;
      /**
       * <code>required sfixed32 count = 1;</code>
       */
      public boolean hasCount() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required sfixed32 count = 1;</code>
       */
      public int getCount() {
        return count_;
      }
      /**
       * <code>required sfixed32 count = 1;</code>
       */
      public Builder setCount(int value) {
        bitField0_ |= 0x00000001;
        count_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required sfixed32 count = 1;</code>
       */
      public Builder clearCount() {
        bitField0_ = (bitField0_ & ~0x00000001);
        count_ = 0;
        onChanged();
        return this;
      }

      private int everyMs_ ;
      /**
       * <code>required fixed32 every_ms = 2;</code>
       */
      public boolean hasEveryMs() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required fixed32 every_ms = 2;</code>
       */
      public int getEveryMs() {
        return everyMs_;
      }
      /**
       * <code>required fixed32 every_ms = 2;</code>
       */
      public Builder setEveryMs(int value) {
        bitField0_ |= 0x00000002;
        everyMs_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required fixed32 every_ms = 2;</code>
       */
      public Builder clearEveryMs() {
        bitField0_ = (bitField0_ & ~0x00000002);
        everyMs_ = 0;
        onChanged();
        return this;
      }

      private int afterMs_ ;
      /**
       * <code>required fixed32 after_ms = 3;</code>
       */
      public boolean hasAfterMs() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required fixed32 after_ms = 3;</code>
       */
      public int getAfterMs() {
        return afterMs_;
      }
      /**
       * <code>required fixed32 after_ms = 3;</code>
       */
      public Builder setAfterMs(int value) {
        bitField0_ |= 0x00000004;
        afterMs_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required fixed32 after_ms = 3;</code>
       */
      public Builder clearAfterMs() {
        bitField0_ = (bitField0_ & ~0x00000004);
        afterMs_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:SCHEDULE)
    }

    // @@protoc_insertion_point(class_scope:SCHEDULE)
    private static final net.xlfe.reticul8.Reticul8.SCHEDULE DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new net.xlfe.reticul8.Reticul8.SCHEDULE();
    }

    public static net.xlfe.reticul8.Reticul8.SCHEDULE getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<SCHEDULE>
        PARSER = new com.google.protobuf.AbstractParser<SCHEDULE>() {
      @java.lang.Override
      public SCHEDULE parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SCHEDULE(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SCHEDULE> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SCHEDULE> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public net.xlfe.reticul8.Reticul8.SCHEDULE getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RUN_NESTEDOrBuilder extends
      // @@protoc_insertion_point(interface_extends:RUN_NESTED)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required bytes data = 3 [(.nanopb) = { ... }</code>
     */
    boolean hasData();
    /**
     * <code>required bytes data = 3 [(.nanopb) = { ... }</code>
     */
    com.google.protobuf.ByteString getData();
  }
  /**
   * <pre>
   * Allow a nested command to run using the optional data
   * </pre>
   *
   * Protobuf type {@code RUN_NESTED}
   */
  public  static final class RUN_NESTED extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:RUN_NESTED)
      RUN_NESTEDOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RUN_NESTED.newBuilder() to construct.
    private RUN_NESTED(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RUN_NESTED() {
      data_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RUN_NESTED(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 26: {
              bitField0_ |= 0x00000001;
              data_ = input.readBytes();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.xlfe.reticul8.Reticul8.internal_static_RUN_NESTED_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.xlfe.reticul8.Reticul8.internal_static_RUN_NESTED_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              net.xlfe.reticul8.Reticul8.RUN_NESTED.class, net.xlfe.reticul8.Reticul8.RUN_NESTED.Builder.class);
    }

    private int bitField0_;
    public static final int DATA_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString data_;
    /**
     * <code>required bytes data = 3 [(.nanopb) = { ... }</code>
     */
    public boolean hasData() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required bytes data = 3 [(.nanopb) = { ... }</code>
     */
    public com.google.protobuf.ByteString getData() {
      return data_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasData()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(3, data_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, data_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof net.xlfe.reticul8.Reticul8.RUN_NESTED)) {
        return super.equals(obj);
      }
      net.xlfe.reticul8.Reticul8.RUN_NESTED other = (net.xlfe.reticul8.Reticul8.RUN_NESTED) obj;

      boolean result = true;
      result = result && (hasData() == other.hasData());
      if (hasData()) {
        result = result && getData()
            .equals(other.getData());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasData()) {
        hash = (37 * hash) + DATA_FIELD_NUMBER;
        hash = (53 * hash) + getData().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static net.xlfe.reticul8.Reticul8.RUN_NESTED parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.xlfe.reticul8.Reticul8.RUN_NESTED parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.xlfe.reticul8.Reticul8.RUN_NESTED parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.xlfe.reticul8.Reticul8.RUN_NESTED parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.xlfe.reticul8.Reticul8.RUN_NESTED parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.xlfe.reticul8.Reticul8.RUN_NESTED parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.xlfe.reticul8.Reticul8.RUN_NESTED parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.xlfe.reticul8.Reticul8.RUN_NESTED parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.xlfe.reticul8.Reticul8.RUN_NESTED parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static net.xlfe.reticul8.Reticul8.RUN_NESTED parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.xlfe.reticul8.Reticul8.RUN_NESTED parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.xlfe.reticul8.Reticul8.RUN_NESTED parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(net.xlfe.reticul8.Reticul8.RUN_NESTED prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Allow a nested command to run using the optional data
     * </pre>
     *
     * Protobuf type {@code RUN_NESTED}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:RUN_NESTED)
        net.xlfe.reticul8.Reticul8.RUN_NESTEDOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.xlfe.reticul8.Reticul8.internal_static_RUN_NESTED_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.xlfe.reticul8.Reticul8.internal_static_RUN_NESTED_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                net.xlfe.reticul8.Reticul8.RUN_NESTED.class, net.xlfe.reticul8.Reticul8.RUN_NESTED.Builder.class);
      }

      // Construct using net.xlfe.reticul8.Reticul8.RUN_NESTED.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        data_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.xlfe.reticul8.Reticul8.internal_static_RUN_NESTED_descriptor;
      }

      @java.lang.Override
      public net.xlfe.reticul8.Reticul8.RUN_NESTED getDefaultInstanceForType() {
        return net.xlfe.reticul8.Reticul8.RUN_NESTED.getDefaultInstance();
      }

      @java.lang.Override
      public net.xlfe.reticul8.Reticul8.RUN_NESTED build() {
        net.xlfe.reticul8.Reticul8.RUN_NESTED result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public net.xlfe.reticul8.Reticul8.RUN_NESTED buildPartial() {
        net.xlfe.reticul8.Reticul8.RUN_NESTED result = new net.xlfe.reticul8.Reticul8.RUN_NESTED(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.data_ = data_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.xlfe.reticul8.Reticul8.RUN_NESTED) {
          return mergeFrom((net.xlfe.reticul8.Reticul8.RUN_NESTED)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(net.xlfe.reticul8.Reticul8.RUN_NESTED other) {
        if (other == net.xlfe.reticul8.Reticul8.RUN_NESTED.getDefaultInstance()) return this;
        if (other.hasData()) {
          setData(other.getData());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasData()) {
          return false;
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        net.xlfe.reticul8.Reticul8.RUN_NESTED parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (net.xlfe.reticul8.Reticul8.RUN_NESTED) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.ByteString data_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes data = 3 [(.nanopb) = { ... }</code>
       */
      public boolean hasData() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required bytes data = 3 [(.nanopb) = { ... }</code>
       */
      public com.google.protobuf.ByteString getData() {
        return data_;
      }
      /**
       * <code>required bytes data = 3 [(.nanopb) = { ... }</code>
       */
      public Builder setData(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        data_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes data = 3 [(.nanopb) = { ... }</code>
       */
      public Builder clearData() {
        bitField0_ = (bitField0_ & ~0x00000001);
        data_ = getDefaultInstance().getData();
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:RUN_NESTED)
    }

    // @@protoc_insertion_point(class_scope:RUN_NESTED)
    private static final net.xlfe.reticul8.Reticul8.RUN_NESTED DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new net.xlfe.reticul8.Reticul8.RUN_NESTED();
    }

    public static net.xlfe.reticul8.Reticul8.RUN_NESTED getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<RUN_NESTED>
        PARSER = new com.google.protobuf.AbstractParser<RUN_NESTED>() {
      @java.lang.Override
      public RUN_NESTED parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RUN_NESTED(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RUN_NESTED> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RUN_NESTED> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public net.xlfe.reticul8.Reticul8.RUN_NESTED getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RPCOrBuilder extends
      // @@protoc_insertion_point(interface_extends:RPC)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .GPIO_CONFIG gpio_config = 1;</code>
     */
    boolean hasGpioConfig();
    /**
     * <code>optional .GPIO_CONFIG gpio_config = 1;</code>
     */
    net.xlfe.reticul8.Reticul8.GPIO_CONFIG getGpioConfig();
    /**
     * <code>optional .GPIO_CONFIG gpio_config = 1;</code>
     */
    net.xlfe.reticul8.Reticul8.GPIO_CONFIGOrBuilder getGpioConfigOrBuilder();

    /**
     * <code>optional .GPIO_WRITE gpio_write = 2;</code>
     */
    boolean hasGpioWrite();
    /**
     * <code>optional .GPIO_WRITE gpio_write = 2;</code>
     */
    net.xlfe.reticul8.Reticul8.GPIO_WRITE getGpioWrite();
    /**
     * <code>optional .GPIO_WRITE gpio_write = 2;</code>
     */
    net.xlfe.reticul8.Reticul8.GPIO_WRITEOrBuilder getGpioWriteOrBuilder();

    /**
     * <code>optional .GPIO_READ gpio_read = 3;</code>
     */
    boolean hasGpioRead();
    /**
     * <code>optional .GPIO_READ gpio_read = 3;</code>
     */
    net.xlfe.reticul8.Reticul8.GPIO_READ getGpioRead();
    /**
     * <code>optional .GPIO_READ gpio_read = 3;</code>
     */
    net.xlfe.reticul8.Reticul8.GPIO_READOrBuilder getGpioReadOrBuilder();

    /**
     * <code>optional .GPIO_MONITOR gpio_monitor = 4;</code>
     */
    boolean hasGpioMonitor();
    /**
     * <code>optional .GPIO_MONITOR gpio_monitor = 4;</code>
     */
    net.xlfe.reticul8.Reticul8.GPIO_MONITOR getGpioMonitor();
    /**
     * <code>optional .GPIO_MONITOR gpio_monitor = 4;</code>
     */
    net.xlfe.reticul8.Reticul8.GPIO_MONITOROrBuilder getGpioMonitorOrBuilder();

    /**
     * <code>optional .PWM_CONFIG pwm_config = 5;</code>
     */
    boolean hasPwmConfig();
    /**
     * <code>optional .PWM_CONFIG pwm_config = 5;</code>
     */
    net.xlfe.reticul8.Reticul8.PWM_CONFIG getPwmConfig();
    /**
     * <code>optional .PWM_CONFIG pwm_config = 5;</code>
     */
    net.xlfe.reticul8.Reticul8.PWM_CONFIGOrBuilder getPwmConfigOrBuilder();

    /**
     * <code>optional .PWM_DUTY pwm_duty = 6;</code>
     */
    boolean hasPwmDuty();
    /**
     * <code>optional .PWM_DUTY pwm_duty = 6;</code>
     */
    net.xlfe.reticul8.Reticul8.PWM_DUTY getPwmDuty();
    /**
     * <code>optional .PWM_DUTY pwm_duty = 6;</code>
     */
    net.xlfe.reticul8.Reticul8.PWM_DUTYOrBuilder getPwmDutyOrBuilder();

    /**
     * <code>optional .PWM_FADE pwm_fade = 7;</code>
     */
    boolean hasPwmFade();
    /**
     * <code>optional .PWM_FADE pwm_fade = 7;</code>
     */
    net.xlfe.reticul8.Reticul8.PWM_FADE getPwmFade();
    /**
     * <code>optional .PWM_FADE pwm_fade = 7;</code>
     */
    net.xlfe.reticul8.Reticul8.PWM_FADEOrBuilder getPwmFadeOrBuilder();

    /**
     * <code>optional .PWM_STOP pwm_stop = 15;</code>
     */
    boolean hasPwmStop();
    /**
     * <code>optional .PWM_STOP pwm_stop = 15;</code>
     */
    net.xlfe.reticul8.Reticul8.PWM_STOP getPwmStop();
    /**
     * <code>optional .PWM_STOP pwm_stop = 15;</code>
     */
    net.xlfe.reticul8.Reticul8.PWM_STOPOrBuilder getPwmStopOrBuilder();

    /**
     * <code>optional .PING ping = 8;</code>
     */
    boolean hasPing();
    /**
     * <code>optional .PING ping = 8;</code>
     */
    net.xlfe.reticul8.Reticul8.PING getPing();
    /**
     * <code>optional .PING ping = 8;</code>
     */
    net.xlfe.reticul8.Reticul8.PINGOrBuilder getPingOrBuilder();

    /**
     * <code>optional .SYSINFO sysinfo = 9;</code>
     */
    boolean hasSysinfo();
    /**
     * <code>optional .SYSINFO sysinfo = 9;</code>
     */
    net.xlfe.reticul8.Reticul8.SYSINFO getSysinfo();
    /**
     * <code>optional .SYSINFO sysinfo = 9;</code>
     */
    net.xlfe.reticul8.Reticul8.SYSINFOOrBuilder getSysinfoOrBuilder();

    /**
     * <code>optional .REBOOT reboot = 16;</code>
     */
    boolean hasReboot();
    /**
     * <code>optional .REBOOT reboot = 16;</code>
     */
    net.xlfe.reticul8.Reticul8.REBOOT getReboot();
    /**
     * <code>optional .REBOOT reboot = 16;</code>
     */
    net.xlfe.reticul8.Reticul8.REBOOTOrBuilder getRebootOrBuilder();

    /**
     * <code>optional .I2C_CONFIG i2c_config = 10;</code>
     */
    boolean hasI2CConfig();
    /**
     * <code>optional .I2C_CONFIG i2c_config = 10;</code>
     */
    net.xlfe.reticul8.Reticul8.I2C_CONFIG getI2CConfig();
    /**
     * <code>optional .I2C_CONFIG i2c_config = 10;</code>
     */
    net.xlfe.reticul8.Reticul8.I2C_CONFIGOrBuilder getI2CConfigOrBuilder();

    /**
     * <code>optional .I2C_WRITE i2c_write = 11;</code>
     */
    boolean hasI2CWrite();
    /**
     * <code>optional .I2C_WRITE i2c_write = 11;</code>
     */
    net.xlfe.reticul8.Reticul8.I2C_WRITE getI2CWrite();
    /**
     * <code>optional .I2C_WRITE i2c_write = 11;</code>
     */
    net.xlfe.reticul8.Reticul8.I2C_WRITEOrBuilder getI2CWriteOrBuilder();

    /**
     * <code>optional .I2C_READ i2c_read = 12;</code>
     */
    boolean hasI2CRead();
    /**
     * <code>optional .I2C_READ i2c_read = 12;</code>
     */
    net.xlfe.reticul8.Reticul8.I2C_READ getI2CRead();
    /**
     * <code>optional .I2C_READ i2c_read = 12;</code>
     */
    net.xlfe.reticul8.Reticul8.I2C_READOrBuilder getI2CReadOrBuilder();

    /**
     * <code>optional .OTA_UPDATE ota_update = 13;</code>
     */
    boolean hasOtaUpdate();
    /**
     * <code>optional .OTA_UPDATE ota_update = 13;</code>
     */
    net.xlfe.reticul8.Reticul8.OTA_UPDATE getOtaUpdate();
    /**
     * <code>optional .OTA_UPDATE ota_update = 13;</code>
     */
    net.xlfe.reticul8.Reticul8.OTA_UPDATEOrBuilder getOtaUpdateOrBuilder();

    /**
     * <code>optional .RUN_NESTED nested = 14;</code>
     */
    boolean hasNested();
    /**
     * <code>optional .RUN_NESTED nested = 14;</code>
     */
    net.xlfe.reticul8.Reticul8.RUN_NESTED getNested();
    /**
     * <code>optional .RUN_NESTED nested = 14;</code>
     */
    net.xlfe.reticul8.Reticul8.RUN_NESTEDOrBuilder getNestedOrBuilder();

    /**
     * <code>required fixed32 msg_id = 200;</code>
     */
    boolean hasMsgId();
    /**
     * <code>required fixed32 msg_id = 200;</code>
     */
    int getMsgId();

    /**
     * <code>optional .SCHEDULE schedule = 201;</code>
     */
    boolean hasSchedule();
    /**
     * <code>optional .SCHEDULE schedule = 201;</code>
     */
    net.xlfe.reticul8.Reticul8.SCHEDULE getSchedule();
    /**
     * <code>optional .SCHEDULE schedule = 201;</code>
     */
    net.xlfe.reticul8.Reticul8.SCHEDULEOrBuilder getScheduleOrBuilder();

    public net.xlfe.reticul8.Reticul8.RPC.CallCase getCallCase();
  }
  /**
   * Protobuf type {@code RPC}
   */
  public  static final class RPC extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:RPC)
      RPCOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RPC.newBuilder() to construct.
    private RPC(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RPC() {
      msgId_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RPC(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              net.xlfe.reticul8.Reticul8.GPIO_CONFIG.Builder subBuilder = null;
              if (callCase_ == 1) {
                subBuilder = ((net.xlfe.reticul8.Reticul8.GPIO_CONFIG) call_).toBuilder();
              }
              call_ =
                  input.readMessage(net.xlfe.reticul8.Reticul8.GPIO_CONFIG.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((net.xlfe.reticul8.Reticul8.GPIO_CONFIG) call_);
                call_ = subBuilder.buildPartial();
              }
              callCase_ = 1;
              break;
            }
            case 18: {
              net.xlfe.reticul8.Reticul8.GPIO_WRITE.Builder subBuilder = null;
              if (callCase_ == 2) {
                subBuilder = ((net.xlfe.reticul8.Reticul8.GPIO_WRITE) call_).toBuilder();
              }
              call_ =
                  input.readMessage(net.xlfe.reticul8.Reticul8.GPIO_WRITE.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((net.xlfe.reticul8.Reticul8.GPIO_WRITE) call_);
                call_ = subBuilder.buildPartial();
              }
              callCase_ = 2;
              break;
            }
            case 26: {
              net.xlfe.reticul8.Reticul8.GPIO_READ.Builder subBuilder = null;
              if (callCase_ == 3) {
                subBuilder = ((net.xlfe.reticul8.Reticul8.GPIO_READ) call_).toBuilder();
              }
              call_ =
                  input.readMessage(net.xlfe.reticul8.Reticul8.GPIO_READ.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((net.xlfe.reticul8.Reticul8.GPIO_READ) call_);
                call_ = subBuilder.buildPartial();
              }
              callCase_ = 3;
              break;
            }
            case 34: {
              net.xlfe.reticul8.Reticul8.GPIO_MONITOR.Builder subBuilder = null;
              if (callCase_ == 4) {
                subBuilder = ((net.xlfe.reticul8.Reticul8.GPIO_MONITOR) call_).toBuilder();
              }
              call_ =
                  input.readMessage(net.xlfe.reticul8.Reticul8.GPIO_MONITOR.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((net.xlfe.reticul8.Reticul8.GPIO_MONITOR) call_);
                call_ = subBuilder.buildPartial();
              }
              callCase_ = 4;
              break;
            }
            case 42: {
              net.xlfe.reticul8.Reticul8.PWM_CONFIG.Builder subBuilder = null;
              if (callCase_ == 5) {
                subBuilder = ((net.xlfe.reticul8.Reticul8.PWM_CONFIG) call_).toBuilder();
              }
              call_ =
                  input.readMessage(net.xlfe.reticul8.Reticul8.PWM_CONFIG.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((net.xlfe.reticul8.Reticul8.PWM_CONFIG) call_);
                call_ = subBuilder.buildPartial();
              }
              callCase_ = 5;
              break;
            }
            case 50: {
              net.xlfe.reticul8.Reticul8.PWM_DUTY.Builder subBuilder = null;
              if (callCase_ == 6) {
                subBuilder = ((net.xlfe.reticul8.Reticul8.PWM_DUTY) call_).toBuilder();
              }
              call_ =
                  input.readMessage(net.xlfe.reticul8.Reticul8.PWM_DUTY.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((net.xlfe.reticul8.Reticul8.PWM_DUTY) call_);
                call_ = subBuilder.buildPartial();
              }
              callCase_ = 6;
              break;
            }
            case 58: {
              net.xlfe.reticul8.Reticul8.PWM_FADE.Builder subBuilder = null;
              if (callCase_ == 7) {
                subBuilder = ((net.xlfe.reticul8.Reticul8.PWM_FADE) call_).toBuilder();
              }
              call_ =
                  input.readMessage(net.xlfe.reticul8.Reticul8.PWM_FADE.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((net.xlfe.reticul8.Reticul8.PWM_FADE) call_);
                call_ = subBuilder.buildPartial();
              }
              callCase_ = 7;
              break;
            }
            case 66: {
              net.xlfe.reticul8.Reticul8.PING.Builder subBuilder = null;
              if (callCase_ == 8) {
                subBuilder = ((net.xlfe.reticul8.Reticul8.PING) call_).toBuilder();
              }
              call_ =
                  input.readMessage(net.xlfe.reticul8.Reticul8.PING.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((net.xlfe.reticul8.Reticul8.PING) call_);
                call_ = subBuilder.buildPartial();
              }
              callCase_ = 8;
              break;
            }
            case 74: {
              net.xlfe.reticul8.Reticul8.SYSINFO.Builder subBuilder = null;
              if (callCase_ == 9) {
                subBuilder = ((net.xlfe.reticul8.Reticul8.SYSINFO) call_).toBuilder();
              }
              call_ =
                  input.readMessage(net.xlfe.reticul8.Reticul8.SYSINFO.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((net.xlfe.reticul8.Reticul8.SYSINFO) call_);
                call_ = subBuilder.buildPartial();
              }
              callCase_ = 9;
              break;
            }
            case 82: {
              net.xlfe.reticul8.Reticul8.I2C_CONFIG.Builder subBuilder = null;
              if (callCase_ == 10) {
                subBuilder = ((net.xlfe.reticul8.Reticul8.I2C_CONFIG) call_).toBuilder();
              }
              call_ =
                  input.readMessage(net.xlfe.reticul8.Reticul8.I2C_CONFIG.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((net.xlfe.reticul8.Reticul8.I2C_CONFIG) call_);
                call_ = subBuilder.buildPartial();
              }
              callCase_ = 10;
              break;
            }
            case 90: {
              net.xlfe.reticul8.Reticul8.I2C_WRITE.Builder subBuilder = null;
              if (callCase_ == 11) {
                subBuilder = ((net.xlfe.reticul8.Reticul8.I2C_WRITE) call_).toBuilder();
              }
              call_ =
                  input.readMessage(net.xlfe.reticul8.Reticul8.I2C_WRITE.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((net.xlfe.reticul8.Reticul8.I2C_WRITE) call_);
                call_ = subBuilder.buildPartial();
              }
              callCase_ = 11;
              break;
            }
            case 98: {
              net.xlfe.reticul8.Reticul8.I2C_READ.Builder subBuilder = null;
              if (callCase_ == 12) {
                subBuilder = ((net.xlfe.reticul8.Reticul8.I2C_READ) call_).toBuilder();
              }
              call_ =
                  input.readMessage(net.xlfe.reticul8.Reticul8.I2C_READ.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((net.xlfe.reticul8.Reticul8.I2C_READ) call_);
                call_ = subBuilder.buildPartial();
              }
              callCase_ = 12;
              break;
            }
            case 106: {
              net.xlfe.reticul8.Reticul8.OTA_UPDATE.Builder subBuilder = null;
              if (callCase_ == 13) {
                subBuilder = ((net.xlfe.reticul8.Reticul8.OTA_UPDATE) call_).toBuilder();
              }
              call_ =
                  input.readMessage(net.xlfe.reticul8.Reticul8.OTA_UPDATE.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((net.xlfe.reticul8.Reticul8.OTA_UPDATE) call_);
                call_ = subBuilder.buildPartial();
              }
              callCase_ = 13;
              break;
            }
            case 114: {
              net.xlfe.reticul8.Reticul8.RUN_NESTED.Builder subBuilder = null;
              if (callCase_ == 14) {
                subBuilder = ((net.xlfe.reticul8.Reticul8.RUN_NESTED) call_).toBuilder();
              }
              call_ =
                  input.readMessage(net.xlfe.reticul8.Reticul8.RUN_NESTED.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((net.xlfe.reticul8.Reticul8.RUN_NESTED) call_);
                call_ = subBuilder.buildPartial();
              }
              callCase_ = 14;
              break;
            }
            case 122: {
              net.xlfe.reticul8.Reticul8.PWM_STOP.Builder subBuilder = null;
              if (callCase_ == 15) {
                subBuilder = ((net.xlfe.reticul8.Reticul8.PWM_STOP) call_).toBuilder();
              }
              call_ =
                  input.readMessage(net.xlfe.reticul8.Reticul8.PWM_STOP.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((net.xlfe.reticul8.Reticul8.PWM_STOP) call_);
                call_ = subBuilder.buildPartial();
              }
              callCase_ = 15;
              break;
            }
            case 130: {
              net.xlfe.reticul8.Reticul8.REBOOT.Builder subBuilder = null;
              if (callCase_ == 16) {
                subBuilder = ((net.xlfe.reticul8.Reticul8.REBOOT) call_).toBuilder();
              }
              call_ =
                  input.readMessage(net.xlfe.reticul8.Reticul8.REBOOT.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((net.xlfe.reticul8.Reticul8.REBOOT) call_);
                call_ = subBuilder.buildPartial();
              }
              callCase_ = 16;
              break;
            }
            case 1605: {
              bitField0_ |= 0x00010000;
              msgId_ = input.readFixed32();
              break;
            }
            case 1610: {
              net.xlfe.reticul8.Reticul8.SCHEDULE.Builder subBuilder = null;
              if (((bitField0_ & 0x00020000) == 0x00020000)) {
                subBuilder = schedule_.toBuilder();
              }
              schedule_ = input.readMessage(net.xlfe.reticul8.Reticul8.SCHEDULE.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(schedule_);
                schedule_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00020000;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.xlfe.reticul8.Reticul8.internal_static_RPC_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.xlfe.reticul8.Reticul8.internal_static_RPC_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              net.xlfe.reticul8.Reticul8.RPC.class, net.xlfe.reticul8.Reticul8.RPC.Builder.class);
    }

    private int bitField0_;
    private int callCase_ = 0;
    private java.lang.Object call_;
    public enum CallCase
        implements com.google.protobuf.Internal.EnumLite {
      GPIO_CONFIG(1),
      GPIO_WRITE(2),
      GPIO_READ(3),
      GPIO_MONITOR(4),
      PWM_CONFIG(5),
      PWM_DUTY(6),
      PWM_FADE(7),
      PWM_STOP(15),
      PING(8),
      SYSINFO(9),
      REBOOT(16),
      I2C_CONFIG(10),
      I2C_WRITE(11),
      I2C_READ(12),
      OTA_UPDATE(13),
      NESTED(14),
      CALL_NOT_SET(0);
      private final int value;
      private CallCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static CallCase valueOf(int value) {
        return forNumber(value);
      }

      public static CallCase forNumber(int value) {
        switch (value) {
          case 1: return GPIO_CONFIG;
          case 2: return GPIO_WRITE;
          case 3: return GPIO_READ;
          case 4: return GPIO_MONITOR;
          case 5: return PWM_CONFIG;
          case 6: return PWM_DUTY;
          case 7: return PWM_FADE;
          case 15: return PWM_STOP;
          case 8: return PING;
          case 9: return SYSINFO;
          case 16: return REBOOT;
          case 10: return I2C_CONFIG;
          case 11: return I2C_WRITE;
          case 12: return I2C_READ;
          case 13: return OTA_UPDATE;
          case 14: return NESTED;
          case 0: return CALL_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public CallCase
    getCallCase() {
      return CallCase.forNumber(
          callCase_);
    }

    public static final int GPIO_CONFIG_FIELD_NUMBER = 1;
    /**
     * <code>optional .GPIO_CONFIG gpio_config = 1;</code>
     */
    public boolean hasGpioConfig() {
      return callCase_ == 1;
    }
    /**
     * <code>optional .GPIO_CONFIG gpio_config = 1;</code>
     */
    public net.xlfe.reticul8.Reticul8.GPIO_CONFIG getGpioConfig() {
      if (callCase_ == 1) {
         return (net.xlfe.reticul8.Reticul8.GPIO_CONFIG) call_;
      }
      return net.xlfe.reticul8.Reticul8.GPIO_CONFIG.getDefaultInstance();
    }
    /**
     * <code>optional .GPIO_CONFIG gpio_config = 1;</code>
     */
    public net.xlfe.reticul8.Reticul8.GPIO_CONFIGOrBuilder getGpioConfigOrBuilder() {
      if (callCase_ == 1) {
         return (net.xlfe.reticul8.Reticul8.GPIO_CONFIG) call_;
      }
      return net.xlfe.reticul8.Reticul8.GPIO_CONFIG.getDefaultInstance();
    }

    public static final int GPIO_WRITE_FIELD_NUMBER = 2;
    /**
     * <code>optional .GPIO_WRITE gpio_write = 2;</code>
     */
    public boolean hasGpioWrite() {
      return callCase_ == 2;
    }
    /**
     * <code>optional .GPIO_WRITE gpio_write = 2;</code>
     */
    public net.xlfe.reticul8.Reticul8.GPIO_WRITE getGpioWrite() {
      if (callCase_ == 2) {
         return (net.xlfe.reticul8.Reticul8.GPIO_WRITE) call_;
      }
      return net.xlfe.reticul8.Reticul8.GPIO_WRITE.getDefaultInstance();
    }
    /**
     * <code>optional .GPIO_WRITE gpio_write = 2;</code>
     */
    public net.xlfe.reticul8.Reticul8.GPIO_WRITEOrBuilder getGpioWriteOrBuilder() {
      if (callCase_ == 2) {
         return (net.xlfe.reticul8.Reticul8.GPIO_WRITE) call_;
      }
      return net.xlfe.reticul8.Reticul8.GPIO_WRITE.getDefaultInstance();
    }

    public static final int GPIO_READ_FIELD_NUMBER = 3;
    /**
     * <code>optional .GPIO_READ gpio_read = 3;</code>
     */
    public boolean hasGpioRead() {
      return callCase_ == 3;
    }
    /**
     * <code>optional .GPIO_READ gpio_read = 3;</code>
     */
    public net.xlfe.reticul8.Reticul8.GPIO_READ getGpioRead() {
      if (callCase_ == 3) {
         return (net.xlfe.reticul8.Reticul8.GPIO_READ) call_;
      }
      return net.xlfe.reticul8.Reticul8.GPIO_READ.getDefaultInstance();
    }
    /**
     * <code>optional .GPIO_READ gpio_read = 3;</code>
     */
    public net.xlfe.reticul8.Reticul8.GPIO_READOrBuilder getGpioReadOrBuilder() {
      if (callCase_ == 3) {
         return (net.xlfe.reticul8.Reticul8.GPIO_READ) call_;
      }
      return net.xlfe.reticul8.Reticul8.GPIO_READ.getDefaultInstance();
    }

    public static final int GPIO_MONITOR_FIELD_NUMBER = 4;
    /**
     * <code>optional .GPIO_MONITOR gpio_monitor = 4;</code>
     */
    public boolean hasGpioMonitor() {
      return callCase_ == 4;
    }
    /**
     * <code>optional .GPIO_MONITOR gpio_monitor = 4;</code>
     */
    public net.xlfe.reticul8.Reticul8.GPIO_MONITOR getGpioMonitor() {
      if (callCase_ == 4) {
         return (net.xlfe.reticul8.Reticul8.GPIO_MONITOR) call_;
      }
      return net.xlfe.reticul8.Reticul8.GPIO_MONITOR.getDefaultInstance();
    }
    /**
     * <code>optional .GPIO_MONITOR gpio_monitor = 4;</code>
     */
    public net.xlfe.reticul8.Reticul8.GPIO_MONITOROrBuilder getGpioMonitorOrBuilder() {
      if (callCase_ == 4) {
         return (net.xlfe.reticul8.Reticul8.GPIO_MONITOR) call_;
      }
      return net.xlfe.reticul8.Reticul8.GPIO_MONITOR.getDefaultInstance();
    }

    public static final int PWM_CONFIG_FIELD_NUMBER = 5;
    /**
     * <code>optional .PWM_CONFIG pwm_config = 5;</code>
     */
    public boolean hasPwmConfig() {
      return callCase_ == 5;
    }
    /**
     * <code>optional .PWM_CONFIG pwm_config = 5;</code>
     */
    public net.xlfe.reticul8.Reticul8.PWM_CONFIG getPwmConfig() {
      if (callCase_ == 5) {
         return (net.xlfe.reticul8.Reticul8.PWM_CONFIG) call_;
      }
      return net.xlfe.reticul8.Reticul8.PWM_CONFIG.getDefaultInstance();
    }
    /**
     * <code>optional .PWM_CONFIG pwm_config = 5;</code>
     */
    public net.xlfe.reticul8.Reticul8.PWM_CONFIGOrBuilder getPwmConfigOrBuilder() {
      if (callCase_ == 5) {
         return (net.xlfe.reticul8.Reticul8.PWM_CONFIG) call_;
      }
      return net.xlfe.reticul8.Reticul8.PWM_CONFIG.getDefaultInstance();
    }

    public static final int PWM_DUTY_FIELD_NUMBER = 6;
    /**
     * <code>optional .PWM_DUTY pwm_duty = 6;</code>
     */
    public boolean hasPwmDuty() {
      return callCase_ == 6;
    }
    /**
     * <code>optional .PWM_DUTY pwm_duty = 6;</code>
     */
    public net.xlfe.reticul8.Reticul8.PWM_DUTY getPwmDuty() {
      if (callCase_ == 6) {
         return (net.xlfe.reticul8.Reticul8.PWM_DUTY) call_;
      }
      return net.xlfe.reticul8.Reticul8.PWM_DUTY.getDefaultInstance();
    }
    /**
     * <code>optional .PWM_DUTY pwm_duty = 6;</code>
     */
    public net.xlfe.reticul8.Reticul8.PWM_DUTYOrBuilder getPwmDutyOrBuilder() {
      if (callCase_ == 6) {
         return (net.xlfe.reticul8.Reticul8.PWM_DUTY) call_;
      }
      return net.xlfe.reticul8.Reticul8.PWM_DUTY.getDefaultInstance();
    }

    public static final int PWM_FADE_FIELD_NUMBER = 7;
    /**
     * <code>optional .PWM_FADE pwm_fade = 7;</code>
     */
    public boolean hasPwmFade() {
      return callCase_ == 7;
    }
    /**
     * <code>optional .PWM_FADE pwm_fade = 7;</code>
     */
    public net.xlfe.reticul8.Reticul8.PWM_FADE getPwmFade() {
      if (callCase_ == 7) {
         return (net.xlfe.reticul8.Reticul8.PWM_FADE) call_;
      }
      return net.xlfe.reticul8.Reticul8.PWM_FADE.getDefaultInstance();
    }
    /**
     * <code>optional .PWM_FADE pwm_fade = 7;</code>
     */
    public net.xlfe.reticul8.Reticul8.PWM_FADEOrBuilder getPwmFadeOrBuilder() {
      if (callCase_ == 7) {
         return (net.xlfe.reticul8.Reticul8.PWM_FADE) call_;
      }
      return net.xlfe.reticul8.Reticul8.PWM_FADE.getDefaultInstance();
    }

    public static final int PWM_STOP_FIELD_NUMBER = 15;
    /**
     * <code>optional .PWM_STOP pwm_stop = 15;</code>
     */
    public boolean hasPwmStop() {
      return callCase_ == 15;
    }
    /**
     * <code>optional .PWM_STOP pwm_stop = 15;</code>
     */
    public net.xlfe.reticul8.Reticul8.PWM_STOP getPwmStop() {
      if (callCase_ == 15) {
         return (net.xlfe.reticul8.Reticul8.PWM_STOP) call_;
      }
      return net.xlfe.reticul8.Reticul8.PWM_STOP.getDefaultInstance();
    }
    /**
     * <code>optional .PWM_STOP pwm_stop = 15;</code>
     */
    public net.xlfe.reticul8.Reticul8.PWM_STOPOrBuilder getPwmStopOrBuilder() {
      if (callCase_ == 15) {
         return (net.xlfe.reticul8.Reticul8.PWM_STOP) call_;
      }
      return net.xlfe.reticul8.Reticul8.PWM_STOP.getDefaultInstance();
    }

    public static final int PING_FIELD_NUMBER = 8;
    /**
     * <code>optional .PING ping = 8;</code>
     */
    public boolean hasPing() {
      return callCase_ == 8;
    }
    /**
     * <code>optional .PING ping = 8;</code>
     */
    public net.xlfe.reticul8.Reticul8.PING getPing() {
      if (callCase_ == 8) {
         return (net.xlfe.reticul8.Reticul8.PING) call_;
      }
      return net.xlfe.reticul8.Reticul8.PING.getDefaultInstance();
    }
    /**
     * <code>optional .PING ping = 8;</code>
     */
    public net.xlfe.reticul8.Reticul8.PINGOrBuilder getPingOrBuilder() {
      if (callCase_ == 8) {
         return (net.xlfe.reticul8.Reticul8.PING) call_;
      }
      return net.xlfe.reticul8.Reticul8.PING.getDefaultInstance();
    }

    public static final int SYSINFO_FIELD_NUMBER = 9;
    /**
     * <code>optional .SYSINFO sysinfo = 9;</code>
     */
    public boolean hasSysinfo() {
      return callCase_ == 9;
    }
    /**
     * <code>optional .SYSINFO sysinfo = 9;</code>
     */
    public net.xlfe.reticul8.Reticul8.SYSINFO getSysinfo() {
      if (callCase_ == 9) {
         return (net.xlfe.reticul8.Reticul8.SYSINFO) call_;
      }
      return net.xlfe.reticul8.Reticul8.SYSINFO.getDefaultInstance();
    }
    /**
     * <code>optional .SYSINFO sysinfo = 9;</code>
     */
    public net.xlfe.reticul8.Reticul8.SYSINFOOrBuilder getSysinfoOrBuilder() {
      if (callCase_ == 9) {
         return (net.xlfe.reticul8.Reticul8.SYSINFO) call_;
      }
      return net.xlfe.reticul8.Reticul8.SYSINFO.getDefaultInstance();
    }

    public static final int REBOOT_FIELD_NUMBER = 16;
    /**
     * <code>optional .REBOOT reboot = 16;</code>
     */
    public boolean hasReboot() {
      return callCase_ == 16;
    }
    /**
     * <code>optional .REBOOT reboot = 16;</code>
     */
    public net.xlfe.reticul8.Reticul8.REBOOT getReboot() {
      if (callCase_ == 16) {
         return (net.xlfe.reticul8.Reticul8.REBOOT) call_;
      }
      return net.xlfe.reticul8.Reticul8.REBOOT.getDefaultInstance();
    }
    /**
     * <code>optional .REBOOT reboot = 16;</code>
     */
    public net.xlfe.reticul8.Reticul8.REBOOTOrBuilder getRebootOrBuilder() {
      if (callCase_ == 16) {
         return (net.xlfe.reticul8.Reticul8.REBOOT) call_;
      }
      return net.xlfe.reticul8.Reticul8.REBOOT.getDefaultInstance();
    }

    public static final int I2C_CONFIG_FIELD_NUMBER = 10;
    /**
     * <code>optional .I2C_CONFIG i2c_config = 10;</code>
     */
    public boolean hasI2CConfig() {
      return callCase_ == 10;
    }
    /**
     * <code>optional .I2C_CONFIG i2c_config = 10;</code>
     */
    public net.xlfe.reticul8.Reticul8.I2C_CONFIG getI2CConfig() {
      if (callCase_ == 10) {
         return (net.xlfe.reticul8.Reticul8.I2C_CONFIG) call_;
      }
      return net.xlfe.reticul8.Reticul8.I2C_CONFIG.getDefaultInstance();
    }
    /**
     * <code>optional .I2C_CONFIG i2c_config = 10;</code>
     */
    public net.xlfe.reticul8.Reticul8.I2C_CONFIGOrBuilder getI2CConfigOrBuilder() {
      if (callCase_ == 10) {
         return (net.xlfe.reticul8.Reticul8.I2C_CONFIG) call_;
      }
      return net.xlfe.reticul8.Reticul8.I2C_CONFIG.getDefaultInstance();
    }

    public static final int I2C_WRITE_FIELD_NUMBER = 11;
    /**
     * <code>optional .I2C_WRITE i2c_write = 11;</code>
     */
    public boolean hasI2CWrite() {
      return callCase_ == 11;
    }
    /**
     * <code>optional .I2C_WRITE i2c_write = 11;</code>
     */
    public net.xlfe.reticul8.Reticul8.I2C_WRITE getI2CWrite() {
      if (callCase_ == 11) {
         return (net.xlfe.reticul8.Reticul8.I2C_WRITE) call_;
      }
      return net.xlfe.reticul8.Reticul8.I2C_WRITE.getDefaultInstance();
    }
    /**
     * <code>optional .I2C_WRITE i2c_write = 11;</code>
     */
    public net.xlfe.reticul8.Reticul8.I2C_WRITEOrBuilder getI2CWriteOrBuilder() {
      if (callCase_ == 11) {
         return (net.xlfe.reticul8.Reticul8.I2C_WRITE) call_;
      }
      return net.xlfe.reticul8.Reticul8.I2C_WRITE.getDefaultInstance();
    }

    public static final int I2C_READ_FIELD_NUMBER = 12;
    /**
     * <code>optional .I2C_READ i2c_read = 12;</code>
     */
    public boolean hasI2CRead() {
      return callCase_ == 12;
    }
    /**
     * <code>optional .I2C_READ i2c_read = 12;</code>
     */
    public net.xlfe.reticul8.Reticul8.I2C_READ getI2CRead() {
      if (callCase_ == 12) {
         return (net.xlfe.reticul8.Reticul8.I2C_READ) call_;
      }
      return net.xlfe.reticul8.Reticul8.I2C_READ.getDefaultInstance();
    }
    /**
     * <code>optional .I2C_READ i2c_read = 12;</code>
     */
    public net.xlfe.reticul8.Reticul8.I2C_READOrBuilder getI2CReadOrBuilder() {
      if (callCase_ == 12) {
         return (net.xlfe.reticul8.Reticul8.I2C_READ) call_;
      }
      return net.xlfe.reticul8.Reticul8.I2C_READ.getDefaultInstance();
    }

    public static final int OTA_UPDATE_FIELD_NUMBER = 13;
    /**
     * <code>optional .OTA_UPDATE ota_update = 13;</code>
     */
    public boolean hasOtaUpdate() {
      return callCase_ == 13;
    }
    /**
     * <code>optional .OTA_UPDATE ota_update = 13;</code>
     */
    public net.xlfe.reticul8.Reticul8.OTA_UPDATE getOtaUpdate() {
      if (callCase_ == 13) {
         return (net.xlfe.reticul8.Reticul8.OTA_UPDATE) call_;
      }
      return net.xlfe.reticul8.Reticul8.OTA_UPDATE.getDefaultInstance();
    }
    /**
     * <code>optional .OTA_UPDATE ota_update = 13;</code>
     */
    public net.xlfe.reticul8.Reticul8.OTA_UPDATEOrBuilder getOtaUpdateOrBuilder() {
      if (callCase_ == 13) {
         return (net.xlfe.reticul8.Reticul8.OTA_UPDATE) call_;
      }
      return net.xlfe.reticul8.Reticul8.OTA_UPDATE.getDefaultInstance();
    }

    public static final int NESTED_FIELD_NUMBER = 14;
    /**
     * <code>optional .RUN_NESTED nested = 14;</code>
     */
    public boolean hasNested() {
      return callCase_ == 14;
    }
    /**
     * <code>optional .RUN_NESTED nested = 14;</code>
     */
    public net.xlfe.reticul8.Reticul8.RUN_NESTED getNested() {
      if (callCase_ == 14) {
         return (net.xlfe.reticul8.Reticul8.RUN_NESTED) call_;
      }
      return net.xlfe.reticul8.Reticul8.RUN_NESTED.getDefaultInstance();
    }
    /**
     * <code>optional .RUN_NESTED nested = 14;</code>
     */
    public net.xlfe.reticul8.Reticul8.RUN_NESTEDOrBuilder getNestedOrBuilder() {
      if (callCase_ == 14) {
         return (net.xlfe.reticul8.Reticul8.RUN_NESTED) call_;
      }
      return net.xlfe.reticul8.Reticul8.RUN_NESTED.getDefaultInstance();
    }

    public static final int MSG_ID_FIELD_NUMBER = 200;
    private int msgId_;
    /**
     * <code>required fixed32 msg_id = 200;</code>
     */
    public boolean hasMsgId() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>required fixed32 msg_id = 200;</code>
     */
    public int getMsgId() {
      return msgId_;
    }

    public static final int SCHEDULE_FIELD_NUMBER = 201;
    private net.xlfe.reticul8.Reticul8.SCHEDULE schedule_;
    /**
     * <code>optional .SCHEDULE schedule = 201;</code>
     */
    public boolean hasSchedule() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional .SCHEDULE schedule = 201;</code>
     */
    public net.xlfe.reticul8.Reticul8.SCHEDULE getSchedule() {
      return schedule_ == null ? net.xlfe.reticul8.Reticul8.SCHEDULE.getDefaultInstance() : schedule_;
    }
    /**
     * <code>optional .SCHEDULE schedule = 201;</code>
     */
    public net.xlfe.reticul8.Reticul8.SCHEDULEOrBuilder getScheduleOrBuilder() {
      return schedule_ == null ? net.xlfe.reticul8.Reticul8.SCHEDULE.getDefaultInstance() : schedule_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasMsgId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasGpioConfig()) {
        if (!getGpioConfig().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasGpioWrite()) {
        if (!getGpioWrite().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasGpioRead()) {
        if (!getGpioRead().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasGpioMonitor()) {
        if (!getGpioMonitor().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasPwmConfig()) {
        if (!getPwmConfig().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasPwmDuty()) {
        if (!getPwmDuty().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasPwmFade()) {
        if (!getPwmFade().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasPwmStop()) {
        if (!getPwmStop().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasPing()) {
        if (!getPing().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasSysinfo()) {
        if (!getSysinfo().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasReboot()) {
        if (!getReboot().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasI2CWrite()) {
        if (!getI2CWrite().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasI2CRead()) {
        if (!getI2CRead().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasOtaUpdate()) {
        if (!getOtaUpdate().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasNested()) {
        if (!getNested().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasSchedule()) {
        if (!getSchedule().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (callCase_ == 1) {
        output.writeMessage(1, (net.xlfe.reticul8.Reticul8.GPIO_CONFIG) call_);
      }
      if (callCase_ == 2) {
        output.writeMessage(2, (net.xlfe.reticul8.Reticul8.GPIO_WRITE) call_);
      }
      if (callCase_ == 3) {
        output.writeMessage(3, (net.xlfe.reticul8.Reticul8.GPIO_READ) call_);
      }
      if (callCase_ == 4) {
        output.writeMessage(4, (net.xlfe.reticul8.Reticul8.GPIO_MONITOR) call_);
      }
      if (callCase_ == 5) {
        output.writeMessage(5, (net.xlfe.reticul8.Reticul8.PWM_CONFIG) call_);
      }
      if (callCase_ == 6) {
        output.writeMessage(6, (net.xlfe.reticul8.Reticul8.PWM_DUTY) call_);
      }
      if (callCase_ == 7) {
        output.writeMessage(7, (net.xlfe.reticul8.Reticul8.PWM_FADE) call_);
      }
      if (callCase_ == 8) {
        output.writeMessage(8, (net.xlfe.reticul8.Reticul8.PING) call_);
      }
      if (callCase_ == 9) {
        output.writeMessage(9, (net.xlfe.reticul8.Reticul8.SYSINFO) call_);
      }
      if (callCase_ == 10) {
        output.writeMessage(10, (net.xlfe.reticul8.Reticul8.I2C_CONFIG) call_);
      }
      if (callCase_ == 11) {
        output.writeMessage(11, (net.xlfe.reticul8.Reticul8.I2C_WRITE) call_);
      }
      if (callCase_ == 12) {
        output.writeMessage(12, (net.xlfe.reticul8.Reticul8.I2C_READ) call_);
      }
      if (callCase_ == 13) {
        output.writeMessage(13, (net.xlfe.reticul8.Reticul8.OTA_UPDATE) call_);
      }
      if (callCase_ == 14) {
        output.writeMessage(14, (net.xlfe.reticul8.Reticul8.RUN_NESTED) call_);
      }
      if (callCase_ == 15) {
        output.writeMessage(15, (net.xlfe.reticul8.Reticul8.PWM_STOP) call_);
      }
      if (callCase_ == 16) {
        output.writeMessage(16, (net.xlfe.reticul8.Reticul8.REBOOT) call_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeFixed32(200, msgId_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeMessage(201, getSchedule());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (callCase_ == 1) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, (net.xlfe.reticul8.Reticul8.GPIO_CONFIG) call_);
      }
      if (callCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, (net.xlfe.reticul8.Reticul8.GPIO_WRITE) call_);
      }
      if (callCase_ == 3) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, (net.xlfe.reticul8.Reticul8.GPIO_READ) call_);
      }
      if (callCase_ == 4) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, (net.xlfe.reticul8.Reticul8.GPIO_MONITOR) call_);
      }
      if (callCase_ == 5) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, (net.xlfe.reticul8.Reticul8.PWM_CONFIG) call_);
      }
      if (callCase_ == 6) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, (net.xlfe.reticul8.Reticul8.PWM_DUTY) call_);
      }
      if (callCase_ == 7) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, (net.xlfe.reticul8.Reticul8.PWM_FADE) call_);
      }
      if (callCase_ == 8) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, (net.xlfe.reticul8.Reticul8.PING) call_);
      }
      if (callCase_ == 9) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, (net.xlfe.reticul8.Reticul8.SYSINFO) call_);
      }
      if (callCase_ == 10) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, (net.xlfe.reticul8.Reticul8.I2C_CONFIG) call_);
      }
      if (callCase_ == 11) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, (net.xlfe.reticul8.Reticul8.I2C_WRITE) call_);
      }
      if (callCase_ == 12) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, (net.xlfe.reticul8.Reticul8.I2C_READ) call_);
      }
      if (callCase_ == 13) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(13, (net.xlfe.reticul8.Reticul8.OTA_UPDATE) call_);
      }
      if (callCase_ == 14) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(14, (net.xlfe.reticul8.Reticul8.RUN_NESTED) call_);
      }
      if (callCase_ == 15) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(15, (net.xlfe.reticul8.Reticul8.PWM_STOP) call_);
      }
      if (callCase_ == 16) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(16, (net.xlfe.reticul8.Reticul8.REBOOT) call_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(200, msgId_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(201, getSchedule());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof net.xlfe.reticul8.Reticul8.RPC)) {
        return super.equals(obj);
      }
      net.xlfe.reticul8.Reticul8.RPC other = (net.xlfe.reticul8.Reticul8.RPC) obj;

      boolean result = true;
      result = result && (hasMsgId() == other.hasMsgId());
      if (hasMsgId()) {
        result = result && (getMsgId()
            == other.getMsgId());
      }
      result = result && (hasSchedule() == other.hasSchedule());
      if (hasSchedule()) {
        result = result && getSchedule()
            .equals(other.getSchedule());
      }
      result = result && getCallCase().equals(
          other.getCallCase());
      if (!result) return false;
      switch (callCase_) {
        case 1:
          result = result && getGpioConfig()
              .equals(other.getGpioConfig());
          break;
        case 2:
          result = result && getGpioWrite()
              .equals(other.getGpioWrite());
          break;
        case 3:
          result = result && getGpioRead()
              .equals(other.getGpioRead());
          break;
        case 4:
          result = result && getGpioMonitor()
              .equals(other.getGpioMonitor());
          break;
        case 5:
          result = result && getPwmConfig()
              .equals(other.getPwmConfig());
          break;
        case 6:
          result = result && getPwmDuty()
              .equals(other.getPwmDuty());
          break;
        case 7:
          result = result && getPwmFade()
              .equals(other.getPwmFade());
          break;
        case 15:
          result = result && getPwmStop()
              .equals(other.getPwmStop());
          break;
        case 8:
          result = result && getPing()
              .equals(other.getPing());
          break;
        case 9:
          result = result && getSysinfo()
              .equals(other.getSysinfo());
          break;
        case 16:
          result = result && getReboot()
              .equals(other.getReboot());
          break;
        case 10:
          result = result && getI2CConfig()
              .equals(other.getI2CConfig());
          break;
        case 11:
          result = result && getI2CWrite()
              .equals(other.getI2CWrite());
          break;
        case 12:
          result = result && getI2CRead()
              .equals(other.getI2CRead());
          break;
        case 13:
          result = result && getOtaUpdate()
              .equals(other.getOtaUpdate());
          break;
        case 14:
          result = result && getNested()
              .equals(other.getNested());
          break;
        case 0:
        default:
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasMsgId()) {
        hash = (37 * hash) + MSG_ID_FIELD_NUMBER;
        hash = (53 * hash) + getMsgId();
      }
      if (hasSchedule()) {
        hash = (37 * hash) + SCHEDULE_FIELD_NUMBER;
        hash = (53 * hash) + getSchedule().hashCode();
      }
      switch (callCase_) {
        case 1:
          hash = (37 * hash) + GPIO_CONFIG_FIELD_NUMBER;
          hash = (53 * hash) + getGpioConfig().hashCode();
          break;
        case 2:
          hash = (37 * hash) + GPIO_WRITE_FIELD_NUMBER;
          hash = (53 * hash) + getGpioWrite().hashCode();
          break;
        case 3:
          hash = (37 * hash) + GPIO_READ_FIELD_NUMBER;
          hash = (53 * hash) + getGpioRead().hashCode();
          break;
        case 4:
          hash = (37 * hash) + GPIO_MONITOR_FIELD_NUMBER;
          hash = (53 * hash) + getGpioMonitor().hashCode();
          break;
        case 5:
          hash = (37 * hash) + PWM_CONFIG_FIELD_NUMBER;
          hash = (53 * hash) + getPwmConfig().hashCode();
          break;
        case 6:
          hash = (37 * hash) + PWM_DUTY_FIELD_NUMBER;
          hash = (53 * hash) + getPwmDuty().hashCode();
          break;
        case 7:
          hash = (37 * hash) + PWM_FADE_FIELD_NUMBER;
          hash = (53 * hash) + getPwmFade().hashCode();
          break;
        case 15:
          hash = (37 * hash) + PWM_STOP_FIELD_NUMBER;
          hash = (53 * hash) + getPwmStop().hashCode();
          break;
        case 8:
          hash = (37 * hash) + PING_FIELD_NUMBER;
          hash = (53 * hash) + getPing().hashCode();
          break;
        case 9:
          hash = (37 * hash) + SYSINFO_FIELD_NUMBER;
          hash = (53 * hash) + getSysinfo().hashCode();
          break;
        case 16:
          hash = (37 * hash) + REBOOT_FIELD_NUMBER;
          hash = (53 * hash) + getReboot().hashCode();
          break;
        case 10:
          hash = (37 * hash) + I2C_CONFIG_FIELD_NUMBER;
          hash = (53 * hash) + getI2CConfig().hashCode();
          break;
        case 11:
          hash = (37 * hash) + I2C_WRITE_FIELD_NUMBER;
          hash = (53 * hash) + getI2CWrite().hashCode();
          break;
        case 12:
          hash = (37 * hash) + I2C_READ_FIELD_NUMBER;
          hash = (53 * hash) + getI2CRead().hashCode();
          break;
        case 13:
          hash = (37 * hash) + OTA_UPDATE_FIELD_NUMBER;
          hash = (53 * hash) + getOtaUpdate().hashCode();
          break;
        case 14:
          hash = (37 * hash) + NESTED_FIELD_NUMBER;
          hash = (53 * hash) + getNested().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static net.xlfe.reticul8.Reticul8.RPC parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.xlfe.reticul8.Reticul8.RPC parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.xlfe.reticul8.Reticul8.RPC parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.xlfe.reticul8.Reticul8.RPC parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.xlfe.reticul8.Reticul8.RPC parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.xlfe.reticul8.Reticul8.RPC parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.xlfe.reticul8.Reticul8.RPC parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.xlfe.reticul8.Reticul8.RPC parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.xlfe.reticul8.Reticul8.RPC parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static net.xlfe.reticul8.Reticul8.RPC parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.xlfe.reticul8.Reticul8.RPC parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.xlfe.reticul8.Reticul8.RPC parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(net.xlfe.reticul8.Reticul8.RPC prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code RPC}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:RPC)
        net.xlfe.reticul8.Reticul8.RPCOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.xlfe.reticul8.Reticul8.internal_static_RPC_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.xlfe.reticul8.Reticul8.internal_static_RPC_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                net.xlfe.reticul8.Reticul8.RPC.class, net.xlfe.reticul8.Reticul8.RPC.Builder.class);
      }

      // Construct using net.xlfe.reticul8.Reticul8.RPC.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getScheduleFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        msgId_ = 0;
        bitField0_ = (bitField0_ & ~0x00010000);
        if (scheduleBuilder_ == null) {
          schedule_ = null;
        } else {
          scheduleBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00020000);
        callCase_ = 0;
        call_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.xlfe.reticul8.Reticul8.internal_static_RPC_descriptor;
      }

      @java.lang.Override
      public net.xlfe.reticul8.Reticul8.RPC getDefaultInstanceForType() {
        return net.xlfe.reticul8.Reticul8.RPC.getDefaultInstance();
      }

      @java.lang.Override
      public net.xlfe.reticul8.Reticul8.RPC build() {
        net.xlfe.reticul8.Reticul8.RPC result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public net.xlfe.reticul8.Reticul8.RPC buildPartial() {
        net.xlfe.reticul8.Reticul8.RPC result = new net.xlfe.reticul8.Reticul8.RPC(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (callCase_ == 1) {
          if (gpioConfigBuilder_ == null) {
            result.call_ = call_;
          } else {
            result.call_ = gpioConfigBuilder_.build();
          }
        }
        if (callCase_ == 2) {
          if (gpioWriteBuilder_ == null) {
            result.call_ = call_;
          } else {
            result.call_ = gpioWriteBuilder_.build();
          }
        }
        if (callCase_ == 3) {
          if (gpioReadBuilder_ == null) {
            result.call_ = call_;
          } else {
            result.call_ = gpioReadBuilder_.build();
          }
        }
        if (callCase_ == 4) {
          if (gpioMonitorBuilder_ == null) {
            result.call_ = call_;
          } else {
            result.call_ = gpioMonitorBuilder_.build();
          }
        }
        if (callCase_ == 5) {
          if (pwmConfigBuilder_ == null) {
            result.call_ = call_;
          } else {
            result.call_ = pwmConfigBuilder_.build();
          }
        }
        if (callCase_ == 6) {
          if (pwmDutyBuilder_ == null) {
            result.call_ = call_;
          } else {
            result.call_ = pwmDutyBuilder_.build();
          }
        }
        if (callCase_ == 7) {
          if (pwmFadeBuilder_ == null) {
            result.call_ = call_;
          } else {
            result.call_ = pwmFadeBuilder_.build();
          }
        }
        if (callCase_ == 15) {
          if (pwmStopBuilder_ == null) {
            result.call_ = call_;
          } else {
            result.call_ = pwmStopBuilder_.build();
          }
        }
        if (callCase_ == 8) {
          if (pingBuilder_ == null) {
            result.call_ = call_;
          } else {
            result.call_ = pingBuilder_.build();
          }
        }
        if (callCase_ == 9) {
          if (sysinfoBuilder_ == null) {
            result.call_ = call_;
          } else {
            result.call_ = sysinfoBuilder_.build();
          }
        }
        if (callCase_ == 16) {
          if (rebootBuilder_ == null) {
            result.call_ = call_;
          } else {
            result.call_ = rebootBuilder_.build();
          }
        }
        if (callCase_ == 10) {
          if (i2CConfigBuilder_ == null) {
            result.call_ = call_;
          } else {
            result.call_ = i2CConfigBuilder_.build();
          }
        }
        if (callCase_ == 11) {
          if (i2CWriteBuilder_ == null) {
            result.call_ = call_;
          } else {
            result.call_ = i2CWriteBuilder_.build();
          }
        }
        if (callCase_ == 12) {
          if (i2CReadBuilder_ == null) {
            result.call_ = call_;
          } else {
            result.call_ = i2CReadBuilder_.build();
          }
        }
        if (callCase_ == 13) {
          if (otaUpdateBuilder_ == null) {
            result.call_ = call_;
          } else {
            result.call_ = otaUpdateBuilder_.build();
          }
        }
        if (callCase_ == 14) {
          if (nestedBuilder_ == null) {
            result.call_ = call_;
          } else {
            result.call_ = nestedBuilder_.build();
          }
        }
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.msgId_ = msgId_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00020000;
        }
        if (scheduleBuilder_ == null) {
          result.schedule_ = schedule_;
        } else {
          result.schedule_ = scheduleBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        result.callCase_ = callCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.xlfe.reticul8.Reticul8.RPC) {
          return mergeFrom((net.xlfe.reticul8.Reticul8.RPC)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(net.xlfe.reticul8.Reticul8.RPC other) {
        if (other == net.xlfe.reticul8.Reticul8.RPC.getDefaultInstance()) return this;
        if (other.hasMsgId()) {
          setMsgId(other.getMsgId());
        }
        if (other.hasSchedule()) {
          mergeSchedule(other.getSchedule());
        }
        switch (other.getCallCase()) {
          case GPIO_CONFIG: {
            mergeGpioConfig(other.getGpioConfig());
            break;
          }
          case GPIO_WRITE: {
            mergeGpioWrite(other.getGpioWrite());
            break;
          }
          case GPIO_READ: {
            mergeGpioRead(other.getGpioRead());
            break;
          }
          case GPIO_MONITOR: {
            mergeGpioMonitor(other.getGpioMonitor());
            break;
          }
          case PWM_CONFIG: {
            mergePwmConfig(other.getPwmConfig());
            break;
          }
          case PWM_DUTY: {
            mergePwmDuty(other.getPwmDuty());
            break;
          }
          case PWM_FADE: {
            mergePwmFade(other.getPwmFade());
            break;
          }
          case PWM_STOP: {
            mergePwmStop(other.getPwmStop());
            break;
          }
          case PING: {
            mergePing(other.getPing());
            break;
          }
          case SYSINFO: {
            mergeSysinfo(other.getSysinfo());
            break;
          }
          case REBOOT: {
            mergeReboot(other.getReboot());
            break;
          }
          case I2C_CONFIG: {
            mergeI2CConfig(other.getI2CConfig());
            break;
          }
          case I2C_WRITE: {
            mergeI2CWrite(other.getI2CWrite());
            break;
          }
          case I2C_READ: {
            mergeI2CRead(other.getI2CRead());
            break;
          }
          case OTA_UPDATE: {
            mergeOtaUpdate(other.getOtaUpdate());
            break;
          }
          case NESTED: {
            mergeNested(other.getNested());
            break;
          }
          case CALL_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasMsgId()) {
          return false;
        }
        if (hasGpioConfig()) {
          if (!getGpioConfig().isInitialized()) {
            return false;
          }
        }
        if (hasGpioWrite()) {
          if (!getGpioWrite().isInitialized()) {
            return false;
          }
        }
        if (hasGpioRead()) {
          if (!getGpioRead().isInitialized()) {
            return false;
          }
        }
        if (hasGpioMonitor()) {
          if (!getGpioMonitor().isInitialized()) {
            return false;
          }
        }
        if (hasPwmConfig()) {
          if (!getPwmConfig().isInitialized()) {
            return false;
          }
        }
        if (hasPwmDuty()) {
          if (!getPwmDuty().isInitialized()) {
            return false;
          }
        }
        if (hasPwmFade()) {
          if (!getPwmFade().isInitialized()) {
            return false;
          }
        }
        if (hasPwmStop()) {
          if (!getPwmStop().isInitialized()) {
            return false;
          }
        }
        if (hasPing()) {
          if (!getPing().isInitialized()) {
            return false;
          }
        }
        if (hasSysinfo()) {
          if (!getSysinfo().isInitialized()) {
            return false;
          }
        }
        if (hasReboot()) {
          if (!getReboot().isInitialized()) {
            return false;
          }
        }
        if (hasI2CWrite()) {
          if (!getI2CWrite().isInitialized()) {
            return false;
          }
        }
        if (hasI2CRead()) {
          if (!getI2CRead().isInitialized()) {
            return false;
          }
        }
        if (hasOtaUpdate()) {
          if (!getOtaUpdate().isInitialized()) {
            return false;
          }
        }
        if (hasNested()) {
          if (!getNested().isInitialized()) {
            return false;
          }
        }
        if (hasSchedule()) {
          if (!getSchedule().isInitialized()) {
            return false;
          }
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        net.xlfe.reticul8.Reticul8.RPC parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (net.xlfe.reticul8.Reticul8.RPC) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int callCase_ = 0;
      private java.lang.Object call_;
      public CallCase
          getCallCase() {
        return CallCase.forNumber(
            callCase_);
      }

      public Builder clearCall() {
        callCase_ = 0;
        call_ = null;
        onChanged();
        return this;
      }

      private int bitField0_;

      private com.google.protobuf.SingleFieldBuilderV3<
          net.xlfe.reticul8.Reticul8.GPIO_CONFIG, net.xlfe.reticul8.Reticul8.GPIO_CONFIG.Builder, net.xlfe.reticul8.Reticul8.GPIO_CONFIGOrBuilder> gpioConfigBuilder_;
      /**
       * <code>optional .GPIO_CONFIG gpio_config = 1;</code>
       */
      public boolean hasGpioConfig() {
        return callCase_ == 1;
      }
      /**
       * <code>optional .GPIO_CONFIG gpio_config = 1;</code>
       */
      public net.xlfe.reticul8.Reticul8.GPIO_CONFIG getGpioConfig() {
        if (gpioConfigBuilder_ == null) {
          if (callCase_ == 1) {
            return (net.xlfe.reticul8.Reticul8.GPIO_CONFIG) call_;
          }
          return net.xlfe.reticul8.Reticul8.GPIO_CONFIG.getDefaultInstance();
        } else {
          if (callCase_ == 1) {
            return gpioConfigBuilder_.getMessage();
          }
          return net.xlfe.reticul8.Reticul8.GPIO_CONFIG.getDefaultInstance();
        }
      }
      /**
       * <code>optional .GPIO_CONFIG gpio_config = 1;</code>
       */
      public Builder setGpioConfig(net.xlfe.reticul8.Reticul8.GPIO_CONFIG value) {
        if (gpioConfigBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          call_ = value;
          onChanged();
        } else {
          gpioConfigBuilder_.setMessage(value);
        }
        callCase_ = 1;
        return this;
      }
      /**
       * <code>optional .GPIO_CONFIG gpio_config = 1;</code>
       */
      public Builder setGpioConfig(
          net.xlfe.reticul8.Reticul8.GPIO_CONFIG.Builder builderForValue) {
        if (gpioConfigBuilder_ == null) {
          call_ = builderForValue.build();
          onChanged();
        } else {
          gpioConfigBuilder_.setMessage(builderForValue.build());
        }
        callCase_ = 1;
        return this;
      }
      /**
       * <code>optional .GPIO_CONFIG gpio_config = 1;</code>
       */
      public Builder mergeGpioConfig(net.xlfe.reticul8.Reticul8.GPIO_CONFIG value) {
        if (gpioConfigBuilder_ == null) {
          if (callCase_ == 1 &&
              call_ != net.xlfe.reticul8.Reticul8.GPIO_CONFIG.getDefaultInstance()) {
            call_ = net.xlfe.reticul8.Reticul8.GPIO_CONFIG.newBuilder((net.xlfe.reticul8.Reticul8.GPIO_CONFIG) call_)
                .mergeFrom(value).buildPartial();
          } else {
            call_ = value;
          }
          onChanged();
        } else {
          if (callCase_ == 1) {
            gpioConfigBuilder_.mergeFrom(value);
          }
          gpioConfigBuilder_.setMessage(value);
        }
        callCase_ = 1;
        return this;
      }
      /**
       * <code>optional .GPIO_CONFIG gpio_config = 1;</code>
       */
      public Builder clearGpioConfig() {
        if (gpioConfigBuilder_ == null) {
          if (callCase_ == 1) {
            callCase_ = 0;
            call_ = null;
            onChanged();
          }
        } else {
          if (callCase_ == 1) {
            callCase_ = 0;
            call_ = null;
          }
          gpioConfigBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>optional .GPIO_CONFIG gpio_config = 1;</code>
       */
      public net.xlfe.reticul8.Reticul8.GPIO_CONFIG.Builder getGpioConfigBuilder() {
        return getGpioConfigFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .GPIO_CONFIG gpio_config = 1;</code>
       */
      public net.xlfe.reticul8.Reticul8.GPIO_CONFIGOrBuilder getGpioConfigOrBuilder() {
        if ((callCase_ == 1) && (gpioConfigBuilder_ != null)) {
          return gpioConfigBuilder_.getMessageOrBuilder();
        } else {
          if (callCase_ == 1) {
            return (net.xlfe.reticul8.Reticul8.GPIO_CONFIG) call_;
          }
          return net.xlfe.reticul8.Reticul8.GPIO_CONFIG.getDefaultInstance();
        }
      }
      /**
       * <code>optional .GPIO_CONFIG gpio_config = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          net.xlfe.reticul8.Reticul8.GPIO_CONFIG, net.xlfe.reticul8.Reticul8.GPIO_CONFIG.Builder, net.xlfe.reticul8.Reticul8.GPIO_CONFIGOrBuilder> 
          getGpioConfigFieldBuilder() {
        if (gpioConfigBuilder_ == null) {
          if (!(callCase_ == 1)) {
            call_ = net.xlfe.reticul8.Reticul8.GPIO_CONFIG.getDefaultInstance();
          }
          gpioConfigBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              net.xlfe.reticul8.Reticul8.GPIO_CONFIG, net.xlfe.reticul8.Reticul8.GPIO_CONFIG.Builder, net.xlfe.reticul8.Reticul8.GPIO_CONFIGOrBuilder>(
                  (net.xlfe.reticul8.Reticul8.GPIO_CONFIG) call_,
                  getParentForChildren(),
                  isClean());
          call_ = null;
        }
        callCase_ = 1;
        onChanged();;
        return gpioConfigBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          net.xlfe.reticul8.Reticul8.GPIO_WRITE, net.xlfe.reticul8.Reticul8.GPIO_WRITE.Builder, net.xlfe.reticul8.Reticul8.GPIO_WRITEOrBuilder> gpioWriteBuilder_;
      /**
       * <code>optional .GPIO_WRITE gpio_write = 2;</code>
       */
      public boolean hasGpioWrite() {
        return callCase_ == 2;
      }
      /**
       * <code>optional .GPIO_WRITE gpio_write = 2;</code>
       */
      public net.xlfe.reticul8.Reticul8.GPIO_WRITE getGpioWrite() {
        if (gpioWriteBuilder_ == null) {
          if (callCase_ == 2) {
            return (net.xlfe.reticul8.Reticul8.GPIO_WRITE) call_;
          }
          return net.xlfe.reticul8.Reticul8.GPIO_WRITE.getDefaultInstance();
        } else {
          if (callCase_ == 2) {
            return gpioWriteBuilder_.getMessage();
          }
          return net.xlfe.reticul8.Reticul8.GPIO_WRITE.getDefaultInstance();
        }
      }
      /**
       * <code>optional .GPIO_WRITE gpio_write = 2;</code>
       */
      public Builder setGpioWrite(net.xlfe.reticul8.Reticul8.GPIO_WRITE value) {
        if (gpioWriteBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          call_ = value;
          onChanged();
        } else {
          gpioWriteBuilder_.setMessage(value);
        }
        callCase_ = 2;
        return this;
      }
      /**
       * <code>optional .GPIO_WRITE gpio_write = 2;</code>
       */
      public Builder setGpioWrite(
          net.xlfe.reticul8.Reticul8.GPIO_WRITE.Builder builderForValue) {
        if (gpioWriteBuilder_ == null) {
          call_ = builderForValue.build();
          onChanged();
        } else {
          gpioWriteBuilder_.setMessage(builderForValue.build());
        }
        callCase_ = 2;
        return this;
      }
      /**
       * <code>optional .GPIO_WRITE gpio_write = 2;</code>
       */
      public Builder mergeGpioWrite(net.xlfe.reticul8.Reticul8.GPIO_WRITE value) {
        if (gpioWriteBuilder_ == null) {
          if (callCase_ == 2 &&
              call_ != net.xlfe.reticul8.Reticul8.GPIO_WRITE.getDefaultInstance()) {
            call_ = net.xlfe.reticul8.Reticul8.GPIO_WRITE.newBuilder((net.xlfe.reticul8.Reticul8.GPIO_WRITE) call_)
                .mergeFrom(value).buildPartial();
          } else {
            call_ = value;
          }
          onChanged();
        } else {
          if (callCase_ == 2) {
            gpioWriteBuilder_.mergeFrom(value);
          }
          gpioWriteBuilder_.setMessage(value);
        }
        callCase_ = 2;
        return this;
      }
      /**
       * <code>optional .GPIO_WRITE gpio_write = 2;</code>
       */
      public Builder clearGpioWrite() {
        if (gpioWriteBuilder_ == null) {
          if (callCase_ == 2) {
            callCase_ = 0;
            call_ = null;
            onChanged();
          }
        } else {
          if (callCase_ == 2) {
            callCase_ = 0;
            call_ = null;
          }
          gpioWriteBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>optional .GPIO_WRITE gpio_write = 2;</code>
       */
      public net.xlfe.reticul8.Reticul8.GPIO_WRITE.Builder getGpioWriteBuilder() {
        return getGpioWriteFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .GPIO_WRITE gpio_write = 2;</code>
       */
      public net.xlfe.reticul8.Reticul8.GPIO_WRITEOrBuilder getGpioWriteOrBuilder() {
        if ((callCase_ == 2) && (gpioWriteBuilder_ != null)) {
          return gpioWriteBuilder_.getMessageOrBuilder();
        } else {
          if (callCase_ == 2) {
            return (net.xlfe.reticul8.Reticul8.GPIO_WRITE) call_;
          }
          return net.xlfe.reticul8.Reticul8.GPIO_WRITE.getDefaultInstance();
        }
      }
      /**
       * <code>optional .GPIO_WRITE gpio_write = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          net.xlfe.reticul8.Reticul8.GPIO_WRITE, net.xlfe.reticul8.Reticul8.GPIO_WRITE.Builder, net.xlfe.reticul8.Reticul8.GPIO_WRITEOrBuilder> 
          getGpioWriteFieldBuilder() {
        if (gpioWriteBuilder_ == null) {
          if (!(callCase_ == 2)) {
            call_ = net.xlfe.reticul8.Reticul8.GPIO_WRITE.getDefaultInstance();
          }
          gpioWriteBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              net.xlfe.reticul8.Reticul8.GPIO_WRITE, net.xlfe.reticul8.Reticul8.GPIO_WRITE.Builder, net.xlfe.reticul8.Reticul8.GPIO_WRITEOrBuilder>(
                  (net.xlfe.reticul8.Reticul8.GPIO_WRITE) call_,
                  getParentForChildren(),
                  isClean());
          call_ = null;
        }
        callCase_ = 2;
        onChanged();;
        return gpioWriteBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          net.xlfe.reticul8.Reticul8.GPIO_READ, net.xlfe.reticul8.Reticul8.GPIO_READ.Builder, net.xlfe.reticul8.Reticul8.GPIO_READOrBuilder> gpioReadBuilder_;
      /**
       * <code>optional .GPIO_READ gpio_read = 3;</code>
       */
      public boolean hasGpioRead() {
        return callCase_ == 3;
      }
      /**
       * <code>optional .GPIO_READ gpio_read = 3;</code>
       */
      public net.xlfe.reticul8.Reticul8.GPIO_READ getGpioRead() {
        if (gpioReadBuilder_ == null) {
          if (callCase_ == 3) {
            return (net.xlfe.reticul8.Reticul8.GPIO_READ) call_;
          }
          return net.xlfe.reticul8.Reticul8.GPIO_READ.getDefaultInstance();
        } else {
          if (callCase_ == 3) {
            return gpioReadBuilder_.getMessage();
          }
          return net.xlfe.reticul8.Reticul8.GPIO_READ.getDefaultInstance();
        }
      }
      /**
       * <code>optional .GPIO_READ gpio_read = 3;</code>
       */
      public Builder setGpioRead(net.xlfe.reticul8.Reticul8.GPIO_READ value) {
        if (gpioReadBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          call_ = value;
          onChanged();
        } else {
          gpioReadBuilder_.setMessage(value);
        }
        callCase_ = 3;
        return this;
      }
      /**
       * <code>optional .GPIO_READ gpio_read = 3;</code>
       */
      public Builder setGpioRead(
          net.xlfe.reticul8.Reticul8.GPIO_READ.Builder builderForValue) {
        if (gpioReadBuilder_ == null) {
          call_ = builderForValue.build();
          onChanged();
        } else {
          gpioReadBuilder_.setMessage(builderForValue.build());
        }
        callCase_ = 3;
        return this;
      }
      /**
       * <code>optional .GPIO_READ gpio_read = 3;</code>
       */
      public Builder mergeGpioRead(net.xlfe.reticul8.Reticul8.GPIO_READ value) {
        if (gpioReadBuilder_ == null) {
          if (callCase_ == 3 &&
              call_ != net.xlfe.reticul8.Reticul8.GPIO_READ.getDefaultInstance()) {
            call_ = net.xlfe.reticul8.Reticul8.GPIO_READ.newBuilder((net.xlfe.reticul8.Reticul8.GPIO_READ) call_)
                .mergeFrom(value).buildPartial();
          } else {
            call_ = value;
          }
          onChanged();
        } else {
          if (callCase_ == 3) {
            gpioReadBuilder_.mergeFrom(value);
          }
          gpioReadBuilder_.setMessage(value);
        }
        callCase_ = 3;
        return this;
      }
      /**
       * <code>optional .GPIO_READ gpio_read = 3;</code>
       */
      public Builder clearGpioRead() {
        if (gpioReadBuilder_ == null) {
          if (callCase_ == 3) {
            callCase_ = 0;
            call_ = null;
            onChanged();
          }
        } else {
          if (callCase_ == 3) {
            callCase_ = 0;
            call_ = null;
          }
          gpioReadBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>optional .GPIO_READ gpio_read = 3;</code>
       */
      public net.xlfe.reticul8.Reticul8.GPIO_READ.Builder getGpioReadBuilder() {
        return getGpioReadFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .GPIO_READ gpio_read = 3;</code>
       */
      public net.xlfe.reticul8.Reticul8.GPIO_READOrBuilder getGpioReadOrBuilder() {
        if ((callCase_ == 3) && (gpioReadBuilder_ != null)) {
          return gpioReadBuilder_.getMessageOrBuilder();
        } else {
          if (callCase_ == 3) {
            return (net.xlfe.reticul8.Reticul8.GPIO_READ) call_;
          }
          return net.xlfe.reticul8.Reticul8.GPIO_READ.getDefaultInstance();
        }
      }
      /**
       * <code>optional .GPIO_READ gpio_read = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          net.xlfe.reticul8.Reticul8.GPIO_READ, net.xlfe.reticul8.Reticul8.GPIO_READ.Builder, net.xlfe.reticul8.Reticul8.GPIO_READOrBuilder> 
          getGpioReadFieldBuilder() {
        if (gpioReadBuilder_ == null) {
          if (!(callCase_ == 3)) {
            call_ = net.xlfe.reticul8.Reticul8.GPIO_READ.getDefaultInstance();
          }
          gpioReadBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              net.xlfe.reticul8.Reticul8.GPIO_READ, net.xlfe.reticul8.Reticul8.GPIO_READ.Builder, net.xlfe.reticul8.Reticul8.GPIO_READOrBuilder>(
                  (net.xlfe.reticul8.Reticul8.GPIO_READ) call_,
                  getParentForChildren(),
                  isClean());
          call_ = null;
        }
        callCase_ = 3;
        onChanged();;
        return gpioReadBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          net.xlfe.reticul8.Reticul8.GPIO_MONITOR, net.xlfe.reticul8.Reticul8.GPIO_MONITOR.Builder, net.xlfe.reticul8.Reticul8.GPIO_MONITOROrBuilder> gpioMonitorBuilder_;
      /**
       * <code>optional .GPIO_MONITOR gpio_monitor = 4;</code>
       */
      public boolean hasGpioMonitor() {
        return callCase_ == 4;
      }
      /**
       * <code>optional .GPIO_MONITOR gpio_monitor = 4;</code>
       */
      public net.xlfe.reticul8.Reticul8.GPIO_MONITOR getGpioMonitor() {
        if (gpioMonitorBuilder_ == null) {
          if (callCase_ == 4) {
            return (net.xlfe.reticul8.Reticul8.GPIO_MONITOR) call_;
          }
          return net.xlfe.reticul8.Reticul8.GPIO_MONITOR.getDefaultInstance();
        } else {
          if (callCase_ == 4) {
            return gpioMonitorBuilder_.getMessage();
          }
          return net.xlfe.reticul8.Reticul8.GPIO_MONITOR.getDefaultInstance();
        }
      }
      /**
       * <code>optional .GPIO_MONITOR gpio_monitor = 4;</code>
       */
      public Builder setGpioMonitor(net.xlfe.reticul8.Reticul8.GPIO_MONITOR value) {
        if (gpioMonitorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          call_ = value;
          onChanged();
        } else {
          gpioMonitorBuilder_.setMessage(value);
        }
        callCase_ = 4;
        return this;
      }
      /**
       * <code>optional .GPIO_MONITOR gpio_monitor = 4;</code>
       */
      public Builder setGpioMonitor(
          net.xlfe.reticul8.Reticul8.GPIO_MONITOR.Builder builderForValue) {
        if (gpioMonitorBuilder_ == null) {
          call_ = builderForValue.build();
          onChanged();
        } else {
          gpioMonitorBuilder_.setMessage(builderForValue.build());
        }
        callCase_ = 4;
        return this;
      }
      /**
       * <code>optional .GPIO_MONITOR gpio_monitor = 4;</code>
       */
      public Builder mergeGpioMonitor(net.xlfe.reticul8.Reticul8.GPIO_MONITOR value) {
        if (gpioMonitorBuilder_ == null) {
          if (callCase_ == 4 &&
              call_ != net.xlfe.reticul8.Reticul8.GPIO_MONITOR.getDefaultInstance()) {
            call_ = net.xlfe.reticul8.Reticul8.GPIO_MONITOR.newBuilder((net.xlfe.reticul8.Reticul8.GPIO_MONITOR) call_)
                .mergeFrom(value).buildPartial();
          } else {
            call_ = value;
          }
          onChanged();
        } else {
          if (callCase_ == 4) {
            gpioMonitorBuilder_.mergeFrom(value);
          }
          gpioMonitorBuilder_.setMessage(value);
        }
        callCase_ = 4;
        return this;
      }
      /**
       * <code>optional .GPIO_MONITOR gpio_monitor = 4;</code>
       */
      public Builder clearGpioMonitor() {
        if (gpioMonitorBuilder_ == null) {
          if (callCase_ == 4) {
            callCase_ = 0;
            call_ = null;
            onChanged();
          }
        } else {
          if (callCase_ == 4) {
            callCase_ = 0;
            call_ = null;
          }
          gpioMonitorBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>optional .GPIO_MONITOR gpio_monitor = 4;</code>
       */
      public net.xlfe.reticul8.Reticul8.GPIO_MONITOR.Builder getGpioMonitorBuilder() {
        return getGpioMonitorFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .GPIO_MONITOR gpio_monitor = 4;</code>
       */
      public net.xlfe.reticul8.Reticul8.GPIO_MONITOROrBuilder getGpioMonitorOrBuilder() {
        if ((callCase_ == 4) && (gpioMonitorBuilder_ != null)) {
          return gpioMonitorBuilder_.getMessageOrBuilder();
        } else {
          if (callCase_ == 4) {
            return (net.xlfe.reticul8.Reticul8.GPIO_MONITOR) call_;
          }
          return net.xlfe.reticul8.Reticul8.GPIO_MONITOR.getDefaultInstance();
        }
      }
      /**
       * <code>optional .GPIO_MONITOR gpio_monitor = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          net.xlfe.reticul8.Reticul8.GPIO_MONITOR, net.xlfe.reticul8.Reticul8.GPIO_MONITOR.Builder, net.xlfe.reticul8.Reticul8.GPIO_MONITOROrBuilder> 
          getGpioMonitorFieldBuilder() {
        if (gpioMonitorBuilder_ == null) {
          if (!(callCase_ == 4)) {
            call_ = net.xlfe.reticul8.Reticul8.GPIO_MONITOR.getDefaultInstance();
          }
          gpioMonitorBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              net.xlfe.reticul8.Reticul8.GPIO_MONITOR, net.xlfe.reticul8.Reticul8.GPIO_MONITOR.Builder, net.xlfe.reticul8.Reticul8.GPIO_MONITOROrBuilder>(
                  (net.xlfe.reticul8.Reticul8.GPIO_MONITOR) call_,
                  getParentForChildren(),
                  isClean());
          call_ = null;
        }
        callCase_ = 4;
        onChanged();;
        return gpioMonitorBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          net.xlfe.reticul8.Reticul8.PWM_CONFIG, net.xlfe.reticul8.Reticul8.PWM_CONFIG.Builder, net.xlfe.reticul8.Reticul8.PWM_CONFIGOrBuilder> pwmConfigBuilder_;
      /**
       * <code>optional .PWM_CONFIG pwm_config = 5;</code>
       */
      public boolean hasPwmConfig() {
        return callCase_ == 5;
      }
      /**
       * <code>optional .PWM_CONFIG pwm_config = 5;</code>
       */
      public net.xlfe.reticul8.Reticul8.PWM_CONFIG getPwmConfig() {
        if (pwmConfigBuilder_ == null) {
          if (callCase_ == 5) {
            return (net.xlfe.reticul8.Reticul8.PWM_CONFIG) call_;
          }
          return net.xlfe.reticul8.Reticul8.PWM_CONFIG.getDefaultInstance();
        } else {
          if (callCase_ == 5) {
            return pwmConfigBuilder_.getMessage();
          }
          return net.xlfe.reticul8.Reticul8.PWM_CONFIG.getDefaultInstance();
        }
      }
      /**
       * <code>optional .PWM_CONFIG pwm_config = 5;</code>
       */
      public Builder setPwmConfig(net.xlfe.reticul8.Reticul8.PWM_CONFIG value) {
        if (pwmConfigBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          call_ = value;
          onChanged();
        } else {
          pwmConfigBuilder_.setMessage(value);
        }
        callCase_ = 5;
        return this;
      }
      /**
       * <code>optional .PWM_CONFIG pwm_config = 5;</code>
       */
      public Builder setPwmConfig(
          net.xlfe.reticul8.Reticul8.PWM_CONFIG.Builder builderForValue) {
        if (pwmConfigBuilder_ == null) {
          call_ = builderForValue.build();
          onChanged();
        } else {
          pwmConfigBuilder_.setMessage(builderForValue.build());
        }
        callCase_ = 5;
        return this;
      }
      /**
       * <code>optional .PWM_CONFIG pwm_config = 5;</code>
       */
      public Builder mergePwmConfig(net.xlfe.reticul8.Reticul8.PWM_CONFIG value) {
        if (pwmConfigBuilder_ == null) {
          if (callCase_ == 5 &&
              call_ != net.xlfe.reticul8.Reticul8.PWM_CONFIG.getDefaultInstance()) {
            call_ = net.xlfe.reticul8.Reticul8.PWM_CONFIG.newBuilder((net.xlfe.reticul8.Reticul8.PWM_CONFIG) call_)
                .mergeFrom(value).buildPartial();
          } else {
            call_ = value;
          }
          onChanged();
        } else {
          if (callCase_ == 5) {
            pwmConfigBuilder_.mergeFrom(value);
          }
          pwmConfigBuilder_.setMessage(value);
        }
        callCase_ = 5;
        return this;
      }
      /**
       * <code>optional .PWM_CONFIG pwm_config = 5;</code>
       */
      public Builder clearPwmConfig() {
        if (pwmConfigBuilder_ == null) {
          if (callCase_ == 5) {
            callCase_ = 0;
            call_ = null;
            onChanged();
          }
        } else {
          if (callCase_ == 5) {
            callCase_ = 0;
            call_ = null;
          }
          pwmConfigBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>optional .PWM_CONFIG pwm_config = 5;</code>
       */
      public net.xlfe.reticul8.Reticul8.PWM_CONFIG.Builder getPwmConfigBuilder() {
        return getPwmConfigFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .PWM_CONFIG pwm_config = 5;</code>
       */
      public net.xlfe.reticul8.Reticul8.PWM_CONFIGOrBuilder getPwmConfigOrBuilder() {
        if ((callCase_ == 5) && (pwmConfigBuilder_ != null)) {
          return pwmConfigBuilder_.getMessageOrBuilder();
        } else {
          if (callCase_ == 5) {
            return (net.xlfe.reticul8.Reticul8.PWM_CONFIG) call_;
          }
          return net.xlfe.reticul8.Reticul8.PWM_CONFIG.getDefaultInstance();
        }
      }
      /**
       * <code>optional .PWM_CONFIG pwm_config = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          net.xlfe.reticul8.Reticul8.PWM_CONFIG, net.xlfe.reticul8.Reticul8.PWM_CONFIG.Builder, net.xlfe.reticul8.Reticul8.PWM_CONFIGOrBuilder> 
          getPwmConfigFieldBuilder() {
        if (pwmConfigBuilder_ == null) {
          if (!(callCase_ == 5)) {
            call_ = net.xlfe.reticul8.Reticul8.PWM_CONFIG.getDefaultInstance();
          }
          pwmConfigBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              net.xlfe.reticul8.Reticul8.PWM_CONFIG, net.xlfe.reticul8.Reticul8.PWM_CONFIG.Builder, net.xlfe.reticul8.Reticul8.PWM_CONFIGOrBuilder>(
                  (net.xlfe.reticul8.Reticul8.PWM_CONFIG) call_,
                  getParentForChildren(),
                  isClean());
          call_ = null;
        }
        callCase_ = 5;
        onChanged();;
        return pwmConfigBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          net.xlfe.reticul8.Reticul8.PWM_DUTY, net.xlfe.reticul8.Reticul8.PWM_DUTY.Builder, net.xlfe.reticul8.Reticul8.PWM_DUTYOrBuilder> pwmDutyBuilder_;
      /**
       * <code>optional .PWM_DUTY pwm_duty = 6;</code>
       */
      public boolean hasPwmDuty() {
        return callCase_ == 6;
      }
      /**
       * <code>optional .PWM_DUTY pwm_duty = 6;</code>
       */
      public net.xlfe.reticul8.Reticul8.PWM_DUTY getPwmDuty() {
        if (pwmDutyBuilder_ == null) {
          if (callCase_ == 6) {
            return (net.xlfe.reticul8.Reticul8.PWM_DUTY) call_;
          }
          return net.xlfe.reticul8.Reticul8.PWM_DUTY.getDefaultInstance();
        } else {
          if (callCase_ == 6) {
            return pwmDutyBuilder_.getMessage();
          }
          return net.xlfe.reticul8.Reticul8.PWM_DUTY.getDefaultInstance();
        }
      }
      /**
       * <code>optional .PWM_DUTY pwm_duty = 6;</code>
       */
      public Builder setPwmDuty(net.xlfe.reticul8.Reticul8.PWM_DUTY value) {
        if (pwmDutyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          call_ = value;
          onChanged();
        } else {
          pwmDutyBuilder_.setMessage(value);
        }
        callCase_ = 6;
        return this;
      }
      /**
       * <code>optional .PWM_DUTY pwm_duty = 6;</code>
       */
      public Builder setPwmDuty(
          net.xlfe.reticul8.Reticul8.PWM_DUTY.Builder builderForValue) {
        if (pwmDutyBuilder_ == null) {
          call_ = builderForValue.build();
          onChanged();
        } else {
          pwmDutyBuilder_.setMessage(builderForValue.build());
        }
        callCase_ = 6;
        return this;
      }
      /**
       * <code>optional .PWM_DUTY pwm_duty = 6;</code>
       */
      public Builder mergePwmDuty(net.xlfe.reticul8.Reticul8.PWM_DUTY value) {
        if (pwmDutyBuilder_ == null) {
          if (callCase_ == 6 &&
              call_ != net.xlfe.reticul8.Reticul8.PWM_DUTY.getDefaultInstance()) {
            call_ = net.xlfe.reticul8.Reticul8.PWM_DUTY.newBuilder((net.xlfe.reticul8.Reticul8.PWM_DUTY) call_)
                .mergeFrom(value).buildPartial();
          } else {
            call_ = value;
          }
          onChanged();
        } else {
          if (callCase_ == 6) {
            pwmDutyBuilder_.mergeFrom(value);
          }
          pwmDutyBuilder_.setMessage(value);
        }
        callCase_ = 6;
        return this;
      }
      /**
       * <code>optional .PWM_DUTY pwm_duty = 6;</code>
       */
      public Builder clearPwmDuty() {
        if (pwmDutyBuilder_ == null) {
          if (callCase_ == 6) {
            callCase_ = 0;
            call_ = null;
            onChanged();
          }
        } else {
          if (callCase_ == 6) {
            callCase_ = 0;
            call_ = null;
          }
          pwmDutyBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>optional .PWM_DUTY pwm_duty = 6;</code>
       */
      public net.xlfe.reticul8.Reticul8.PWM_DUTY.Builder getPwmDutyBuilder() {
        return getPwmDutyFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .PWM_DUTY pwm_duty = 6;</code>
       */
      public net.xlfe.reticul8.Reticul8.PWM_DUTYOrBuilder getPwmDutyOrBuilder() {
        if ((callCase_ == 6) && (pwmDutyBuilder_ != null)) {
          return pwmDutyBuilder_.getMessageOrBuilder();
        } else {
          if (callCase_ == 6) {
            return (net.xlfe.reticul8.Reticul8.PWM_DUTY) call_;
          }
          return net.xlfe.reticul8.Reticul8.PWM_DUTY.getDefaultInstance();
        }
      }
      /**
       * <code>optional .PWM_DUTY pwm_duty = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          net.xlfe.reticul8.Reticul8.PWM_DUTY, net.xlfe.reticul8.Reticul8.PWM_DUTY.Builder, net.xlfe.reticul8.Reticul8.PWM_DUTYOrBuilder> 
          getPwmDutyFieldBuilder() {
        if (pwmDutyBuilder_ == null) {
          if (!(callCase_ == 6)) {
            call_ = net.xlfe.reticul8.Reticul8.PWM_DUTY.getDefaultInstance();
          }
          pwmDutyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              net.xlfe.reticul8.Reticul8.PWM_DUTY, net.xlfe.reticul8.Reticul8.PWM_DUTY.Builder, net.xlfe.reticul8.Reticul8.PWM_DUTYOrBuilder>(
                  (net.xlfe.reticul8.Reticul8.PWM_DUTY) call_,
                  getParentForChildren(),
                  isClean());
          call_ = null;
        }
        callCase_ = 6;
        onChanged();;
        return pwmDutyBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          net.xlfe.reticul8.Reticul8.PWM_FADE, net.xlfe.reticul8.Reticul8.PWM_FADE.Builder, net.xlfe.reticul8.Reticul8.PWM_FADEOrBuilder> pwmFadeBuilder_;
      /**
       * <code>optional .PWM_FADE pwm_fade = 7;</code>
       */
      public boolean hasPwmFade() {
        return callCase_ == 7;
      }
      /**
       * <code>optional .PWM_FADE pwm_fade = 7;</code>
       */
      public net.xlfe.reticul8.Reticul8.PWM_FADE getPwmFade() {
        if (pwmFadeBuilder_ == null) {
          if (callCase_ == 7) {
            return (net.xlfe.reticul8.Reticul8.PWM_FADE) call_;
          }
          return net.xlfe.reticul8.Reticul8.PWM_FADE.getDefaultInstance();
        } else {
          if (callCase_ == 7) {
            return pwmFadeBuilder_.getMessage();
          }
          return net.xlfe.reticul8.Reticul8.PWM_FADE.getDefaultInstance();
        }
      }
      /**
       * <code>optional .PWM_FADE pwm_fade = 7;</code>
       */
      public Builder setPwmFade(net.xlfe.reticul8.Reticul8.PWM_FADE value) {
        if (pwmFadeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          call_ = value;
          onChanged();
        } else {
          pwmFadeBuilder_.setMessage(value);
        }
        callCase_ = 7;
        return this;
      }
      /**
       * <code>optional .PWM_FADE pwm_fade = 7;</code>
       */
      public Builder setPwmFade(
          net.xlfe.reticul8.Reticul8.PWM_FADE.Builder builderForValue) {
        if (pwmFadeBuilder_ == null) {
          call_ = builderForValue.build();
          onChanged();
        } else {
          pwmFadeBuilder_.setMessage(builderForValue.build());
        }
        callCase_ = 7;
        return this;
      }
      /**
       * <code>optional .PWM_FADE pwm_fade = 7;</code>
       */
      public Builder mergePwmFade(net.xlfe.reticul8.Reticul8.PWM_FADE value) {
        if (pwmFadeBuilder_ == null) {
          if (callCase_ == 7 &&
              call_ != net.xlfe.reticul8.Reticul8.PWM_FADE.getDefaultInstance()) {
            call_ = net.xlfe.reticul8.Reticul8.PWM_FADE.newBuilder((net.xlfe.reticul8.Reticul8.PWM_FADE) call_)
                .mergeFrom(value).buildPartial();
          } else {
            call_ = value;
          }
          onChanged();
        } else {
          if (callCase_ == 7) {
            pwmFadeBuilder_.mergeFrom(value);
          }
          pwmFadeBuilder_.setMessage(value);
        }
        callCase_ = 7;
        return this;
      }
      /**
       * <code>optional .PWM_FADE pwm_fade = 7;</code>
       */
      public Builder clearPwmFade() {
        if (pwmFadeBuilder_ == null) {
          if (callCase_ == 7) {
            callCase_ = 0;
            call_ = null;
            onChanged();
          }
        } else {
          if (callCase_ == 7) {
            callCase_ = 0;
            call_ = null;
          }
          pwmFadeBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>optional .PWM_FADE pwm_fade = 7;</code>
       */
      public net.xlfe.reticul8.Reticul8.PWM_FADE.Builder getPwmFadeBuilder() {
        return getPwmFadeFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .PWM_FADE pwm_fade = 7;</code>
       */
      public net.xlfe.reticul8.Reticul8.PWM_FADEOrBuilder getPwmFadeOrBuilder() {
        if ((callCase_ == 7) && (pwmFadeBuilder_ != null)) {
          return pwmFadeBuilder_.getMessageOrBuilder();
        } else {
          if (callCase_ == 7) {
            return (net.xlfe.reticul8.Reticul8.PWM_FADE) call_;
          }
          return net.xlfe.reticul8.Reticul8.PWM_FADE.getDefaultInstance();
        }
      }
      /**
       * <code>optional .PWM_FADE pwm_fade = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          net.xlfe.reticul8.Reticul8.PWM_FADE, net.xlfe.reticul8.Reticul8.PWM_FADE.Builder, net.xlfe.reticul8.Reticul8.PWM_FADEOrBuilder> 
          getPwmFadeFieldBuilder() {
        if (pwmFadeBuilder_ == null) {
          if (!(callCase_ == 7)) {
            call_ = net.xlfe.reticul8.Reticul8.PWM_FADE.getDefaultInstance();
          }
          pwmFadeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              net.xlfe.reticul8.Reticul8.PWM_FADE, net.xlfe.reticul8.Reticul8.PWM_FADE.Builder, net.xlfe.reticul8.Reticul8.PWM_FADEOrBuilder>(
                  (net.xlfe.reticul8.Reticul8.PWM_FADE) call_,
                  getParentForChildren(),
                  isClean());
          call_ = null;
        }
        callCase_ = 7;
        onChanged();;
        return pwmFadeBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          net.xlfe.reticul8.Reticul8.PWM_STOP, net.xlfe.reticul8.Reticul8.PWM_STOP.Builder, net.xlfe.reticul8.Reticul8.PWM_STOPOrBuilder> pwmStopBuilder_;
      /**
       * <code>optional .PWM_STOP pwm_stop = 15;</code>
       */
      public boolean hasPwmStop() {
        return callCase_ == 15;
      }
      /**
       * <code>optional .PWM_STOP pwm_stop = 15;</code>
       */
      public net.xlfe.reticul8.Reticul8.PWM_STOP getPwmStop() {
        if (pwmStopBuilder_ == null) {
          if (callCase_ == 15) {
            return (net.xlfe.reticul8.Reticul8.PWM_STOP) call_;
          }
          return net.xlfe.reticul8.Reticul8.PWM_STOP.getDefaultInstance();
        } else {
          if (callCase_ == 15) {
            return pwmStopBuilder_.getMessage();
          }
          return net.xlfe.reticul8.Reticul8.PWM_STOP.getDefaultInstance();
        }
      }
      /**
       * <code>optional .PWM_STOP pwm_stop = 15;</code>
       */
      public Builder setPwmStop(net.xlfe.reticul8.Reticul8.PWM_STOP value) {
        if (pwmStopBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          call_ = value;
          onChanged();
        } else {
          pwmStopBuilder_.setMessage(value);
        }
        callCase_ = 15;
        return this;
      }
      /**
       * <code>optional .PWM_STOP pwm_stop = 15;</code>
       */
      public Builder setPwmStop(
          net.xlfe.reticul8.Reticul8.PWM_STOP.Builder builderForValue) {
        if (pwmStopBuilder_ == null) {
          call_ = builderForValue.build();
          onChanged();
        } else {
          pwmStopBuilder_.setMessage(builderForValue.build());
        }
        callCase_ = 15;
        return this;
      }
      /**
       * <code>optional .PWM_STOP pwm_stop = 15;</code>
       */
      public Builder mergePwmStop(net.xlfe.reticul8.Reticul8.PWM_STOP value) {
        if (pwmStopBuilder_ == null) {
          if (callCase_ == 15 &&
              call_ != net.xlfe.reticul8.Reticul8.PWM_STOP.getDefaultInstance()) {
            call_ = net.xlfe.reticul8.Reticul8.PWM_STOP.newBuilder((net.xlfe.reticul8.Reticul8.PWM_STOP) call_)
                .mergeFrom(value).buildPartial();
          } else {
            call_ = value;
          }
          onChanged();
        } else {
          if (callCase_ == 15) {
            pwmStopBuilder_.mergeFrom(value);
          }
          pwmStopBuilder_.setMessage(value);
        }
        callCase_ = 15;
        return this;
      }
      /**
       * <code>optional .PWM_STOP pwm_stop = 15;</code>
       */
      public Builder clearPwmStop() {
        if (pwmStopBuilder_ == null) {
          if (callCase_ == 15) {
            callCase_ = 0;
            call_ = null;
            onChanged();
          }
        } else {
          if (callCase_ == 15) {
            callCase_ = 0;
            call_ = null;
          }
          pwmStopBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>optional .PWM_STOP pwm_stop = 15;</code>
       */
      public net.xlfe.reticul8.Reticul8.PWM_STOP.Builder getPwmStopBuilder() {
        return getPwmStopFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .PWM_STOP pwm_stop = 15;</code>
       */
      public net.xlfe.reticul8.Reticul8.PWM_STOPOrBuilder getPwmStopOrBuilder() {
        if ((callCase_ == 15) && (pwmStopBuilder_ != null)) {
          return pwmStopBuilder_.getMessageOrBuilder();
        } else {
          if (callCase_ == 15) {
            return (net.xlfe.reticul8.Reticul8.PWM_STOP) call_;
          }
          return net.xlfe.reticul8.Reticul8.PWM_STOP.getDefaultInstance();
        }
      }
      /**
       * <code>optional .PWM_STOP pwm_stop = 15;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          net.xlfe.reticul8.Reticul8.PWM_STOP, net.xlfe.reticul8.Reticul8.PWM_STOP.Builder, net.xlfe.reticul8.Reticul8.PWM_STOPOrBuilder> 
          getPwmStopFieldBuilder() {
        if (pwmStopBuilder_ == null) {
          if (!(callCase_ == 15)) {
            call_ = net.xlfe.reticul8.Reticul8.PWM_STOP.getDefaultInstance();
          }
          pwmStopBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              net.xlfe.reticul8.Reticul8.PWM_STOP, net.xlfe.reticul8.Reticul8.PWM_STOP.Builder, net.xlfe.reticul8.Reticul8.PWM_STOPOrBuilder>(
                  (net.xlfe.reticul8.Reticul8.PWM_STOP) call_,
                  getParentForChildren(),
                  isClean());
          call_ = null;
        }
        callCase_ = 15;
        onChanged();;
        return pwmStopBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          net.xlfe.reticul8.Reticul8.PING, net.xlfe.reticul8.Reticul8.PING.Builder, net.xlfe.reticul8.Reticul8.PINGOrBuilder> pingBuilder_;
      /**
       * <code>optional .PING ping = 8;</code>
       */
      public boolean hasPing() {
        return callCase_ == 8;
      }
      /**
       * <code>optional .PING ping = 8;</code>
       */
      public net.xlfe.reticul8.Reticul8.PING getPing() {
        if (pingBuilder_ == null) {
          if (callCase_ == 8) {
            return (net.xlfe.reticul8.Reticul8.PING) call_;
          }
          return net.xlfe.reticul8.Reticul8.PING.getDefaultInstance();
        } else {
          if (callCase_ == 8) {
            return pingBuilder_.getMessage();
          }
          return net.xlfe.reticul8.Reticul8.PING.getDefaultInstance();
        }
      }
      /**
       * <code>optional .PING ping = 8;</code>
       */
      public Builder setPing(net.xlfe.reticul8.Reticul8.PING value) {
        if (pingBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          call_ = value;
          onChanged();
        } else {
          pingBuilder_.setMessage(value);
        }
        callCase_ = 8;
        return this;
      }
      /**
       * <code>optional .PING ping = 8;</code>
       */
      public Builder setPing(
          net.xlfe.reticul8.Reticul8.PING.Builder builderForValue) {
        if (pingBuilder_ == null) {
          call_ = builderForValue.build();
          onChanged();
        } else {
          pingBuilder_.setMessage(builderForValue.build());
        }
        callCase_ = 8;
        return this;
      }
      /**
       * <code>optional .PING ping = 8;</code>
       */
      public Builder mergePing(net.xlfe.reticul8.Reticul8.PING value) {
        if (pingBuilder_ == null) {
          if (callCase_ == 8 &&
              call_ != net.xlfe.reticul8.Reticul8.PING.getDefaultInstance()) {
            call_ = net.xlfe.reticul8.Reticul8.PING.newBuilder((net.xlfe.reticul8.Reticul8.PING) call_)
                .mergeFrom(value).buildPartial();
          } else {
            call_ = value;
          }
          onChanged();
        } else {
          if (callCase_ == 8) {
            pingBuilder_.mergeFrom(value);
          }
          pingBuilder_.setMessage(value);
        }
        callCase_ = 8;
        return this;
      }
      /**
       * <code>optional .PING ping = 8;</code>
       */
      public Builder clearPing() {
        if (pingBuilder_ == null) {
          if (callCase_ == 8) {
            callCase_ = 0;
            call_ = null;
            onChanged();
          }
        } else {
          if (callCase_ == 8) {
            callCase_ = 0;
            call_ = null;
          }
          pingBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>optional .PING ping = 8;</code>
       */
      public net.xlfe.reticul8.Reticul8.PING.Builder getPingBuilder() {
        return getPingFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .PING ping = 8;</code>
       */
      public net.xlfe.reticul8.Reticul8.PINGOrBuilder getPingOrBuilder() {
        if ((callCase_ == 8) && (pingBuilder_ != null)) {
          return pingBuilder_.getMessageOrBuilder();
        } else {
          if (callCase_ == 8) {
            return (net.xlfe.reticul8.Reticul8.PING) call_;
          }
          return net.xlfe.reticul8.Reticul8.PING.getDefaultInstance();
        }
      }
      /**
       * <code>optional .PING ping = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          net.xlfe.reticul8.Reticul8.PING, net.xlfe.reticul8.Reticul8.PING.Builder, net.xlfe.reticul8.Reticul8.PINGOrBuilder> 
          getPingFieldBuilder() {
        if (pingBuilder_ == null) {
          if (!(callCase_ == 8)) {
            call_ = net.xlfe.reticul8.Reticul8.PING.getDefaultInstance();
          }
          pingBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              net.xlfe.reticul8.Reticul8.PING, net.xlfe.reticul8.Reticul8.PING.Builder, net.xlfe.reticul8.Reticul8.PINGOrBuilder>(
                  (net.xlfe.reticul8.Reticul8.PING) call_,
                  getParentForChildren(),
                  isClean());
          call_ = null;
        }
        callCase_ = 8;
        onChanged();;
        return pingBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          net.xlfe.reticul8.Reticul8.SYSINFO, net.xlfe.reticul8.Reticul8.SYSINFO.Builder, net.xlfe.reticul8.Reticul8.SYSINFOOrBuilder> sysinfoBuilder_;
      /**
       * <code>optional .SYSINFO sysinfo = 9;</code>
       */
      public boolean hasSysinfo() {
        return callCase_ == 9;
      }
      /**
       * <code>optional .SYSINFO sysinfo = 9;</code>
       */
      public net.xlfe.reticul8.Reticul8.SYSINFO getSysinfo() {
        if (sysinfoBuilder_ == null) {
          if (callCase_ == 9) {
            return (net.xlfe.reticul8.Reticul8.SYSINFO) call_;
          }
          return net.xlfe.reticul8.Reticul8.SYSINFO.getDefaultInstance();
        } else {
          if (callCase_ == 9) {
            return sysinfoBuilder_.getMessage();
          }
          return net.xlfe.reticul8.Reticul8.SYSINFO.getDefaultInstance();
        }
      }
      /**
       * <code>optional .SYSINFO sysinfo = 9;</code>
       */
      public Builder setSysinfo(net.xlfe.reticul8.Reticul8.SYSINFO value) {
        if (sysinfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          call_ = value;
          onChanged();
        } else {
          sysinfoBuilder_.setMessage(value);
        }
        callCase_ = 9;
        return this;
      }
      /**
       * <code>optional .SYSINFO sysinfo = 9;</code>
       */
      public Builder setSysinfo(
          net.xlfe.reticul8.Reticul8.SYSINFO.Builder builderForValue) {
        if (sysinfoBuilder_ == null) {
          call_ = builderForValue.build();
          onChanged();
        } else {
          sysinfoBuilder_.setMessage(builderForValue.build());
        }
        callCase_ = 9;
        return this;
      }
      /**
       * <code>optional .SYSINFO sysinfo = 9;</code>
       */
      public Builder mergeSysinfo(net.xlfe.reticul8.Reticul8.SYSINFO value) {
        if (sysinfoBuilder_ == null) {
          if (callCase_ == 9 &&
              call_ != net.xlfe.reticul8.Reticul8.SYSINFO.getDefaultInstance()) {
            call_ = net.xlfe.reticul8.Reticul8.SYSINFO.newBuilder((net.xlfe.reticul8.Reticul8.SYSINFO) call_)
                .mergeFrom(value).buildPartial();
          } else {
            call_ = value;
          }
          onChanged();
        } else {
          if (callCase_ == 9) {
            sysinfoBuilder_.mergeFrom(value);
          }
          sysinfoBuilder_.setMessage(value);
        }
        callCase_ = 9;
        return this;
      }
      /**
       * <code>optional .SYSINFO sysinfo = 9;</code>
       */
      public Builder clearSysinfo() {
        if (sysinfoBuilder_ == null) {
          if (callCase_ == 9) {
            callCase_ = 0;
            call_ = null;
            onChanged();
          }
        } else {
          if (callCase_ == 9) {
            callCase_ = 0;
            call_ = null;
          }
          sysinfoBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>optional .SYSINFO sysinfo = 9;</code>
       */
      public net.xlfe.reticul8.Reticul8.SYSINFO.Builder getSysinfoBuilder() {
        return getSysinfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .SYSINFO sysinfo = 9;</code>
       */
      public net.xlfe.reticul8.Reticul8.SYSINFOOrBuilder getSysinfoOrBuilder() {
        if ((callCase_ == 9) && (sysinfoBuilder_ != null)) {
          return sysinfoBuilder_.getMessageOrBuilder();
        } else {
          if (callCase_ == 9) {
            return (net.xlfe.reticul8.Reticul8.SYSINFO) call_;
          }
          return net.xlfe.reticul8.Reticul8.SYSINFO.getDefaultInstance();
        }
      }
      /**
       * <code>optional .SYSINFO sysinfo = 9;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          net.xlfe.reticul8.Reticul8.SYSINFO, net.xlfe.reticul8.Reticul8.SYSINFO.Builder, net.xlfe.reticul8.Reticul8.SYSINFOOrBuilder> 
          getSysinfoFieldBuilder() {
        if (sysinfoBuilder_ == null) {
          if (!(callCase_ == 9)) {
            call_ = net.xlfe.reticul8.Reticul8.SYSINFO.getDefaultInstance();
          }
          sysinfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              net.xlfe.reticul8.Reticul8.SYSINFO, net.xlfe.reticul8.Reticul8.SYSINFO.Builder, net.xlfe.reticul8.Reticul8.SYSINFOOrBuilder>(
                  (net.xlfe.reticul8.Reticul8.SYSINFO) call_,
                  getParentForChildren(),
                  isClean());
          call_ = null;
        }
        callCase_ = 9;
        onChanged();;
        return sysinfoBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          net.xlfe.reticul8.Reticul8.REBOOT, net.xlfe.reticul8.Reticul8.REBOOT.Builder, net.xlfe.reticul8.Reticul8.REBOOTOrBuilder> rebootBuilder_;
      /**
       * <code>optional .REBOOT reboot = 16;</code>
       */
      public boolean hasReboot() {
        return callCase_ == 16;
      }
      /**
       * <code>optional .REBOOT reboot = 16;</code>
       */
      public net.xlfe.reticul8.Reticul8.REBOOT getReboot() {
        if (rebootBuilder_ == null) {
          if (callCase_ == 16) {
            return (net.xlfe.reticul8.Reticul8.REBOOT) call_;
          }
          return net.xlfe.reticul8.Reticul8.REBOOT.getDefaultInstance();
        } else {
          if (callCase_ == 16) {
            return rebootBuilder_.getMessage();
          }
          return net.xlfe.reticul8.Reticul8.REBOOT.getDefaultInstance();
        }
      }
      /**
       * <code>optional .REBOOT reboot = 16;</code>
       */
      public Builder setReboot(net.xlfe.reticul8.Reticul8.REBOOT value) {
        if (rebootBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          call_ = value;
          onChanged();
        } else {
          rebootBuilder_.setMessage(value);
        }
        callCase_ = 16;
        return this;
      }
      /**
       * <code>optional .REBOOT reboot = 16;</code>
       */
      public Builder setReboot(
          net.xlfe.reticul8.Reticul8.REBOOT.Builder builderForValue) {
        if (rebootBuilder_ == null) {
          call_ = builderForValue.build();
          onChanged();
        } else {
          rebootBuilder_.setMessage(builderForValue.build());
        }
        callCase_ = 16;
        return this;
      }
      /**
       * <code>optional .REBOOT reboot = 16;</code>
       */
      public Builder mergeReboot(net.xlfe.reticul8.Reticul8.REBOOT value) {
        if (rebootBuilder_ == null) {
          if (callCase_ == 16 &&
              call_ != net.xlfe.reticul8.Reticul8.REBOOT.getDefaultInstance()) {
            call_ = net.xlfe.reticul8.Reticul8.REBOOT.newBuilder((net.xlfe.reticul8.Reticul8.REBOOT) call_)
                .mergeFrom(value).buildPartial();
          } else {
            call_ = value;
          }
          onChanged();
        } else {
          if (callCase_ == 16) {
            rebootBuilder_.mergeFrom(value);
          }
          rebootBuilder_.setMessage(value);
        }
        callCase_ = 16;
        return this;
      }
      /**
       * <code>optional .REBOOT reboot = 16;</code>
       */
      public Builder clearReboot() {
        if (rebootBuilder_ == null) {
          if (callCase_ == 16) {
            callCase_ = 0;
            call_ = null;
            onChanged();
          }
        } else {
          if (callCase_ == 16) {
            callCase_ = 0;
            call_ = null;
          }
          rebootBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>optional .REBOOT reboot = 16;</code>
       */
      public net.xlfe.reticul8.Reticul8.REBOOT.Builder getRebootBuilder() {
        return getRebootFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .REBOOT reboot = 16;</code>
       */
      public net.xlfe.reticul8.Reticul8.REBOOTOrBuilder getRebootOrBuilder() {
        if ((callCase_ == 16) && (rebootBuilder_ != null)) {
          return rebootBuilder_.getMessageOrBuilder();
        } else {
          if (callCase_ == 16) {
            return (net.xlfe.reticul8.Reticul8.REBOOT) call_;
          }
          return net.xlfe.reticul8.Reticul8.REBOOT.getDefaultInstance();
        }
      }
      /**
       * <code>optional .REBOOT reboot = 16;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          net.xlfe.reticul8.Reticul8.REBOOT, net.xlfe.reticul8.Reticul8.REBOOT.Builder, net.xlfe.reticul8.Reticul8.REBOOTOrBuilder> 
          getRebootFieldBuilder() {
        if (rebootBuilder_ == null) {
          if (!(callCase_ == 16)) {
            call_ = net.xlfe.reticul8.Reticul8.REBOOT.getDefaultInstance();
          }
          rebootBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              net.xlfe.reticul8.Reticul8.REBOOT, net.xlfe.reticul8.Reticul8.REBOOT.Builder, net.xlfe.reticul8.Reticul8.REBOOTOrBuilder>(
                  (net.xlfe.reticul8.Reticul8.REBOOT) call_,
                  getParentForChildren(),
                  isClean());
          call_ = null;
        }
        callCase_ = 16;
        onChanged();;
        return rebootBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          net.xlfe.reticul8.Reticul8.I2C_CONFIG, net.xlfe.reticul8.Reticul8.I2C_CONFIG.Builder, net.xlfe.reticul8.Reticul8.I2C_CONFIGOrBuilder> i2CConfigBuilder_;
      /**
       * <code>optional .I2C_CONFIG i2c_config = 10;</code>
       */
      public boolean hasI2CConfig() {
        return callCase_ == 10;
      }
      /**
       * <code>optional .I2C_CONFIG i2c_config = 10;</code>
       */
      public net.xlfe.reticul8.Reticul8.I2C_CONFIG getI2CConfig() {
        if (i2CConfigBuilder_ == null) {
          if (callCase_ == 10) {
            return (net.xlfe.reticul8.Reticul8.I2C_CONFIG) call_;
          }
          return net.xlfe.reticul8.Reticul8.I2C_CONFIG.getDefaultInstance();
        } else {
          if (callCase_ == 10) {
            return i2CConfigBuilder_.getMessage();
          }
          return net.xlfe.reticul8.Reticul8.I2C_CONFIG.getDefaultInstance();
        }
      }
      /**
       * <code>optional .I2C_CONFIG i2c_config = 10;</code>
       */
      public Builder setI2CConfig(net.xlfe.reticul8.Reticul8.I2C_CONFIG value) {
        if (i2CConfigBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          call_ = value;
          onChanged();
        } else {
          i2CConfigBuilder_.setMessage(value);
        }
        callCase_ = 10;
        return this;
      }
      /**
       * <code>optional .I2C_CONFIG i2c_config = 10;</code>
       */
      public Builder setI2CConfig(
          net.xlfe.reticul8.Reticul8.I2C_CONFIG.Builder builderForValue) {
        if (i2CConfigBuilder_ == null) {
          call_ = builderForValue.build();
          onChanged();
        } else {
          i2CConfigBuilder_.setMessage(builderForValue.build());
        }
        callCase_ = 10;
        return this;
      }
      /**
       * <code>optional .I2C_CONFIG i2c_config = 10;</code>
       */
      public Builder mergeI2CConfig(net.xlfe.reticul8.Reticul8.I2C_CONFIG value) {
        if (i2CConfigBuilder_ == null) {
          if (callCase_ == 10 &&
              call_ != net.xlfe.reticul8.Reticul8.I2C_CONFIG.getDefaultInstance()) {
            call_ = net.xlfe.reticul8.Reticul8.I2C_CONFIG.newBuilder((net.xlfe.reticul8.Reticul8.I2C_CONFIG) call_)
                .mergeFrom(value).buildPartial();
          } else {
            call_ = value;
          }
          onChanged();
        } else {
          if (callCase_ == 10) {
            i2CConfigBuilder_.mergeFrom(value);
          }
          i2CConfigBuilder_.setMessage(value);
        }
        callCase_ = 10;
        return this;
      }
      /**
       * <code>optional .I2C_CONFIG i2c_config = 10;</code>
       */
      public Builder clearI2CConfig() {
        if (i2CConfigBuilder_ == null) {
          if (callCase_ == 10) {
            callCase_ = 0;
            call_ = null;
            onChanged();
          }
        } else {
          if (callCase_ == 10) {
            callCase_ = 0;
            call_ = null;
          }
          i2CConfigBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>optional .I2C_CONFIG i2c_config = 10;</code>
       */
      public net.xlfe.reticul8.Reticul8.I2C_CONFIG.Builder getI2CConfigBuilder() {
        return getI2CConfigFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .I2C_CONFIG i2c_config = 10;</code>
       */
      public net.xlfe.reticul8.Reticul8.I2C_CONFIGOrBuilder getI2CConfigOrBuilder() {
        if ((callCase_ == 10) && (i2CConfigBuilder_ != null)) {
          return i2CConfigBuilder_.getMessageOrBuilder();
        } else {
          if (callCase_ == 10) {
            return (net.xlfe.reticul8.Reticul8.I2C_CONFIG) call_;
          }
          return net.xlfe.reticul8.Reticul8.I2C_CONFIG.getDefaultInstance();
        }
      }
      /**
       * <code>optional .I2C_CONFIG i2c_config = 10;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          net.xlfe.reticul8.Reticul8.I2C_CONFIG, net.xlfe.reticul8.Reticul8.I2C_CONFIG.Builder, net.xlfe.reticul8.Reticul8.I2C_CONFIGOrBuilder> 
          getI2CConfigFieldBuilder() {
        if (i2CConfigBuilder_ == null) {
          if (!(callCase_ == 10)) {
            call_ = net.xlfe.reticul8.Reticul8.I2C_CONFIG.getDefaultInstance();
          }
          i2CConfigBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              net.xlfe.reticul8.Reticul8.I2C_CONFIG, net.xlfe.reticul8.Reticul8.I2C_CONFIG.Builder, net.xlfe.reticul8.Reticul8.I2C_CONFIGOrBuilder>(
                  (net.xlfe.reticul8.Reticul8.I2C_CONFIG) call_,
                  getParentForChildren(),
                  isClean());
          call_ = null;
        }
        callCase_ = 10;
        onChanged();;
        return i2CConfigBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          net.xlfe.reticul8.Reticul8.I2C_WRITE, net.xlfe.reticul8.Reticul8.I2C_WRITE.Builder, net.xlfe.reticul8.Reticul8.I2C_WRITEOrBuilder> i2CWriteBuilder_;
      /**
       * <code>optional .I2C_WRITE i2c_write = 11;</code>
       */
      public boolean hasI2CWrite() {
        return callCase_ == 11;
      }
      /**
       * <code>optional .I2C_WRITE i2c_write = 11;</code>
       */
      public net.xlfe.reticul8.Reticul8.I2C_WRITE getI2CWrite() {
        if (i2CWriteBuilder_ == null) {
          if (callCase_ == 11) {
            return (net.xlfe.reticul8.Reticul8.I2C_WRITE) call_;
          }
          return net.xlfe.reticul8.Reticul8.I2C_WRITE.getDefaultInstance();
        } else {
          if (callCase_ == 11) {
            return i2CWriteBuilder_.getMessage();
          }
          return net.xlfe.reticul8.Reticul8.I2C_WRITE.getDefaultInstance();
        }
      }
      /**
       * <code>optional .I2C_WRITE i2c_write = 11;</code>
       */
      public Builder setI2CWrite(net.xlfe.reticul8.Reticul8.I2C_WRITE value) {
        if (i2CWriteBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          call_ = value;
          onChanged();
        } else {
          i2CWriteBuilder_.setMessage(value);
        }
        callCase_ = 11;
        return this;
      }
      /**
       * <code>optional .I2C_WRITE i2c_write = 11;</code>
       */
      public Builder setI2CWrite(
          net.xlfe.reticul8.Reticul8.I2C_WRITE.Builder builderForValue) {
        if (i2CWriteBuilder_ == null) {
          call_ = builderForValue.build();
          onChanged();
        } else {
          i2CWriteBuilder_.setMessage(builderForValue.build());
        }
        callCase_ = 11;
        return this;
      }
      /**
       * <code>optional .I2C_WRITE i2c_write = 11;</code>
       */
      public Builder mergeI2CWrite(net.xlfe.reticul8.Reticul8.I2C_WRITE value) {
        if (i2CWriteBuilder_ == null) {
          if (callCase_ == 11 &&
              call_ != net.xlfe.reticul8.Reticul8.I2C_WRITE.getDefaultInstance()) {
            call_ = net.xlfe.reticul8.Reticul8.I2C_WRITE.newBuilder((net.xlfe.reticul8.Reticul8.I2C_WRITE) call_)
                .mergeFrom(value).buildPartial();
          } else {
            call_ = value;
          }
          onChanged();
        } else {
          if (callCase_ == 11) {
            i2CWriteBuilder_.mergeFrom(value);
          }
          i2CWriteBuilder_.setMessage(value);
        }
        callCase_ = 11;
        return this;
      }
      /**
       * <code>optional .I2C_WRITE i2c_write = 11;</code>
       */
      public Builder clearI2CWrite() {
        if (i2CWriteBuilder_ == null) {
          if (callCase_ == 11) {
            callCase_ = 0;
            call_ = null;
            onChanged();
          }
        } else {
          if (callCase_ == 11) {
            callCase_ = 0;
            call_ = null;
          }
          i2CWriteBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>optional .I2C_WRITE i2c_write = 11;</code>
       */
      public net.xlfe.reticul8.Reticul8.I2C_WRITE.Builder getI2CWriteBuilder() {
        return getI2CWriteFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .I2C_WRITE i2c_write = 11;</code>
       */
      public net.xlfe.reticul8.Reticul8.I2C_WRITEOrBuilder getI2CWriteOrBuilder() {
        if ((callCase_ == 11) && (i2CWriteBuilder_ != null)) {
          return i2CWriteBuilder_.getMessageOrBuilder();
        } else {
          if (callCase_ == 11) {
            return (net.xlfe.reticul8.Reticul8.I2C_WRITE) call_;
          }
          return net.xlfe.reticul8.Reticul8.I2C_WRITE.getDefaultInstance();
        }
      }
      /**
       * <code>optional .I2C_WRITE i2c_write = 11;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          net.xlfe.reticul8.Reticul8.I2C_WRITE, net.xlfe.reticul8.Reticul8.I2C_WRITE.Builder, net.xlfe.reticul8.Reticul8.I2C_WRITEOrBuilder> 
          getI2CWriteFieldBuilder() {
        if (i2CWriteBuilder_ == null) {
          if (!(callCase_ == 11)) {
            call_ = net.xlfe.reticul8.Reticul8.I2C_WRITE.getDefaultInstance();
          }
          i2CWriteBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              net.xlfe.reticul8.Reticul8.I2C_WRITE, net.xlfe.reticul8.Reticul8.I2C_WRITE.Builder, net.xlfe.reticul8.Reticul8.I2C_WRITEOrBuilder>(
                  (net.xlfe.reticul8.Reticul8.I2C_WRITE) call_,
                  getParentForChildren(),
                  isClean());
          call_ = null;
        }
        callCase_ = 11;
        onChanged();;
        return i2CWriteBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          net.xlfe.reticul8.Reticul8.I2C_READ, net.xlfe.reticul8.Reticul8.I2C_READ.Builder, net.xlfe.reticul8.Reticul8.I2C_READOrBuilder> i2CReadBuilder_;
      /**
       * <code>optional .I2C_READ i2c_read = 12;</code>
       */
      public boolean hasI2CRead() {
        return callCase_ == 12;
      }
      /**
       * <code>optional .I2C_READ i2c_read = 12;</code>
       */
      public net.xlfe.reticul8.Reticul8.I2C_READ getI2CRead() {
        if (i2CReadBuilder_ == null) {
          if (callCase_ == 12) {
            return (net.xlfe.reticul8.Reticul8.I2C_READ) call_;
          }
          return net.xlfe.reticul8.Reticul8.I2C_READ.getDefaultInstance();
        } else {
          if (callCase_ == 12) {
            return i2CReadBuilder_.getMessage();
          }
          return net.xlfe.reticul8.Reticul8.I2C_READ.getDefaultInstance();
        }
      }
      /**
       * <code>optional .I2C_READ i2c_read = 12;</code>
       */
      public Builder setI2CRead(net.xlfe.reticul8.Reticul8.I2C_READ value) {
        if (i2CReadBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          call_ = value;
          onChanged();
        } else {
          i2CReadBuilder_.setMessage(value);
        }
        callCase_ = 12;
        return this;
      }
      /**
       * <code>optional .I2C_READ i2c_read = 12;</code>
       */
      public Builder setI2CRead(
          net.xlfe.reticul8.Reticul8.I2C_READ.Builder builderForValue) {
        if (i2CReadBuilder_ == null) {
          call_ = builderForValue.build();
          onChanged();
        } else {
          i2CReadBuilder_.setMessage(builderForValue.build());
        }
        callCase_ = 12;
        return this;
      }
      /**
       * <code>optional .I2C_READ i2c_read = 12;</code>
       */
      public Builder mergeI2CRead(net.xlfe.reticul8.Reticul8.I2C_READ value) {
        if (i2CReadBuilder_ == null) {
          if (callCase_ == 12 &&
              call_ != net.xlfe.reticul8.Reticul8.I2C_READ.getDefaultInstance()) {
            call_ = net.xlfe.reticul8.Reticul8.I2C_READ.newBuilder((net.xlfe.reticul8.Reticul8.I2C_READ) call_)
                .mergeFrom(value).buildPartial();
          } else {
            call_ = value;
          }
          onChanged();
        } else {
          if (callCase_ == 12) {
            i2CReadBuilder_.mergeFrom(value);
          }
          i2CReadBuilder_.setMessage(value);
        }
        callCase_ = 12;
        return this;
      }
      /**
       * <code>optional .I2C_READ i2c_read = 12;</code>
       */
      public Builder clearI2CRead() {
        if (i2CReadBuilder_ == null) {
          if (callCase_ == 12) {
            callCase_ = 0;
            call_ = null;
            onChanged();
          }
        } else {
          if (callCase_ == 12) {
            callCase_ = 0;
            call_ = null;
          }
          i2CReadBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>optional .I2C_READ i2c_read = 12;</code>
       */
      public net.xlfe.reticul8.Reticul8.I2C_READ.Builder getI2CReadBuilder() {
        return getI2CReadFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .I2C_READ i2c_read = 12;</code>
       */
      public net.xlfe.reticul8.Reticul8.I2C_READOrBuilder getI2CReadOrBuilder() {
        if ((callCase_ == 12) && (i2CReadBuilder_ != null)) {
          return i2CReadBuilder_.getMessageOrBuilder();
        } else {
          if (callCase_ == 12) {
            return (net.xlfe.reticul8.Reticul8.I2C_READ) call_;
          }
          return net.xlfe.reticul8.Reticul8.I2C_READ.getDefaultInstance();
        }
      }
      /**
       * <code>optional .I2C_READ i2c_read = 12;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          net.xlfe.reticul8.Reticul8.I2C_READ, net.xlfe.reticul8.Reticul8.I2C_READ.Builder, net.xlfe.reticul8.Reticul8.I2C_READOrBuilder> 
          getI2CReadFieldBuilder() {
        if (i2CReadBuilder_ == null) {
          if (!(callCase_ == 12)) {
            call_ = net.xlfe.reticul8.Reticul8.I2C_READ.getDefaultInstance();
          }
          i2CReadBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              net.xlfe.reticul8.Reticul8.I2C_READ, net.xlfe.reticul8.Reticul8.I2C_READ.Builder, net.xlfe.reticul8.Reticul8.I2C_READOrBuilder>(
                  (net.xlfe.reticul8.Reticul8.I2C_READ) call_,
                  getParentForChildren(),
                  isClean());
          call_ = null;
        }
        callCase_ = 12;
        onChanged();;
        return i2CReadBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          net.xlfe.reticul8.Reticul8.OTA_UPDATE, net.xlfe.reticul8.Reticul8.OTA_UPDATE.Builder, net.xlfe.reticul8.Reticul8.OTA_UPDATEOrBuilder> otaUpdateBuilder_;
      /**
       * <code>optional .OTA_UPDATE ota_update = 13;</code>
       */
      public boolean hasOtaUpdate() {
        return callCase_ == 13;
      }
      /**
       * <code>optional .OTA_UPDATE ota_update = 13;</code>
       */
      public net.xlfe.reticul8.Reticul8.OTA_UPDATE getOtaUpdate() {
        if (otaUpdateBuilder_ == null) {
          if (callCase_ == 13) {
            return (net.xlfe.reticul8.Reticul8.OTA_UPDATE) call_;
          }
          return net.xlfe.reticul8.Reticul8.OTA_UPDATE.getDefaultInstance();
        } else {
          if (callCase_ == 13) {
            return otaUpdateBuilder_.getMessage();
          }
          return net.xlfe.reticul8.Reticul8.OTA_UPDATE.getDefaultInstance();
        }
      }
      /**
       * <code>optional .OTA_UPDATE ota_update = 13;</code>
       */
      public Builder setOtaUpdate(net.xlfe.reticul8.Reticul8.OTA_UPDATE value) {
        if (otaUpdateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          call_ = value;
          onChanged();
        } else {
          otaUpdateBuilder_.setMessage(value);
        }
        callCase_ = 13;
        return this;
      }
      /**
       * <code>optional .OTA_UPDATE ota_update = 13;</code>
       */
      public Builder setOtaUpdate(
          net.xlfe.reticul8.Reticul8.OTA_UPDATE.Builder builderForValue) {
        if (otaUpdateBuilder_ == null) {
          call_ = builderForValue.build();
          onChanged();
        } else {
          otaUpdateBuilder_.setMessage(builderForValue.build());
        }
        callCase_ = 13;
        return this;
      }
      /**
       * <code>optional .OTA_UPDATE ota_update = 13;</code>
       */
      public Builder mergeOtaUpdate(net.xlfe.reticul8.Reticul8.OTA_UPDATE value) {
        if (otaUpdateBuilder_ == null) {
          if (callCase_ == 13 &&
              call_ != net.xlfe.reticul8.Reticul8.OTA_UPDATE.getDefaultInstance()) {
            call_ = net.xlfe.reticul8.Reticul8.OTA_UPDATE.newBuilder((net.xlfe.reticul8.Reticul8.OTA_UPDATE) call_)
                .mergeFrom(value).buildPartial();
          } else {
            call_ = value;
          }
          onChanged();
        } else {
          if (callCase_ == 13) {
            otaUpdateBuilder_.mergeFrom(value);
          }
          otaUpdateBuilder_.setMessage(value);
        }
        callCase_ = 13;
        return this;
      }
      /**
       * <code>optional .OTA_UPDATE ota_update = 13;</code>
       */
      public Builder clearOtaUpdate() {
        if (otaUpdateBuilder_ == null) {
          if (callCase_ == 13) {
            callCase_ = 0;
            call_ = null;
            onChanged();
          }
        } else {
          if (callCase_ == 13) {
            callCase_ = 0;
            call_ = null;
          }
          otaUpdateBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>optional .OTA_UPDATE ota_update = 13;</code>
       */
      public net.xlfe.reticul8.Reticul8.OTA_UPDATE.Builder getOtaUpdateBuilder() {
        return getOtaUpdateFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .OTA_UPDATE ota_update = 13;</code>
       */
      public net.xlfe.reticul8.Reticul8.OTA_UPDATEOrBuilder getOtaUpdateOrBuilder() {
        if ((callCase_ == 13) && (otaUpdateBuilder_ != null)) {
          return otaUpdateBuilder_.getMessageOrBuilder();
        } else {
          if (callCase_ == 13) {
            return (net.xlfe.reticul8.Reticul8.OTA_UPDATE) call_;
          }
          return net.xlfe.reticul8.Reticul8.OTA_UPDATE.getDefaultInstance();
        }
      }
      /**
       * <code>optional .OTA_UPDATE ota_update = 13;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          net.xlfe.reticul8.Reticul8.OTA_UPDATE, net.xlfe.reticul8.Reticul8.OTA_UPDATE.Builder, net.xlfe.reticul8.Reticul8.OTA_UPDATEOrBuilder> 
          getOtaUpdateFieldBuilder() {
        if (otaUpdateBuilder_ == null) {
          if (!(callCase_ == 13)) {
            call_ = net.xlfe.reticul8.Reticul8.OTA_UPDATE.getDefaultInstance();
          }
          otaUpdateBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              net.xlfe.reticul8.Reticul8.OTA_UPDATE, net.xlfe.reticul8.Reticul8.OTA_UPDATE.Builder, net.xlfe.reticul8.Reticul8.OTA_UPDATEOrBuilder>(
                  (net.xlfe.reticul8.Reticul8.OTA_UPDATE) call_,
                  getParentForChildren(),
                  isClean());
          call_ = null;
        }
        callCase_ = 13;
        onChanged();;
        return otaUpdateBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          net.xlfe.reticul8.Reticul8.RUN_NESTED, net.xlfe.reticul8.Reticul8.RUN_NESTED.Builder, net.xlfe.reticul8.Reticul8.RUN_NESTEDOrBuilder> nestedBuilder_;
      /**
       * <code>optional .RUN_NESTED nested = 14;</code>
       */
      public boolean hasNested() {
        return callCase_ == 14;
      }
      /**
       * <code>optional .RUN_NESTED nested = 14;</code>
       */
      public net.xlfe.reticul8.Reticul8.RUN_NESTED getNested() {
        if (nestedBuilder_ == null) {
          if (callCase_ == 14) {
            return (net.xlfe.reticul8.Reticul8.RUN_NESTED) call_;
          }
          return net.xlfe.reticul8.Reticul8.RUN_NESTED.getDefaultInstance();
        } else {
          if (callCase_ == 14) {
            return nestedBuilder_.getMessage();
          }
          return net.xlfe.reticul8.Reticul8.RUN_NESTED.getDefaultInstance();
        }
      }
      /**
       * <code>optional .RUN_NESTED nested = 14;</code>
       */
      public Builder setNested(net.xlfe.reticul8.Reticul8.RUN_NESTED value) {
        if (nestedBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          call_ = value;
          onChanged();
        } else {
          nestedBuilder_.setMessage(value);
        }
        callCase_ = 14;
        return this;
      }
      /**
       * <code>optional .RUN_NESTED nested = 14;</code>
       */
      public Builder setNested(
          net.xlfe.reticul8.Reticul8.RUN_NESTED.Builder builderForValue) {
        if (nestedBuilder_ == null) {
          call_ = builderForValue.build();
          onChanged();
        } else {
          nestedBuilder_.setMessage(builderForValue.build());
        }
        callCase_ = 14;
        return this;
      }
      /**
       * <code>optional .RUN_NESTED nested = 14;</code>
       */
      public Builder mergeNested(net.xlfe.reticul8.Reticul8.RUN_NESTED value) {
        if (nestedBuilder_ == null) {
          if (callCase_ == 14 &&
              call_ != net.xlfe.reticul8.Reticul8.RUN_NESTED.getDefaultInstance()) {
            call_ = net.xlfe.reticul8.Reticul8.RUN_NESTED.newBuilder((net.xlfe.reticul8.Reticul8.RUN_NESTED) call_)
                .mergeFrom(value).buildPartial();
          } else {
            call_ = value;
          }
          onChanged();
        } else {
          if (callCase_ == 14) {
            nestedBuilder_.mergeFrom(value);
          }
          nestedBuilder_.setMessage(value);
        }
        callCase_ = 14;
        return this;
      }
      /**
       * <code>optional .RUN_NESTED nested = 14;</code>
       */
      public Builder clearNested() {
        if (nestedBuilder_ == null) {
          if (callCase_ == 14) {
            callCase_ = 0;
            call_ = null;
            onChanged();
          }
        } else {
          if (callCase_ == 14) {
            callCase_ = 0;
            call_ = null;
          }
          nestedBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>optional .RUN_NESTED nested = 14;</code>
       */
      public net.xlfe.reticul8.Reticul8.RUN_NESTED.Builder getNestedBuilder() {
        return getNestedFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .RUN_NESTED nested = 14;</code>
       */
      public net.xlfe.reticul8.Reticul8.RUN_NESTEDOrBuilder getNestedOrBuilder() {
        if ((callCase_ == 14) && (nestedBuilder_ != null)) {
          return nestedBuilder_.getMessageOrBuilder();
        } else {
          if (callCase_ == 14) {
            return (net.xlfe.reticul8.Reticul8.RUN_NESTED) call_;
          }
          return net.xlfe.reticul8.Reticul8.RUN_NESTED.getDefaultInstance();
        }
      }
      /**
       * <code>optional .RUN_NESTED nested = 14;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          net.xlfe.reticul8.Reticul8.RUN_NESTED, net.xlfe.reticul8.Reticul8.RUN_NESTED.Builder, net.xlfe.reticul8.Reticul8.RUN_NESTEDOrBuilder> 
          getNestedFieldBuilder() {
        if (nestedBuilder_ == null) {
          if (!(callCase_ == 14)) {
            call_ = net.xlfe.reticul8.Reticul8.RUN_NESTED.getDefaultInstance();
          }
          nestedBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              net.xlfe.reticul8.Reticul8.RUN_NESTED, net.xlfe.reticul8.Reticul8.RUN_NESTED.Builder, net.xlfe.reticul8.Reticul8.RUN_NESTEDOrBuilder>(
                  (net.xlfe.reticul8.Reticul8.RUN_NESTED) call_,
                  getParentForChildren(),
                  isClean());
          call_ = null;
        }
        callCase_ = 14;
        onChanged();;
        return nestedBuilder_;
      }

      private int msgId_ ;
      /**
       * <code>required fixed32 msg_id = 200;</code>
       */
      public boolean hasMsgId() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>required fixed32 msg_id = 200;</code>
       */
      public int getMsgId() {
        return msgId_;
      }
      /**
       * <code>required fixed32 msg_id = 200;</code>
       */
      public Builder setMsgId(int value) {
        bitField0_ |= 0x00010000;
        msgId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required fixed32 msg_id = 200;</code>
       */
      public Builder clearMsgId() {
        bitField0_ = (bitField0_ & ~0x00010000);
        msgId_ = 0;
        onChanged();
        return this;
      }

      private net.xlfe.reticul8.Reticul8.SCHEDULE schedule_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          net.xlfe.reticul8.Reticul8.SCHEDULE, net.xlfe.reticul8.Reticul8.SCHEDULE.Builder, net.xlfe.reticul8.Reticul8.SCHEDULEOrBuilder> scheduleBuilder_;
      /**
       * <code>optional .SCHEDULE schedule = 201;</code>
       */
      public boolean hasSchedule() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional .SCHEDULE schedule = 201;</code>
       */
      public net.xlfe.reticul8.Reticul8.SCHEDULE getSchedule() {
        if (scheduleBuilder_ == null) {
          return schedule_ == null ? net.xlfe.reticul8.Reticul8.SCHEDULE.getDefaultInstance() : schedule_;
        } else {
          return scheduleBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .SCHEDULE schedule = 201;</code>
       */
      public Builder setSchedule(net.xlfe.reticul8.Reticul8.SCHEDULE value) {
        if (scheduleBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          schedule_ = value;
          onChanged();
        } else {
          scheduleBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00020000;
        return this;
      }
      /**
       * <code>optional .SCHEDULE schedule = 201;</code>
       */
      public Builder setSchedule(
          net.xlfe.reticul8.Reticul8.SCHEDULE.Builder builderForValue) {
        if (scheduleBuilder_ == null) {
          schedule_ = builderForValue.build();
          onChanged();
        } else {
          scheduleBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00020000;
        return this;
      }
      /**
       * <code>optional .SCHEDULE schedule = 201;</code>
       */
      public Builder mergeSchedule(net.xlfe.reticul8.Reticul8.SCHEDULE value) {
        if (scheduleBuilder_ == null) {
          if (((bitField0_ & 0x00020000) == 0x00020000) &&
              schedule_ != null &&
              schedule_ != net.xlfe.reticul8.Reticul8.SCHEDULE.getDefaultInstance()) {
            schedule_ =
              net.xlfe.reticul8.Reticul8.SCHEDULE.newBuilder(schedule_).mergeFrom(value).buildPartial();
          } else {
            schedule_ = value;
          }
          onChanged();
        } else {
          scheduleBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00020000;
        return this;
      }
      /**
       * <code>optional .SCHEDULE schedule = 201;</code>
       */
      public Builder clearSchedule() {
        if (scheduleBuilder_ == null) {
          schedule_ = null;
          onChanged();
        } else {
          scheduleBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00020000);
        return this;
      }
      /**
       * <code>optional .SCHEDULE schedule = 201;</code>
       */
      public net.xlfe.reticul8.Reticul8.SCHEDULE.Builder getScheduleBuilder() {
        bitField0_ |= 0x00020000;
        onChanged();
        return getScheduleFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .SCHEDULE schedule = 201;</code>
       */
      public net.xlfe.reticul8.Reticul8.SCHEDULEOrBuilder getScheduleOrBuilder() {
        if (scheduleBuilder_ != null) {
          return scheduleBuilder_.getMessageOrBuilder();
        } else {
          return schedule_ == null ?
              net.xlfe.reticul8.Reticul8.SCHEDULE.getDefaultInstance() : schedule_;
        }
      }
      /**
       * <code>optional .SCHEDULE schedule = 201;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          net.xlfe.reticul8.Reticul8.SCHEDULE, net.xlfe.reticul8.Reticul8.SCHEDULE.Builder, net.xlfe.reticul8.Reticul8.SCHEDULEOrBuilder> 
          getScheduleFieldBuilder() {
        if (scheduleBuilder_ == null) {
          scheduleBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              net.xlfe.reticul8.Reticul8.SCHEDULE, net.xlfe.reticul8.Reticul8.SCHEDULE.Builder, net.xlfe.reticul8.Reticul8.SCHEDULEOrBuilder>(
                  getSchedule(),
                  getParentForChildren(),
                  isClean());
          schedule_ = null;
        }
        return scheduleBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:RPC)
    }

    // @@protoc_insertion_point(class_scope:RPC)
    private static final net.xlfe.reticul8.Reticul8.RPC DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new net.xlfe.reticul8.Reticul8.RPC();
    }

    public static net.xlfe.reticul8.Reticul8.RPC getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<RPC>
        PARSER = new com.google.protobuf.AbstractParser<RPC>() {
      @java.lang.Override
      public RPC parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RPC(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RPC> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RPC> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public net.xlfe.reticul8.Reticul8.RPC getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PIN_CHANGEOrBuilder extends
      // @@protoc_insertion_point(interface_extends:PIN_CHANGE)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required fixed32 pin = 1;</code>
     */
    boolean hasPin();
    /**
     * <code>required fixed32 pin = 1;</code>
     */
    int getPin();

    /**
     * <code>required .PIN_VALUE value = 2;</code>
     */
    boolean hasValue();
    /**
     * <code>required .PIN_VALUE value = 2;</code>
     */
    net.xlfe.reticul8.Reticul8.PIN_VALUE getValue();
  }
  /**
   * Protobuf type {@code PIN_CHANGE}
   */
  public  static final class PIN_CHANGE extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:PIN_CHANGE)
      PIN_CHANGEOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use PIN_CHANGE.newBuilder() to construct.
    private PIN_CHANGE(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PIN_CHANGE() {
      pin_ = 0;
      value_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private PIN_CHANGE(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 13: {
              bitField0_ |= 0x00000001;
              pin_ = input.readFixed32();
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
                @SuppressWarnings("deprecation")
              net.xlfe.reticul8.Reticul8.PIN_VALUE value = net.xlfe.reticul8.Reticul8.PIN_VALUE.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                value_ = rawValue;
              }
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.xlfe.reticul8.Reticul8.internal_static_PIN_CHANGE_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.xlfe.reticul8.Reticul8.internal_static_PIN_CHANGE_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              net.xlfe.reticul8.Reticul8.PIN_CHANGE.class, net.xlfe.reticul8.Reticul8.PIN_CHANGE.Builder.class);
    }

    private int bitField0_;
    public static final int PIN_FIELD_NUMBER = 1;
    private int pin_;
    /**
     * <code>required fixed32 pin = 1;</code>
     */
    public boolean hasPin() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required fixed32 pin = 1;</code>
     */
    public int getPin() {
      return pin_;
    }

    public static final int VALUE_FIELD_NUMBER = 2;
    private int value_;
    /**
     * <code>required .PIN_VALUE value = 2;</code>
     */
    public boolean hasValue() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .PIN_VALUE value = 2;</code>
     */
    public net.xlfe.reticul8.Reticul8.PIN_VALUE getValue() {
      @SuppressWarnings("deprecation")
      net.xlfe.reticul8.Reticul8.PIN_VALUE result = net.xlfe.reticul8.Reticul8.PIN_VALUE.valueOf(value_);
      return result == null ? net.xlfe.reticul8.Reticul8.PIN_VALUE.PV_LOW : result;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasPin()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasValue()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeFixed32(1, pin_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, value_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(1, pin_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, value_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof net.xlfe.reticul8.Reticul8.PIN_CHANGE)) {
        return super.equals(obj);
      }
      net.xlfe.reticul8.Reticul8.PIN_CHANGE other = (net.xlfe.reticul8.Reticul8.PIN_CHANGE) obj;

      boolean result = true;
      result = result && (hasPin() == other.hasPin());
      if (hasPin()) {
        result = result && (getPin()
            == other.getPin());
      }
      result = result && (hasValue() == other.hasValue());
      if (hasValue()) {
        result = result && value_ == other.value_;
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasPin()) {
        hash = (37 * hash) + PIN_FIELD_NUMBER;
        hash = (53 * hash) + getPin();
      }
      if (hasValue()) {
        hash = (37 * hash) + VALUE_FIELD_NUMBER;
        hash = (53 * hash) + value_;
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static net.xlfe.reticul8.Reticul8.PIN_CHANGE parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.xlfe.reticul8.Reticul8.PIN_CHANGE parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.xlfe.reticul8.Reticul8.PIN_CHANGE parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.xlfe.reticul8.Reticul8.PIN_CHANGE parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.xlfe.reticul8.Reticul8.PIN_CHANGE parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.xlfe.reticul8.Reticul8.PIN_CHANGE parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.xlfe.reticul8.Reticul8.PIN_CHANGE parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.xlfe.reticul8.Reticul8.PIN_CHANGE parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.xlfe.reticul8.Reticul8.PIN_CHANGE parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static net.xlfe.reticul8.Reticul8.PIN_CHANGE parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.xlfe.reticul8.Reticul8.PIN_CHANGE parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.xlfe.reticul8.Reticul8.PIN_CHANGE parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(net.xlfe.reticul8.Reticul8.PIN_CHANGE prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code PIN_CHANGE}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:PIN_CHANGE)
        net.xlfe.reticul8.Reticul8.PIN_CHANGEOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.xlfe.reticul8.Reticul8.internal_static_PIN_CHANGE_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.xlfe.reticul8.Reticul8.internal_static_PIN_CHANGE_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                net.xlfe.reticul8.Reticul8.PIN_CHANGE.class, net.xlfe.reticul8.Reticul8.PIN_CHANGE.Builder.class);
      }

      // Construct using net.xlfe.reticul8.Reticul8.PIN_CHANGE.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        pin_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        value_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.xlfe.reticul8.Reticul8.internal_static_PIN_CHANGE_descriptor;
      }

      @java.lang.Override
      public net.xlfe.reticul8.Reticul8.PIN_CHANGE getDefaultInstanceForType() {
        return net.xlfe.reticul8.Reticul8.PIN_CHANGE.getDefaultInstance();
      }

      @java.lang.Override
      public net.xlfe.reticul8.Reticul8.PIN_CHANGE build() {
        net.xlfe.reticul8.Reticul8.PIN_CHANGE result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public net.xlfe.reticul8.Reticul8.PIN_CHANGE buildPartial() {
        net.xlfe.reticul8.Reticul8.PIN_CHANGE result = new net.xlfe.reticul8.Reticul8.PIN_CHANGE(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.pin_ = pin_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.value_ = value_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.xlfe.reticul8.Reticul8.PIN_CHANGE) {
          return mergeFrom((net.xlfe.reticul8.Reticul8.PIN_CHANGE)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(net.xlfe.reticul8.Reticul8.PIN_CHANGE other) {
        if (other == net.xlfe.reticul8.Reticul8.PIN_CHANGE.getDefaultInstance()) return this;
        if (other.hasPin()) {
          setPin(other.getPin());
        }
        if (other.hasValue()) {
          setValue(other.getValue());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasPin()) {
          return false;
        }
        if (!hasValue()) {
          return false;
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        net.xlfe.reticul8.Reticul8.PIN_CHANGE parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (net.xlfe.reticul8.Reticul8.PIN_CHANGE) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int pin_ ;
      /**
       * <code>required fixed32 pin = 1;</code>
       */
      public boolean hasPin() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required fixed32 pin = 1;</code>
       */
      public int getPin() {
        return pin_;
      }
      /**
       * <code>required fixed32 pin = 1;</code>
       */
      public Builder setPin(int value) {
        bitField0_ |= 0x00000001;
        pin_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required fixed32 pin = 1;</code>
       */
      public Builder clearPin() {
        bitField0_ = (bitField0_ & ~0x00000001);
        pin_ = 0;
        onChanged();
        return this;
      }

      private int value_ = 0;
      /**
       * <code>required .PIN_VALUE value = 2;</code>
       */
      public boolean hasValue() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .PIN_VALUE value = 2;</code>
       */
      public net.xlfe.reticul8.Reticul8.PIN_VALUE getValue() {
        @SuppressWarnings("deprecation")
        net.xlfe.reticul8.Reticul8.PIN_VALUE result = net.xlfe.reticul8.Reticul8.PIN_VALUE.valueOf(value_);
        return result == null ? net.xlfe.reticul8.Reticul8.PIN_VALUE.PV_LOW : result;
      }
      /**
       * <code>required .PIN_VALUE value = 2;</code>
       */
      public Builder setValue(net.xlfe.reticul8.Reticul8.PIN_VALUE value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        value_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>required .PIN_VALUE value = 2;</code>
       */
      public Builder clearValue() {
        bitField0_ = (bitField0_ & ~0x00000002);
        value_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:PIN_CHANGE)
    }

    // @@protoc_insertion_point(class_scope:PIN_CHANGE)
    private static final net.xlfe.reticul8.Reticul8.PIN_CHANGE DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new net.xlfe.reticul8.Reticul8.PIN_CHANGE();
    }

    public static net.xlfe.reticul8.Reticul8.PIN_CHANGE getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<PIN_CHANGE>
        PARSER = new com.google.protobuf.AbstractParser<PIN_CHANGE>() {
      @java.lang.Override
      public PIN_CHANGE parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PIN_CHANGE(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<PIN_CHANGE> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PIN_CHANGE> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public net.xlfe.reticul8.Reticul8.PIN_CHANGE getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RPC_RESULTOrBuilder extends
      // @@protoc_insertion_point(interface_extends:RPC_RESULT)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required .RESULT_TYPE result = 1;</code>
     */
    boolean hasResult();
    /**
     * <code>required .RESULT_TYPE result = 1;</code>
     */
    net.xlfe.reticul8.Reticul8.RESULT_TYPE getResult();

    /**
     * <code>optional .PIN_VALUE pin_value = 2;</code>
     */
    boolean hasPinValue();
    /**
     * <code>optional .PIN_VALUE pin_value = 2;</code>
     */
    net.xlfe.reticul8.Reticul8.PIN_VALUE getPinValue();

    /**
     * <code>required fixed32 msg_id = 200;</code>
     */
    boolean hasMsgId();
    /**
     * <code>required fixed32 msg_id = 200;</code>
     */
    int getMsgId();
  }
  /**
   * Protobuf type {@code RPC_RESULT}
   */
  public  static final class RPC_RESULT extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:RPC_RESULT)
      RPC_RESULTOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RPC_RESULT.newBuilder() to construct.
    private RPC_RESULT(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RPC_RESULT() {
      result_ = 1;
      pinValue_ = 0;
      msgId_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RPC_RESULT(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();
                @SuppressWarnings("deprecation")
              net.xlfe.reticul8.Reticul8.RESULT_TYPE value = net.xlfe.reticul8.Reticul8.RESULT_TYPE.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                result_ = rawValue;
              }
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
                @SuppressWarnings("deprecation")
              net.xlfe.reticul8.Reticul8.PIN_VALUE value = net.xlfe.reticul8.Reticul8.PIN_VALUE.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                pinValue_ = rawValue;
              }
              break;
            }
            case 1605: {
              bitField0_ |= 0x00000004;
              msgId_ = input.readFixed32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.xlfe.reticul8.Reticul8.internal_static_RPC_RESULT_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.xlfe.reticul8.Reticul8.internal_static_RPC_RESULT_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              net.xlfe.reticul8.Reticul8.RPC_RESULT.class, net.xlfe.reticul8.Reticul8.RPC_RESULT.Builder.class);
    }

    private int bitField0_;
    public static final int RESULT_FIELD_NUMBER = 1;
    private int result_;
    /**
     * <code>required .RESULT_TYPE result = 1;</code>
     */
    public boolean hasResult() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .RESULT_TYPE result = 1;</code>
     */
    public net.xlfe.reticul8.Reticul8.RESULT_TYPE getResult() {
      @SuppressWarnings("deprecation")
      net.xlfe.reticul8.Reticul8.RESULT_TYPE result = net.xlfe.reticul8.Reticul8.RESULT_TYPE.valueOf(result_);
      return result == null ? net.xlfe.reticul8.Reticul8.RESULT_TYPE.RT_UNKNOWN : result;
    }

    public static final int PIN_VALUE_FIELD_NUMBER = 2;
    private int pinValue_;
    /**
     * <code>optional .PIN_VALUE pin_value = 2;</code>
     */
    public boolean hasPinValue() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .PIN_VALUE pin_value = 2;</code>
     */
    public net.xlfe.reticul8.Reticul8.PIN_VALUE getPinValue() {
      @SuppressWarnings("deprecation")
      net.xlfe.reticul8.Reticul8.PIN_VALUE result = net.xlfe.reticul8.Reticul8.PIN_VALUE.valueOf(pinValue_);
      return result == null ? net.xlfe.reticul8.Reticul8.PIN_VALUE.PV_LOW : result;
    }

    public static final int MSG_ID_FIELD_NUMBER = 200;
    private int msgId_;
    /**
     * <code>required fixed32 msg_id = 200;</code>
     */
    public boolean hasMsgId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required fixed32 msg_id = 200;</code>
     */
    public int getMsgId() {
      return msgId_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasResult()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMsgId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, result_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, pinValue_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeFixed32(200, msgId_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, result_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, pinValue_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(200, msgId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof net.xlfe.reticul8.Reticul8.RPC_RESULT)) {
        return super.equals(obj);
      }
      net.xlfe.reticul8.Reticul8.RPC_RESULT other = (net.xlfe.reticul8.Reticul8.RPC_RESULT) obj;

      boolean result = true;
      result = result && (hasResult() == other.hasResult());
      if (hasResult()) {
        result = result && result_ == other.result_;
      }
      result = result && (hasPinValue() == other.hasPinValue());
      if (hasPinValue()) {
        result = result && pinValue_ == other.pinValue_;
      }
      result = result && (hasMsgId() == other.hasMsgId());
      if (hasMsgId()) {
        result = result && (getMsgId()
            == other.getMsgId());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasResult()) {
        hash = (37 * hash) + RESULT_FIELD_NUMBER;
        hash = (53 * hash) + result_;
      }
      if (hasPinValue()) {
        hash = (37 * hash) + PIN_VALUE_FIELD_NUMBER;
        hash = (53 * hash) + pinValue_;
      }
      if (hasMsgId()) {
        hash = (37 * hash) + MSG_ID_FIELD_NUMBER;
        hash = (53 * hash) + getMsgId();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static net.xlfe.reticul8.Reticul8.RPC_RESULT parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.xlfe.reticul8.Reticul8.RPC_RESULT parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.xlfe.reticul8.Reticul8.RPC_RESULT parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.xlfe.reticul8.Reticul8.RPC_RESULT parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.xlfe.reticul8.Reticul8.RPC_RESULT parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.xlfe.reticul8.Reticul8.RPC_RESULT parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.xlfe.reticul8.Reticul8.RPC_RESULT parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.xlfe.reticul8.Reticul8.RPC_RESULT parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.xlfe.reticul8.Reticul8.RPC_RESULT parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static net.xlfe.reticul8.Reticul8.RPC_RESULT parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.xlfe.reticul8.Reticul8.RPC_RESULT parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.xlfe.reticul8.Reticul8.RPC_RESULT parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(net.xlfe.reticul8.Reticul8.RPC_RESULT prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code RPC_RESULT}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:RPC_RESULT)
        net.xlfe.reticul8.Reticul8.RPC_RESULTOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.xlfe.reticul8.Reticul8.internal_static_RPC_RESULT_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.xlfe.reticul8.Reticul8.internal_static_RPC_RESULT_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                net.xlfe.reticul8.Reticul8.RPC_RESULT.class, net.xlfe.reticul8.Reticul8.RPC_RESULT.Builder.class);
      }

      // Construct using net.xlfe.reticul8.Reticul8.RPC_RESULT.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        result_ = 1;
        bitField0_ = (bitField0_ & ~0x00000001);
        pinValue_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        msgId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.xlfe.reticul8.Reticul8.internal_static_RPC_RESULT_descriptor;
      }

      @java.lang.Override
      public net.xlfe.reticul8.Reticul8.RPC_RESULT getDefaultInstanceForType() {
        return net.xlfe.reticul8.Reticul8.RPC_RESULT.getDefaultInstance();
      }

      @java.lang.Override
      public net.xlfe.reticul8.Reticul8.RPC_RESULT build() {
        net.xlfe.reticul8.Reticul8.RPC_RESULT result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public net.xlfe.reticul8.Reticul8.RPC_RESULT buildPartial() {
        net.xlfe.reticul8.Reticul8.RPC_RESULT result = new net.xlfe.reticul8.Reticul8.RPC_RESULT(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.result_ = result_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.pinValue_ = pinValue_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.msgId_ = msgId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.xlfe.reticul8.Reticul8.RPC_RESULT) {
          return mergeFrom((net.xlfe.reticul8.Reticul8.RPC_RESULT)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(net.xlfe.reticul8.Reticul8.RPC_RESULT other) {
        if (other == net.xlfe.reticul8.Reticul8.RPC_RESULT.getDefaultInstance()) return this;
        if (other.hasResult()) {
          setResult(other.getResult());
        }
        if (other.hasPinValue()) {
          setPinValue(other.getPinValue());
        }
        if (other.hasMsgId()) {
          setMsgId(other.getMsgId());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasResult()) {
          return false;
        }
        if (!hasMsgId()) {
          return false;
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        net.xlfe.reticul8.Reticul8.RPC_RESULT parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (net.xlfe.reticul8.Reticul8.RPC_RESULT) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int result_ = 1;
      /**
       * <code>required .RESULT_TYPE result = 1;</code>
       */
      public boolean hasResult() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .RESULT_TYPE result = 1;</code>
       */
      public net.xlfe.reticul8.Reticul8.RESULT_TYPE getResult() {
        @SuppressWarnings("deprecation")
        net.xlfe.reticul8.Reticul8.RESULT_TYPE result = net.xlfe.reticul8.Reticul8.RESULT_TYPE.valueOf(result_);
        return result == null ? net.xlfe.reticul8.Reticul8.RESULT_TYPE.RT_UNKNOWN : result;
      }
      /**
       * <code>required .RESULT_TYPE result = 1;</code>
       */
      public Builder setResult(net.xlfe.reticul8.Reticul8.RESULT_TYPE value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        result_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>required .RESULT_TYPE result = 1;</code>
       */
      public Builder clearResult() {
        bitField0_ = (bitField0_ & ~0x00000001);
        result_ = 1;
        onChanged();
        return this;
      }

      private int pinValue_ = 0;
      /**
       * <code>optional .PIN_VALUE pin_value = 2;</code>
       */
      public boolean hasPinValue() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .PIN_VALUE pin_value = 2;</code>
       */
      public net.xlfe.reticul8.Reticul8.PIN_VALUE getPinValue() {
        @SuppressWarnings("deprecation")
        net.xlfe.reticul8.Reticul8.PIN_VALUE result = net.xlfe.reticul8.Reticul8.PIN_VALUE.valueOf(pinValue_);
        return result == null ? net.xlfe.reticul8.Reticul8.PIN_VALUE.PV_LOW : result;
      }
      /**
       * <code>optional .PIN_VALUE pin_value = 2;</code>
       */
      public Builder setPinValue(net.xlfe.reticul8.Reticul8.PIN_VALUE value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        pinValue_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .PIN_VALUE pin_value = 2;</code>
       */
      public Builder clearPinValue() {
        bitField0_ = (bitField0_ & ~0x00000002);
        pinValue_ = 0;
        onChanged();
        return this;
      }

      private int msgId_ ;
      /**
       * <code>required fixed32 msg_id = 200;</code>
       */
      public boolean hasMsgId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required fixed32 msg_id = 200;</code>
       */
      public int getMsgId() {
        return msgId_;
      }
      /**
       * <code>required fixed32 msg_id = 200;</code>
       */
      public Builder setMsgId(int value) {
        bitField0_ |= 0x00000004;
        msgId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required fixed32 msg_id = 200;</code>
       */
      public Builder clearMsgId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        msgId_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:RPC_RESULT)
    }

    // @@protoc_insertion_point(class_scope:RPC_RESULT)
    private static final net.xlfe.reticul8.Reticul8.RPC_RESULT DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new net.xlfe.reticul8.Reticul8.RPC_RESULT();
    }

    public static net.xlfe.reticul8.Reticul8.RPC_RESULT getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<RPC_RESULT>
        PARSER = new com.google.protobuf.AbstractParser<RPC_RESULT>() {
      @java.lang.Override
      public RPC_RESULT parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RPC_RESULT(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RPC_RESULT> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RPC_RESULT> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public net.xlfe.reticul8.Reticul8.RPC_RESULT getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface FROM_MICROOrBuilder extends
      // @@protoc_insertion_point(interface_extends:FROM_MICRO)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .RPC_RESULT result = 1;</code>
     */
    boolean hasResult();
    /**
     * <code>optional .RPC_RESULT result = 1;</code>
     */
    net.xlfe.reticul8.Reticul8.RPC_RESULT getResult();
    /**
     * <code>optional .RPC_RESULT result = 1;</code>
     */
    net.xlfe.reticul8.Reticul8.RPC_RESULTOrBuilder getResultOrBuilder();

    /**
     * <code>optional .PIN_CHANGE pin_change = 2;</code>
     */
    boolean hasPinChange();
    /**
     * <code>optional .PIN_CHANGE pin_change = 2;</code>
     */
    net.xlfe.reticul8.Reticul8.PIN_CHANGE getPinChange();
    /**
     * <code>optional .PIN_CHANGE pin_change = 2;</code>
     */
    net.xlfe.reticul8.Reticul8.PIN_CHANGEOrBuilder getPinChangeOrBuilder();

    /**
     * <code>optional .STARTUP_REASON startup = 3;</code>
     */
    boolean hasStartup();
    /**
     * <code>optional .STARTUP_REASON startup = 3;</code>
     */
    net.xlfe.reticul8.Reticul8.STARTUP_REASON getStartup();

    /**
     * <code>optional bytes raw = 200 [(.nanopb) = { ... }</code>
     */
    boolean hasRaw();
    /**
     * <code>optional bytes raw = 200 [(.nanopb) = { ... }</code>
     */
    com.google.protobuf.ByteString getRaw();

    /**
     * <code>optional sfixed32 schedules_remaining = 201;</code>
     */
    boolean hasSchedulesRemaining();
    /**
     * <code>optional sfixed32 schedules_remaining = 201;</code>
     */
    int getSchedulesRemaining();

    /**
     * <code>required fixed32 heap_usage = 21;</code>
     */
    boolean hasHeapUsage();
    /**
     * <code>required fixed32 heap_usage = 21;</code>
     */
    int getHeapUsage();

    /**
     * <code>required fixed32 uptime_ms = 22;</code>
     */
    boolean hasUptimeMs();
    /**
     * <code>required fixed32 uptime_ms = 22;</code>
     */
    int getUptimeMs();

    public net.xlfe.reticul8.Reticul8.FROM_MICRO.MsgCase getMsgCase();

    public net.xlfe.reticul8.Reticul8.FROM_MICRO.DataCase getDataCase();
  }
  /**
   * Protobuf type {@code FROM_MICRO}
   */
  public  static final class FROM_MICRO extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:FROM_MICRO)
      FROM_MICROOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use FROM_MICRO.newBuilder() to construct.
    private FROM_MICRO(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private FROM_MICRO() {
      heapUsage_ = 0;
      uptimeMs_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private FROM_MICRO(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              net.xlfe.reticul8.Reticul8.RPC_RESULT.Builder subBuilder = null;
              if (msgCase_ == 1) {
                subBuilder = ((net.xlfe.reticul8.Reticul8.RPC_RESULT) msg_).toBuilder();
              }
              msg_ =
                  input.readMessage(net.xlfe.reticul8.Reticul8.RPC_RESULT.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((net.xlfe.reticul8.Reticul8.RPC_RESULT) msg_);
                msg_ = subBuilder.buildPartial();
              }
              msgCase_ = 1;
              break;
            }
            case 18: {
              net.xlfe.reticul8.Reticul8.PIN_CHANGE.Builder subBuilder = null;
              if (msgCase_ == 2) {
                subBuilder = ((net.xlfe.reticul8.Reticul8.PIN_CHANGE) msg_).toBuilder();
              }
              msg_ =
                  input.readMessage(net.xlfe.reticul8.Reticul8.PIN_CHANGE.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((net.xlfe.reticul8.Reticul8.PIN_CHANGE) msg_);
                msg_ = subBuilder.buildPartial();
              }
              msgCase_ = 2;
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
              @SuppressWarnings("deprecation")
              net.xlfe.reticul8.Reticul8.STARTUP_REASON value = net.xlfe.reticul8.Reticul8.STARTUP_REASON.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(3, rawValue);
              } else {
                msgCase_ = 3;
                msg_ = rawValue;
              }
              break;
            }
            case 173: {
              bitField0_ |= 0x00000020;
              heapUsage_ = input.readFixed32();
              break;
            }
            case 181: {
              bitField0_ |= 0x00000040;
              uptimeMs_ = input.readFixed32();
              break;
            }
            case 1602: {
              dataCase_ = 200;
              data_ = input.readBytes();
              break;
            }
            case 1613: {
              dataCase_ = 201;
              data_ = input.readSFixed32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.xlfe.reticul8.Reticul8.internal_static_FROM_MICRO_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.xlfe.reticul8.Reticul8.internal_static_FROM_MICRO_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              net.xlfe.reticul8.Reticul8.FROM_MICRO.class, net.xlfe.reticul8.Reticul8.FROM_MICRO.Builder.class);
    }

    private int bitField0_;
    private int msgCase_ = 0;
    private java.lang.Object msg_;
    public enum MsgCase
        implements com.google.protobuf.Internal.EnumLite {
      RESULT(1),
      PIN_CHANGE(2),
      STARTUP(3),
      MSG_NOT_SET(0);
      private final int value;
      private MsgCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static MsgCase valueOf(int value) {
        return forNumber(value);
      }

      public static MsgCase forNumber(int value) {
        switch (value) {
          case 1: return RESULT;
          case 2: return PIN_CHANGE;
          case 3: return STARTUP;
          case 0: return MSG_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public MsgCase
    getMsgCase() {
      return MsgCase.forNumber(
          msgCase_);
    }

    private int dataCase_ = 0;
    private java.lang.Object data_;
    public enum DataCase
        implements com.google.protobuf.Internal.EnumLite {
      RAW(200),
      SCHEDULES_REMAINING(201),
      DATA_NOT_SET(0);
      private final int value;
      private DataCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static DataCase valueOf(int value) {
        return forNumber(value);
      }

      public static DataCase forNumber(int value) {
        switch (value) {
          case 200: return RAW;
          case 201: return SCHEDULES_REMAINING;
          case 0: return DATA_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public DataCase
    getDataCase() {
      return DataCase.forNumber(
          dataCase_);
    }

    public static final int RESULT_FIELD_NUMBER = 1;
    /**
     * <code>optional .RPC_RESULT result = 1;</code>
     */
    public boolean hasResult() {
      return msgCase_ == 1;
    }
    /**
     * <code>optional .RPC_RESULT result = 1;</code>
     */
    public net.xlfe.reticul8.Reticul8.RPC_RESULT getResult() {
      if (msgCase_ == 1) {
         return (net.xlfe.reticul8.Reticul8.RPC_RESULT) msg_;
      }
      return net.xlfe.reticul8.Reticul8.RPC_RESULT.getDefaultInstance();
    }
    /**
     * <code>optional .RPC_RESULT result = 1;</code>
     */
    public net.xlfe.reticul8.Reticul8.RPC_RESULTOrBuilder getResultOrBuilder() {
      if (msgCase_ == 1) {
         return (net.xlfe.reticul8.Reticul8.RPC_RESULT) msg_;
      }
      return net.xlfe.reticul8.Reticul8.RPC_RESULT.getDefaultInstance();
    }

    public static final int PIN_CHANGE_FIELD_NUMBER = 2;
    /**
     * <code>optional .PIN_CHANGE pin_change = 2;</code>
     */
    public boolean hasPinChange() {
      return msgCase_ == 2;
    }
    /**
     * <code>optional .PIN_CHANGE pin_change = 2;</code>
     */
    public net.xlfe.reticul8.Reticul8.PIN_CHANGE getPinChange() {
      if (msgCase_ == 2) {
         return (net.xlfe.reticul8.Reticul8.PIN_CHANGE) msg_;
      }
      return net.xlfe.reticul8.Reticul8.PIN_CHANGE.getDefaultInstance();
    }
    /**
     * <code>optional .PIN_CHANGE pin_change = 2;</code>
     */
    public net.xlfe.reticul8.Reticul8.PIN_CHANGEOrBuilder getPinChangeOrBuilder() {
      if (msgCase_ == 2) {
         return (net.xlfe.reticul8.Reticul8.PIN_CHANGE) msg_;
      }
      return net.xlfe.reticul8.Reticul8.PIN_CHANGE.getDefaultInstance();
    }

    public static final int STARTUP_FIELD_NUMBER = 3;
    /**
     * <code>optional .STARTUP_REASON startup = 3;</code>
     */
    public boolean hasStartup() {
      return msgCase_ == 3;
    }
    /**
     * <code>optional .STARTUP_REASON startup = 3;</code>
     */
    public net.xlfe.reticul8.Reticul8.STARTUP_REASON getStartup() {
      if (msgCase_ == 3) {
        @SuppressWarnings("deprecation")
        net.xlfe.reticul8.Reticul8.STARTUP_REASON result = net.xlfe.reticul8.Reticul8.STARTUP_REASON.valueOf(
            (java.lang.Integer) msg_);
        return result == null ? net.xlfe.reticul8.Reticul8.STARTUP_REASON.SR_UNKNOWN : result;
      }
      return net.xlfe.reticul8.Reticul8.STARTUP_REASON.SR_UNKNOWN;
    }

    public static final int RAW_FIELD_NUMBER = 200;
    /**
     * <code>optional bytes raw = 200 [(.nanopb) = { ... }</code>
     */
    public boolean hasRaw() {
      return dataCase_ == 200;
    }
    /**
     * <code>optional bytes raw = 200 [(.nanopb) = { ... }</code>
     */
    public com.google.protobuf.ByteString getRaw() {
      if (dataCase_ == 200) {
        return (com.google.protobuf.ByteString) data_;
      }
      return com.google.protobuf.ByteString.EMPTY;
    }

    public static final int SCHEDULES_REMAINING_FIELD_NUMBER = 201;
    /**
     * <code>optional sfixed32 schedules_remaining = 201;</code>
     */
    public boolean hasSchedulesRemaining() {
      return dataCase_ == 201;
    }
    /**
     * <code>optional sfixed32 schedules_remaining = 201;</code>
     */
    public int getSchedulesRemaining() {
      if (dataCase_ == 201) {
        return (java.lang.Integer) data_;
      }
      return 0;
    }

    public static final int HEAP_USAGE_FIELD_NUMBER = 21;
    private int heapUsage_;
    /**
     * <code>required fixed32 heap_usage = 21;</code>
     */
    public boolean hasHeapUsage() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required fixed32 heap_usage = 21;</code>
     */
    public int getHeapUsage() {
      return heapUsage_;
    }

    public static final int UPTIME_MS_FIELD_NUMBER = 22;
    private int uptimeMs_;
    /**
     * <code>required fixed32 uptime_ms = 22;</code>
     */
    public boolean hasUptimeMs() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>required fixed32 uptime_ms = 22;</code>
     */
    public int getUptimeMs() {
      return uptimeMs_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasHeapUsage()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasUptimeMs()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasResult()) {
        if (!getResult().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasPinChange()) {
        if (!getPinChange().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (msgCase_ == 1) {
        output.writeMessage(1, (net.xlfe.reticul8.Reticul8.RPC_RESULT) msg_);
      }
      if (msgCase_ == 2) {
        output.writeMessage(2, (net.xlfe.reticul8.Reticul8.PIN_CHANGE) msg_);
      }
      if (msgCase_ == 3) {
        output.writeEnum(3, ((java.lang.Integer) msg_));
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeFixed32(21, heapUsage_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeFixed32(22, uptimeMs_);
      }
      if (dataCase_ == 200) {
        output.writeBytes(
            200, (com.google.protobuf.ByteString) data_);
      }
      if (dataCase_ == 201) {
        output.writeSFixed32(
            201, (int)((java.lang.Integer) data_));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (msgCase_ == 1) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, (net.xlfe.reticul8.Reticul8.RPC_RESULT) msg_);
      }
      if (msgCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, (net.xlfe.reticul8.Reticul8.PIN_CHANGE) msg_);
      }
      if (msgCase_ == 3) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, ((java.lang.Integer) msg_));
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(21, heapUsage_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(22, uptimeMs_);
      }
      if (dataCase_ == 200) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(
              200, (com.google.protobuf.ByteString) data_);
      }
      if (dataCase_ == 201) {
        size += com.google.protobuf.CodedOutputStream
          .computeSFixed32Size(
              201, (int)((java.lang.Integer) data_));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof net.xlfe.reticul8.Reticul8.FROM_MICRO)) {
        return super.equals(obj);
      }
      net.xlfe.reticul8.Reticul8.FROM_MICRO other = (net.xlfe.reticul8.Reticul8.FROM_MICRO) obj;

      boolean result = true;
      result = result && (hasHeapUsage() == other.hasHeapUsage());
      if (hasHeapUsage()) {
        result = result && (getHeapUsage()
            == other.getHeapUsage());
      }
      result = result && (hasUptimeMs() == other.hasUptimeMs());
      if (hasUptimeMs()) {
        result = result && (getUptimeMs()
            == other.getUptimeMs());
      }
      result = result && getMsgCase().equals(
          other.getMsgCase());
      if (!result) return false;
      switch (msgCase_) {
        case 1:
          result = result && getResult()
              .equals(other.getResult());
          break;
        case 2:
          result = result && getPinChange()
              .equals(other.getPinChange());
          break;
        case 3:
          result = result && getStartup()
              .equals(other.getStartup());
          break;
        case 0:
        default:
      }
      result = result && getDataCase().equals(
          other.getDataCase());
      if (!result) return false;
      switch (dataCase_) {
        case 200:
          result = result && getRaw()
              .equals(other.getRaw());
          break;
        case 201:
          result = result && (getSchedulesRemaining()
              == other.getSchedulesRemaining());
          break;
        case 0:
        default:
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasHeapUsage()) {
        hash = (37 * hash) + HEAP_USAGE_FIELD_NUMBER;
        hash = (53 * hash) + getHeapUsage();
      }
      if (hasUptimeMs()) {
        hash = (37 * hash) + UPTIME_MS_FIELD_NUMBER;
        hash = (53 * hash) + getUptimeMs();
      }
      switch (msgCase_) {
        case 1:
          hash = (37 * hash) + RESULT_FIELD_NUMBER;
          hash = (53 * hash) + getResult().hashCode();
          break;
        case 2:
          hash = (37 * hash) + PIN_CHANGE_FIELD_NUMBER;
          hash = (53 * hash) + getPinChange().hashCode();
          break;
        case 3:
          hash = (37 * hash) + STARTUP_FIELD_NUMBER;
          hash = (53 * hash) + getStartup().getNumber();
          break;
        case 0:
        default:
      }
      switch (dataCase_) {
        case 200:
          hash = (37 * hash) + RAW_FIELD_NUMBER;
          hash = (53 * hash) + getRaw().hashCode();
          break;
        case 201:
          hash = (37 * hash) + SCHEDULES_REMAINING_FIELD_NUMBER;
          hash = (53 * hash) + getSchedulesRemaining();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static net.xlfe.reticul8.Reticul8.FROM_MICRO parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.xlfe.reticul8.Reticul8.FROM_MICRO parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.xlfe.reticul8.Reticul8.FROM_MICRO parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.xlfe.reticul8.Reticul8.FROM_MICRO parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.xlfe.reticul8.Reticul8.FROM_MICRO parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.xlfe.reticul8.Reticul8.FROM_MICRO parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.xlfe.reticul8.Reticul8.FROM_MICRO parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.xlfe.reticul8.Reticul8.FROM_MICRO parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.xlfe.reticul8.Reticul8.FROM_MICRO parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static net.xlfe.reticul8.Reticul8.FROM_MICRO parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.xlfe.reticul8.Reticul8.FROM_MICRO parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.xlfe.reticul8.Reticul8.FROM_MICRO parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(net.xlfe.reticul8.Reticul8.FROM_MICRO prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code FROM_MICRO}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:FROM_MICRO)
        net.xlfe.reticul8.Reticul8.FROM_MICROOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.xlfe.reticul8.Reticul8.internal_static_FROM_MICRO_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.xlfe.reticul8.Reticul8.internal_static_FROM_MICRO_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                net.xlfe.reticul8.Reticul8.FROM_MICRO.class, net.xlfe.reticul8.Reticul8.FROM_MICRO.Builder.class);
      }

      // Construct using net.xlfe.reticul8.Reticul8.FROM_MICRO.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        heapUsage_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        uptimeMs_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        msgCase_ = 0;
        msg_ = null;
        dataCase_ = 0;
        data_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.xlfe.reticul8.Reticul8.internal_static_FROM_MICRO_descriptor;
      }

      @java.lang.Override
      public net.xlfe.reticul8.Reticul8.FROM_MICRO getDefaultInstanceForType() {
        return net.xlfe.reticul8.Reticul8.FROM_MICRO.getDefaultInstance();
      }

      @java.lang.Override
      public net.xlfe.reticul8.Reticul8.FROM_MICRO build() {
        net.xlfe.reticul8.Reticul8.FROM_MICRO result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public net.xlfe.reticul8.Reticul8.FROM_MICRO buildPartial() {
        net.xlfe.reticul8.Reticul8.FROM_MICRO result = new net.xlfe.reticul8.Reticul8.FROM_MICRO(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (msgCase_ == 1) {
          if (resultBuilder_ == null) {
            result.msg_ = msg_;
          } else {
            result.msg_ = resultBuilder_.build();
          }
        }
        if (msgCase_ == 2) {
          if (pinChangeBuilder_ == null) {
            result.msg_ = msg_;
          } else {
            result.msg_ = pinChangeBuilder_.build();
          }
        }
        if (msgCase_ == 3) {
          result.msg_ = msg_;
        }
        if (dataCase_ == 200) {
          result.data_ = data_;
        }
        if (dataCase_ == 201) {
          result.data_ = data_;
        }
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.heapUsage_ = heapUsage_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.uptimeMs_ = uptimeMs_;
        result.bitField0_ = to_bitField0_;
        result.msgCase_ = msgCase_;
        result.dataCase_ = dataCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.xlfe.reticul8.Reticul8.FROM_MICRO) {
          return mergeFrom((net.xlfe.reticul8.Reticul8.FROM_MICRO)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(net.xlfe.reticul8.Reticul8.FROM_MICRO other) {
        if (other == net.xlfe.reticul8.Reticul8.FROM_MICRO.getDefaultInstance()) return this;
        if (other.hasHeapUsage()) {
          setHeapUsage(other.getHeapUsage());
        }
        if (other.hasUptimeMs()) {
          setUptimeMs(other.getUptimeMs());
        }
        switch (other.getMsgCase()) {
          case RESULT: {
            mergeResult(other.getResult());
            break;
          }
          case PIN_CHANGE: {
            mergePinChange(other.getPinChange());
            break;
          }
          case STARTUP: {
            setStartup(other.getStartup());
            break;
          }
          case MSG_NOT_SET: {
            break;
          }
        }
        switch (other.getDataCase()) {
          case RAW: {
            setRaw(other.getRaw());
            break;
          }
          case SCHEDULES_REMAINING: {
            setSchedulesRemaining(other.getSchedulesRemaining());
            break;
          }
          case DATA_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasHeapUsage()) {
          return false;
        }
        if (!hasUptimeMs()) {
          return false;
        }
        if (hasResult()) {
          if (!getResult().isInitialized()) {
            return false;
          }
        }
        if (hasPinChange()) {
          if (!getPinChange().isInitialized()) {
            return false;
          }
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        net.xlfe.reticul8.Reticul8.FROM_MICRO parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (net.xlfe.reticul8.Reticul8.FROM_MICRO) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int msgCase_ = 0;
      private java.lang.Object msg_;
      public MsgCase
          getMsgCase() {
        return MsgCase.forNumber(
            msgCase_);
      }

      public Builder clearMsg() {
        msgCase_ = 0;
        msg_ = null;
        onChanged();
        return this;
      }

      private int dataCase_ = 0;
      private java.lang.Object data_;
      public DataCase
          getDataCase() {
        return DataCase.forNumber(
            dataCase_);
      }

      public Builder clearData() {
        dataCase_ = 0;
        data_ = null;
        onChanged();
        return this;
      }

      private int bitField0_;

      private com.google.protobuf.SingleFieldBuilderV3<
          net.xlfe.reticul8.Reticul8.RPC_RESULT, net.xlfe.reticul8.Reticul8.RPC_RESULT.Builder, net.xlfe.reticul8.Reticul8.RPC_RESULTOrBuilder> resultBuilder_;
      /**
       * <code>optional .RPC_RESULT result = 1;</code>
       */
      public boolean hasResult() {
        return msgCase_ == 1;
      }
      /**
       * <code>optional .RPC_RESULT result = 1;</code>
       */
      public net.xlfe.reticul8.Reticul8.RPC_RESULT getResult() {
        if (resultBuilder_ == null) {
          if (msgCase_ == 1) {
            return (net.xlfe.reticul8.Reticul8.RPC_RESULT) msg_;
          }
          return net.xlfe.reticul8.Reticul8.RPC_RESULT.getDefaultInstance();
        } else {
          if (msgCase_ == 1) {
            return resultBuilder_.getMessage();
          }
          return net.xlfe.reticul8.Reticul8.RPC_RESULT.getDefaultInstance();
        }
      }
      /**
       * <code>optional .RPC_RESULT result = 1;</code>
       */
      public Builder setResult(net.xlfe.reticul8.Reticul8.RPC_RESULT value) {
        if (resultBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          msg_ = value;
          onChanged();
        } else {
          resultBuilder_.setMessage(value);
        }
        msgCase_ = 1;
        return this;
      }
      /**
       * <code>optional .RPC_RESULT result = 1;</code>
       */
      public Builder setResult(
          net.xlfe.reticul8.Reticul8.RPC_RESULT.Builder builderForValue) {
        if (resultBuilder_ == null) {
          msg_ = builderForValue.build();
          onChanged();
        } else {
          resultBuilder_.setMessage(builderForValue.build());
        }
        msgCase_ = 1;
        return this;
      }
      /**
       * <code>optional .RPC_RESULT result = 1;</code>
       */
      public Builder mergeResult(net.xlfe.reticul8.Reticul8.RPC_RESULT value) {
        if (resultBuilder_ == null) {
          if (msgCase_ == 1 &&
              msg_ != net.xlfe.reticul8.Reticul8.RPC_RESULT.getDefaultInstance()) {
            msg_ = net.xlfe.reticul8.Reticul8.RPC_RESULT.newBuilder((net.xlfe.reticul8.Reticul8.RPC_RESULT) msg_)
                .mergeFrom(value).buildPartial();
          } else {
            msg_ = value;
          }
          onChanged();
        } else {
          if (msgCase_ == 1) {
            resultBuilder_.mergeFrom(value);
          }
          resultBuilder_.setMessage(value);
        }
        msgCase_ = 1;
        return this;
      }
      /**
       * <code>optional .RPC_RESULT result = 1;</code>
       */
      public Builder clearResult() {
        if (resultBuilder_ == null) {
          if (msgCase_ == 1) {
            msgCase_ = 0;
            msg_ = null;
            onChanged();
          }
        } else {
          if (msgCase_ == 1) {
            msgCase_ = 0;
            msg_ = null;
          }
          resultBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>optional .RPC_RESULT result = 1;</code>
       */
      public net.xlfe.reticul8.Reticul8.RPC_RESULT.Builder getResultBuilder() {
        return getResultFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .RPC_RESULT result = 1;</code>
       */
      public net.xlfe.reticul8.Reticul8.RPC_RESULTOrBuilder getResultOrBuilder() {
        if ((msgCase_ == 1) && (resultBuilder_ != null)) {
          return resultBuilder_.getMessageOrBuilder();
        } else {
          if (msgCase_ == 1) {
            return (net.xlfe.reticul8.Reticul8.RPC_RESULT) msg_;
          }
          return net.xlfe.reticul8.Reticul8.RPC_RESULT.getDefaultInstance();
        }
      }
      /**
       * <code>optional .RPC_RESULT result = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          net.xlfe.reticul8.Reticul8.RPC_RESULT, net.xlfe.reticul8.Reticul8.RPC_RESULT.Builder, net.xlfe.reticul8.Reticul8.RPC_RESULTOrBuilder> 
          getResultFieldBuilder() {
        if (resultBuilder_ == null) {
          if (!(msgCase_ == 1)) {
            msg_ = net.xlfe.reticul8.Reticul8.RPC_RESULT.getDefaultInstance();
          }
          resultBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              net.xlfe.reticul8.Reticul8.RPC_RESULT, net.xlfe.reticul8.Reticul8.RPC_RESULT.Builder, net.xlfe.reticul8.Reticul8.RPC_RESULTOrBuilder>(
                  (net.xlfe.reticul8.Reticul8.RPC_RESULT) msg_,
                  getParentForChildren(),
                  isClean());
          msg_ = null;
        }
        msgCase_ = 1;
        onChanged();;
        return resultBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          net.xlfe.reticul8.Reticul8.PIN_CHANGE, net.xlfe.reticul8.Reticul8.PIN_CHANGE.Builder, net.xlfe.reticul8.Reticul8.PIN_CHANGEOrBuilder> pinChangeBuilder_;
      /**
       * <code>optional .PIN_CHANGE pin_change = 2;</code>
       */
      public boolean hasPinChange() {
        return msgCase_ == 2;
      }
      /**
       * <code>optional .PIN_CHANGE pin_change = 2;</code>
       */
      public net.xlfe.reticul8.Reticul8.PIN_CHANGE getPinChange() {
        if (pinChangeBuilder_ == null) {
          if (msgCase_ == 2) {
            return (net.xlfe.reticul8.Reticul8.PIN_CHANGE) msg_;
          }
          return net.xlfe.reticul8.Reticul8.PIN_CHANGE.getDefaultInstance();
        } else {
          if (msgCase_ == 2) {
            return pinChangeBuilder_.getMessage();
          }
          return net.xlfe.reticul8.Reticul8.PIN_CHANGE.getDefaultInstance();
        }
      }
      /**
       * <code>optional .PIN_CHANGE pin_change = 2;</code>
       */
      public Builder setPinChange(net.xlfe.reticul8.Reticul8.PIN_CHANGE value) {
        if (pinChangeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          msg_ = value;
          onChanged();
        } else {
          pinChangeBuilder_.setMessage(value);
        }
        msgCase_ = 2;
        return this;
      }
      /**
       * <code>optional .PIN_CHANGE pin_change = 2;</code>
       */
      public Builder setPinChange(
          net.xlfe.reticul8.Reticul8.PIN_CHANGE.Builder builderForValue) {
        if (pinChangeBuilder_ == null) {
          msg_ = builderForValue.build();
          onChanged();
        } else {
          pinChangeBuilder_.setMessage(builderForValue.build());
        }
        msgCase_ = 2;
        return this;
      }
      /**
       * <code>optional .PIN_CHANGE pin_change = 2;</code>
       */
      public Builder mergePinChange(net.xlfe.reticul8.Reticul8.PIN_CHANGE value) {
        if (pinChangeBuilder_ == null) {
          if (msgCase_ == 2 &&
              msg_ != net.xlfe.reticul8.Reticul8.PIN_CHANGE.getDefaultInstance()) {
            msg_ = net.xlfe.reticul8.Reticul8.PIN_CHANGE.newBuilder((net.xlfe.reticul8.Reticul8.PIN_CHANGE) msg_)
                .mergeFrom(value).buildPartial();
          } else {
            msg_ = value;
          }
          onChanged();
        } else {
          if (msgCase_ == 2) {
            pinChangeBuilder_.mergeFrom(value);
          }
          pinChangeBuilder_.setMessage(value);
        }
        msgCase_ = 2;
        return this;
      }
      /**
       * <code>optional .PIN_CHANGE pin_change = 2;</code>
       */
      public Builder clearPinChange() {
        if (pinChangeBuilder_ == null) {
          if (msgCase_ == 2) {
            msgCase_ = 0;
            msg_ = null;
            onChanged();
          }
        } else {
          if (msgCase_ == 2) {
            msgCase_ = 0;
            msg_ = null;
          }
          pinChangeBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>optional .PIN_CHANGE pin_change = 2;</code>
       */
      public net.xlfe.reticul8.Reticul8.PIN_CHANGE.Builder getPinChangeBuilder() {
        return getPinChangeFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .PIN_CHANGE pin_change = 2;</code>
       */
      public net.xlfe.reticul8.Reticul8.PIN_CHANGEOrBuilder getPinChangeOrBuilder() {
        if ((msgCase_ == 2) && (pinChangeBuilder_ != null)) {
          return pinChangeBuilder_.getMessageOrBuilder();
        } else {
          if (msgCase_ == 2) {
            return (net.xlfe.reticul8.Reticul8.PIN_CHANGE) msg_;
          }
          return net.xlfe.reticul8.Reticul8.PIN_CHANGE.getDefaultInstance();
        }
      }
      /**
       * <code>optional .PIN_CHANGE pin_change = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          net.xlfe.reticul8.Reticul8.PIN_CHANGE, net.xlfe.reticul8.Reticul8.PIN_CHANGE.Builder, net.xlfe.reticul8.Reticul8.PIN_CHANGEOrBuilder> 
          getPinChangeFieldBuilder() {
        if (pinChangeBuilder_ == null) {
          if (!(msgCase_ == 2)) {
            msg_ = net.xlfe.reticul8.Reticul8.PIN_CHANGE.getDefaultInstance();
          }
          pinChangeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              net.xlfe.reticul8.Reticul8.PIN_CHANGE, net.xlfe.reticul8.Reticul8.PIN_CHANGE.Builder, net.xlfe.reticul8.Reticul8.PIN_CHANGEOrBuilder>(
                  (net.xlfe.reticul8.Reticul8.PIN_CHANGE) msg_,
                  getParentForChildren(),
                  isClean());
          msg_ = null;
        }
        msgCase_ = 2;
        onChanged();;
        return pinChangeBuilder_;
      }

      /**
       * <code>optional .STARTUP_REASON startup = 3;</code>
       */
      public boolean hasStartup() {
        return msgCase_ == 3;
      }
      /**
       * <code>optional .STARTUP_REASON startup = 3;</code>
       */
      public net.xlfe.reticul8.Reticul8.STARTUP_REASON getStartup() {
        if (msgCase_ == 3) {
          @SuppressWarnings("deprecation")
          net.xlfe.reticul8.Reticul8.STARTUP_REASON result = net.xlfe.reticul8.Reticul8.STARTUP_REASON.valueOf(
              (java.lang.Integer) msg_);
          return result == null ? net.xlfe.reticul8.Reticul8.STARTUP_REASON.SR_UNKNOWN : result;
        }
        return net.xlfe.reticul8.Reticul8.STARTUP_REASON.SR_UNKNOWN;
      }
      /**
       * <code>optional .STARTUP_REASON startup = 3;</code>
       */
      public Builder setStartup(net.xlfe.reticul8.Reticul8.STARTUP_REASON value) {
        if (value == null) {
          throw new NullPointerException();
        }
        msgCase_ = 3;
        msg_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .STARTUP_REASON startup = 3;</code>
       */
      public Builder clearStartup() {
        if (msgCase_ == 3) {
          msgCase_ = 0;
          msg_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <code>optional bytes raw = 200 [(.nanopb) = { ... }</code>
       */
      public boolean hasRaw() {
        return dataCase_ == 200;
      }
      /**
       * <code>optional bytes raw = 200 [(.nanopb) = { ... }</code>
       */
      public com.google.protobuf.ByteString getRaw() {
        if (dataCase_ == 200) {
          return (com.google.protobuf.ByteString) data_;
        }
        return com.google.protobuf.ByteString.EMPTY;
      }
      /**
       * <code>optional bytes raw = 200 [(.nanopb) = { ... }</code>
       */
      public Builder setRaw(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  dataCase_ = 200;
        data_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes raw = 200 [(.nanopb) = { ... }</code>
       */
      public Builder clearRaw() {
        if (dataCase_ == 200) {
          dataCase_ = 0;
          data_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <code>optional sfixed32 schedules_remaining = 201;</code>
       */
      public boolean hasSchedulesRemaining() {
        return dataCase_ == 201;
      }
      /**
       * <code>optional sfixed32 schedules_remaining = 201;</code>
       */
      public int getSchedulesRemaining() {
        if (dataCase_ == 201) {
          return (java.lang.Integer) data_;
        }
        return 0;
      }
      /**
       * <code>optional sfixed32 schedules_remaining = 201;</code>
       */
      public Builder setSchedulesRemaining(int value) {
        dataCase_ = 201;
        data_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sfixed32 schedules_remaining = 201;</code>
       */
      public Builder clearSchedulesRemaining() {
        if (dataCase_ == 201) {
          dataCase_ = 0;
          data_ = null;
          onChanged();
        }
        return this;
      }

      private int heapUsage_ ;
      /**
       * <code>required fixed32 heap_usage = 21;</code>
       */
      public boolean hasHeapUsage() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required fixed32 heap_usage = 21;</code>
       */
      public int getHeapUsage() {
        return heapUsage_;
      }
      /**
       * <code>required fixed32 heap_usage = 21;</code>
       */
      public Builder setHeapUsage(int value) {
        bitField0_ |= 0x00000020;
        heapUsage_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required fixed32 heap_usage = 21;</code>
       */
      public Builder clearHeapUsage() {
        bitField0_ = (bitField0_ & ~0x00000020);
        heapUsage_ = 0;
        onChanged();
        return this;
      }

      private int uptimeMs_ ;
      /**
       * <code>required fixed32 uptime_ms = 22;</code>
       */
      public boolean hasUptimeMs() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>required fixed32 uptime_ms = 22;</code>
       */
      public int getUptimeMs() {
        return uptimeMs_;
      }
      /**
       * <code>required fixed32 uptime_ms = 22;</code>
       */
      public Builder setUptimeMs(int value) {
        bitField0_ |= 0x00000040;
        uptimeMs_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required fixed32 uptime_ms = 22;</code>
       */
      public Builder clearUptimeMs() {
        bitField0_ = (bitField0_ & ~0x00000040);
        uptimeMs_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:FROM_MICRO)
    }

    // @@protoc_insertion_point(class_scope:FROM_MICRO)
    private static final net.xlfe.reticul8.Reticul8.FROM_MICRO DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new net.xlfe.reticul8.Reticul8.FROM_MICRO();
    }

    public static net.xlfe.reticul8.Reticul8.FROM_MICRO getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<FROM_MICRO>
        PARSER = new com.google.protobuf.AbstractParser<FROM_MICRO>() {
      @java.lang.Override
      public FROM_MICRO parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FROM_MICRO(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<FROM_MICRO> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<FROM_MICRO> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public net.xlfe.reticul8.Reticul8.FROM_MICRO getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_GPIO_CONFIG_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_GPIO_CONFIG_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_GPIO_MONITOR_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_GPIO_MONITOR_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_GPIO_WRITE_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_GPIO_WRITE_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_GPIO_READ_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_GPIO_READ_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_OTA_UPDATE_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_OTA_UPDATE_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_PWM_CONFIG_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_PWM_CONFIG_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_PWM_STOP_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_PWM_STOP_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_PWM_DUTY_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_PWM_DUTY_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_PWM_FADE_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_PWM_FADE_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_I2C_CONFIG_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_I2C_CONFIG_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_I2C_WRITE_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_I2C_WRITE_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_I2C_READ_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_I2C_READ_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_PING_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_PING_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_REBOOT_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_REBOOT_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SYSINFO_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_SYSINFO_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SCHEDULE_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_SCHEDULE_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_RUN_NESTED_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_RUN_NESTED_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_RPC_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_RPC_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_PIN_CHANGE_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_PIN_CHANGE_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_RPC_RESULT_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_RPC_RESULT_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_FROM_MICRO_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_FROM_MICRO_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\016reticul8.proto\032\014nanopb.proto\"3\n\013GPIO_C" +
      "ONFIG\022\013\n\003pin\030\001 \002(\007\022\027\n\004mode\030\002 \002(\0162\t.PIN_M" +
      "ODE\"0\n\014GPIO_MONITOR\022\013\n\003pin\030\001 \002(\007\022\023\n\013debo" +
      "unce_ms\030\002 \002(\007\"4\n\nGPIO_WRITE\022\013\n\003pin\030\001 \002(\007" +
      "\022\031\n\005value\030\002 \002(\0162\n.PIN_VALUE\"\030\n\tGPIO_READ" +
      "\022\013\n\003pin\030\001 \002(\007\"1\n\nOTA_UPDATE\022\r\n\005chunk\030\001 \002" +
      "(\007\022\024\n\004data\030\002 \002(\014B\006\222?\003\010\310\001\"\031\n\nPWM_CONFIG\022\013" +
      "\n\003pin\030\001 \002(\007\"\027\n\010PWM_STOP\022\013\n\003pin\030\001 \002(\007\"%\n\010" +
      "PWM_DUTY\022\013\n\003pin\030\001 \002(\007\022\014\n\004duty\030\002 \002(\007\"6\n\010P" +
      "WM_FADE\022\013\n\003pin\030\001 \002(\007\022\014\n\004duty\030\002 \002(\007\022\017\n\007fa" +
      "de_ms\030\003 \002(\007\".\n\nI2C_CONFIG\022\017\n\007pin_sda\030\001 \001" +
      "(\007\022\017\n\007pin_scl\030\002 \001(\007\"=\n\tI2C_WRITE\022\016\n\006devi" +
      "ce\030\001 \002(\007\022\013\n\003len\030\003 \002(\007\022\023\n\004data\030\004 \002(\014B\005\222?\002" +
      "\010 \"8\n\010I2C_READ\022\016\n\006device\030\001 \002(\007\022\017\n\007addres" +
      "s\030\002 \002(\007\022\013\n\003len\030\003 \002(\007\"\024\n\004PING\022\014\n\004ping\030\001 \002" +
      "(\010\"\030\n\006REBOOT\022\016\n\006reboot\030\001 \002(\010\"\032\n\007SYSINFO\022" +
      "\017\n\007sysinfo\030\001 \002(\010\"=\n\010SCHEDULE\022\r\n\005count\030\001 " +
      "\002(\017\022\020\n\010every_ms\030\002 \002(\007\022\020\n\010after_ms\030\003 \002(\007\"" +
      "\"\n\nRUN_NESTED\022\024\n\004data\030\003 \002(\014B\006\222?\003\010\304\001\"\300\004\n\003" +
      "RPC\022#\n\013gpio_config\030\001 \001(\0132\014.GPIO_CONFIGH\000" +
      "\022!\n\ngpio_write\030\002 \001(\0132\013.GPIO_WRITEH\000\022\037\n\tg" +
      "pio_read\030\003 \001(\0132\n.GPIO_READH\000\022%\n\014gpio_mon" +
      "itor\030\004 \001(\0132\r.GPIO_MONITORH\000\022!\n\npwm_confi" +
      "g\030\005 \001(\0132\013.PWM_CONFIGH\000\022\035\n\010pwm_duty\030\006 \001(\013" +
      "2\t.PWM_DUTYH\000\022\035\n\010pwm_fade\030\007 \001(\0132\t.PWM_FA" +
      "DEH\000\022\035\n\010pwm_stop\030\017 \001(\0132\t.PWM_STOPH\000\022\025\n\004p" +
      "ing\030\010 \001(\0132\005.PINGH\000\022\033\n\007sysinfo\030\t \001(\0132\010.SY" +
      "SINFOH\000\022\031\n\006reboot\030\020 \001(\0132\007.REBOOTH\000\022!\n\ni2" +
      "c_config\030\n \001(\0132\013.I2C_CONFIGH\000\022\037\n\ti2c_wri" +
      "te\030\013 \001(\0132\n.I2C_WRITEH\000\022\035\n\010i2c_read\030\014 \001(\013" +
      "2\t.I2C_READH\000\022!\n\nota_update\030\r \001(\0132\013.OTA_" +
      "UPDATEH\000\022\035\n\006nested\030\016 \001(\0132\013.RUN_NESTEDH\000\022" +
      "\017\n\006msg_id\030\310\001 \002(\007\022\034\n\010schedule\030\311\001 \001(\0132\t.SC" +
      "HEDULEB\006\n\004call\"4\n\nPIN_CHANGE\022\013\n\003pin\030\001 \002(" +
      "\007\022\031\n\005value\030\002 \002(\0162\n.PIN_VALUE\"Z\n\nRPC_RESU" +
      "LT\022\034\n\006result\030\001 \002(\0162\014.RESULT_TYPE\022\035\n\tpin_" +
      "value\030\002 \001(\0162\n.PIN_VALUE\022\017\n\006msg_id\030\310\001 \002(\007" +
      "\"\337\001\n\nFROM_MICRO\022\035\n\006result\030\001 \001(\0132\013.RPC_RE" +
      "SULTH\000\022!\n\npin_change\030\002 \001(\0132\013.PIN_CHANGEH" +
      "\000\022\"\n\007startup\030\003 \001(\0162\017.STARTUP_REASONH\000\022\025\n" +
      "\003raw\030\310\001 \001(\014B\005\222?\002\010@H\001\022\036\n\023schedules_remain" +
      "ing\030\311\001 \001(\017H\001\022\022\n\nheap_usage\030\025 \002(\007\022\021\n\tupti" +
      "me_ms\030\026 \002(\007B\005\n\003msgB\006\n\004data*E\n\010PIN_MODE\022\023" +
      "\n\017PM_INPUT_PULLUP\020\001\022\025\n\021PM_INPUT_PULLDOWN" +
      "\020\002\022\r\n\tPM_OUTPUT\020\003*$\n\tPIN_VALUE\022\n\n\006PV_LOW" +
      "\020\000\022\013\n\007PV_HIGH\020\001*;\n\013RESULT_TYPE\022\016\n\nRT_UNK" +
      "NOWN\020\001\022\016\n\nRT_SUCCESS\020\002\022\014\n\010RT_ERROR\020\003*\251\003\n" +
      "\016STARTUP_REASON\022\016\n\nSR_UNKNOWN\020\001\022\027\n\023ESP32" +
      "_POWERON_RESET\020\002\022\022\n\016ESP32_SW_RESET\020\003\022\024\n\020" +
      "ESP32_OWDT_RESET\020\004\022\031\n\025ESP32_DEEPSLEEP_RE" +
      "SET\020\005\022\024\n\020ESP32_SDIO_RESET\020\006\022\032\n\026ESP32_TG0" +
      "WDT_SYS_RESET\020\007\022\032\n\026ESP32_TG1WDT_SYS_RESE" +
      "T\020\010\022\032\n\026ESP32_RTCWDT_SYS_RESET\020\t\022\031\n\025ESP32" +
      "_INTRUSION_RESET\020\n\022\031\n\025ESP32_TGWDT_CPU_RE" +
      "SET\020\013\022\026\n\022ESP32_SW_CPU_RESET\020\014\022\032\n\026ESP32_R" +
      "TCWDT_CPU_RESET\020\r\022\027\n\023ESP32_EXT_CPU_RESET" +
      "\020\016\022 \n\034ESP32_RTCWDT_BROWN_OUT_RESET\020\017\022\032\n\026" +
      "ESP32_RTCWDT_RTC_RESET\020\020B\035\n\021net.xlfe.ret" +
      "icul8B\010Reticul8"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          fi.kapsi.koti.jpa.nanopb.Nanopb.getDescriptor(),
        }, assigner);
    internal_static_GPIO_CONFIG_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_GPIO_CONFIG_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_GPIO_CONFIG_descriptor,
        new java.lang.String[] { "Pin", "Mode", });
    internal_static_GPIO_MONITOR_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_GPIO_MONITOR_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_GPIO_MONITOR_descriptor,
        new java.lang.String[] { "Pin", "DebounceMs", });
    internal_static_GPIO_WRITE_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_GPIO_WRITE_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_GPIO_WRITE_descriptor,
        new java.lang.String[] { "Pin", "Value", });
    internal_static_GPIO_READ_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_GPIO_READ_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_GPIO_READ_descriptor,
        new java.lang.String[] { "Pin", });
    internal_static_OTA_UPDATE_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_OTA_UPDATE_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_OTA_UPDATE_descriptor,
        new java.lang.String[] { "Chunk", "Data", });
    internal_static_PWM_CONFIG_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_PWM_CONFIG_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_PWM_CONFIG_descriptor,
        new java.lang.String[] { "Pin", });
    internal_static_PWM_STOP_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_PWM_STOP_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_PWM_STOP_descriptor,
        new java.lang.String[] { "Pin", });
    internal_static_PWM_DUTY_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_PWM_DUTY_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_PWM_DUTY_descriptor,
        new java.lang.String[] { "Pin", "Duty", });
    internal_static_PWM_FADE_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_PWM_FADE_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_PWM_FADE_descriptor,
        new java.lang.String[] { "Pin", "Duty", "FadeMs", });
    internal_static_I2C_CONFIG_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_I2C_CONFIG_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_I2C_CONFIG_descriptor,
        new java.lang.String[] { "PinSda", "PinScl", });
    internal_static_I2C_WRITE_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_I2C_WRITE_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_I2C_WRITE_descriptor,
        new java.lang.String[] { "Device", "Len", "Data", });
    internal_static_I2C_READ_descriptor =
      getDescriptor().getMessageTypes().get(11);
    internal_static_I2C_READ_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_I2C_READ_descriptor,
        new java.lang.String[] { "Device", "Address", "Len", });
    internal_static_PING_descriptor =
      getDescriptor().getMessageTypes().get(12);
    internal_static_PING_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_PING_descriptor,
        new java.lang.String[] { "Ping", });
    internal_static_REBOOT_descriptor =
      getDescriptor().getMessageTypes().get(13);
    internal_static_REBOOT_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_REBOOT_descriptor,
        new java.lang.String[] { "Reboot", });
    internal_static_SYSINFO_descriptor =
      getDescriptor().getMessageTypes().get(14);
    internal_static_SYSINFO_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_SYSINFO_descriptor,
        new java.lang.String[] { "Sysinfo", });
    internal_static_SCHEDULE_descriptor =
      getDescriptor().getMessageTypes().get(15);
    internal_static_SCHEDULE_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_SCHEDULE_descriptor,
        new java.lang.String[] { "Count", "EveryMs", "AfterMs", });
    internal_static_RUN_NESTED_descriptor =
      getDescriptor().getMessageTypes().get(16);
    internal_static_RUN_NESTED_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_RUN_NESTED_descriptor,
        new java.lang.String[] { "Data", });
    internal_static_RPC_descriptor =
      getDescriptor().getMessageTypes().get(17);
    internal_static_RPC_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_RPC_descriptor,
        new java.lang.String[] { "GpioConfig", "GpioWrite", "GpioRead", "GpioMonitor", "PwmConfig", "PwmDuty", "PwmFade", "PwmStop", "Ping", "Sysinfo", "Reboot", "I2CConfig", "I2CWrite", "I2CRead", "OtaUpdate", "Nested", "MsgId", "Schedule", "Call", });
    internal_static_PIN_CHANGE_descriptor =
      getDescriptor().getMessageTypes().get(18);
    internal_static_PIN_CHANGE_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_PIN_CHANGE_descriptor,
        new java.lang.String[] { "Pin", "Value", });
    internal_static_RPC_RESULT_descriptor =
      getDescriptor().getMessageTypes().get(19);
    internal_static_RPC_RESULT_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_RPC_RESULT_descriptor,
        new java.lang.String[] { "Result", "PinValue", "MsgId", });
    internal_static_FROM_MICRO_descriptor =
      getDescriptor().getMessageTypes().get(20);
    internal_static_FROM_MICRO_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_FROM_MICRO_descriptor,
        new java.lang.String[] { "Result", "PinChange", "Startup", "Raw", "SchedulesRemaining", "HeapUsage", "UptimeMs", "Msg", "Data", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(fi.kapsi.koti.jpa.nanopb.Nanopb.nanopb);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    fi.kapsi.koti.jpa.nanopb.Nanopb.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
